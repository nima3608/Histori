From 4f21cd3f9241a99f2851c6b2064e1ee12520316d Mon Sep 17 00:00:00 2001
From: tstegema <tstegema@2eb42a87-3827-0410-b767-dc15055982e4>
Date: Tue, 14 Feb 2017 20:10:27 +0000
Subject: [PATCH 236/462] Mantis 0044563: Inject bag with new conveyor
 interface copy_IPS_Admin script for IPS_Admin packages

git-svn-id: svn://localhost/SelfServiceBuild/trunk@366 2eb42a87-3827-0410-b767-dc15055982e4
---
 .../Build/scripts/copy_IPS_Admin_BA.pl        | 85 +++++++++++++++++++
 .../Build/scripts/copy_IPS_Admin_EZY.pl       | 85 +++++++++++++++++++
 .../Build/scripts/copy_IPS_Admin_EZY_SSDM.pl  | 85 +++++++++++++++++++
 .../Build/scripts/copy_IPS_Admin_TOM.pl       | 85 +++++++++++++++++++
 4 files changed, 340 insertions(+)
 create mode 100644 SelfServiceBuild/Build/scripts/copy_IPS_Admin_BA.pl
 create mode 100644 SelfServiceBuild/Build/scripts/copy_IPS_Admin_EZY.pl
 create mode 100644 SelfServiceBuild/Build/scripts/copy_IPS_Admin_EZY_SSDM.pl
 create mode 100644 SelfServiceBuild/Build/scripts/copy_IPS_Admin_TOM.pl

diff --git a/SelfServiceBuild/Build/scripts/copy_IPS_Admin_BA.pl b/SelfServiceBuild/Build/scripts/copy_IPS_Admin_BA.pl
new file mode 100644
index 0000000..97c8124
--- /dev/null
+++ b/SelfServiceBuild/Build/scripts/copy_IPS_Admin_BA.pl
@@ -0,0 +1,85 @@
+#!/usr/bin/perl -w
+#
+use strict;
+our $VERSION="0.0.0.1";
+
+use Archive::Zip qw( :ERROR_CODES :CONSTANTS );
+use File::Spec;
+use File::DosGlob;
+use File::Copy::Recursive qw(fcopy dircopy);
+use File::Path qw(make_path);
+use Getopt::Long;
+use DateTime;
+
+my $destPath = "";
+my $sourceRepoPath = "";
+my $version = "0.0.0.0";
+
+my $help = 0;
+my $argv_count = $#ARGV+1;
+
+GetOptions ("destpath=s"   => \$destPath,
+            "sourcepath=s" => \$sourceRepoPath,
+            "help!"     => \$help
+            )  or die "Invalid commmand line options. Try --help\n";
+
+if( $argv_count < 2 or $argv_count > 2 or ($destPath eq "") or $help )
+{
+  print STDERR "usage: $0 --destpath=\"PATH\" --sourcepath=\"PATH\" \n" ;
+  print STDERR "example: --destpath=\"\\\\file07.one.materna.com\\ONE\\Projekte\\London_Gatwick_Airport\\02_DEV_QA_OC\\020_DEV_Entwicklung\\Übergabe_QA\\BA_IPS_Admin_V1.0.16\" \n";
+  print STDERR "         --sourcepath=\"\\\\BOB\\Subversion\\Platform\\RC-4.15.8015\" \n";
+  exit 0;
+}
+
+if (! -e $sourceRepoPath)
+{
+  die "$sourceRepoPath does not exist!\n";
+}
+if (! -e $destPath)
+{
+  print "$destPath does not exist but will be created\n";
+}  
+
+make_path(File::Spec->catdir($destPath,"IPS_Admin"));
+$destPath = "$destPath\\IPS_Admin";
+#make_path(File::Spec->catdir($destPath,"html"),
+#          File::Spec->catdir($destPath,"lib"));
+
+dircopy(File::Spec->catdir($sourceRepoPath,"SelfServicePlatform\\Applications\\AdminApplication\\html.BA"), 
+        File::Spec->catdir($destPath,"html")) or die $!;
+
+my $libDir = File::Spec->catfile($destPath,"lib");
+
+my $srcDir = File::Spec->catdir($sourceRepoPath,"SelfServiceBuild\\Build\\output\\jar");
+myCopyFile($srcDir,$libDir,"ApplicationAdapter.jar");
+myCopyFile($srcDir,$libDir,"cuss.jar");
+myCopyFile($srcDir,$libDir,"cuss.sbd.xsd.jar");
+myCopyFile($srcDir,$libDir,"massai-admin-app.jar");
+myCopyFile($srcDir,$libDir,"massai-app-adapter.jar");
+myCopyFile($srcDir,$libDir,"massai-corba-settings.jar");
+myCopyFile($srcDir,$libDir,"massai-tools.jar");
+
+my $orbDir = File::Spec->catdir($sourceRepoPath,"SelfServiceCommon\\Massai\\java\\OpenORB-1.3.1\\OpenORB\\dist");
+myCopyFile($orbDir,$libDir,"avalon-framework.jar");
+myCopyFile($orbDir,$libDir,"excalibur-configuration.jar");
+myCopyFile($orbDir,$libDir,"logkit.jar");
+myCopyFile($orbDir,$libDir,"openorb-1.3.1.jar");
+myCopyFile($orbDir,$libDir,"openorb_tools-1.3.1.jar");
+
+my $thirdPartyDir = File::Spec->catdir("\\\\BOB\\C\\Globals", "Globals\\ThirdParty");
+myCopyFile(File::Spec->catdir($thirdPartyDir,"jetty\\9.2.10.v20150310\\lib"),$libDir,"servlet-api-3.1.jar");
+myCopyFile(File::Spec->catdir($thirdPartyDir,"jetty-all\\9.2.10.v20150310"),$libDir,"jetty-all-9.2.10.v20150310.jar");
+myCopyFile(File::Spec->catdir($thirdPartyDir,"XMLBeans\\xmlbeans-2.5.0\\lib"),$libDir,"xbean.jar");
+
+
+sub myCopyFile
+{
+  my $srcDir = shift;
+  my $destDir = shift;
+  my $fname = shift;
+  
+  fcopy(File::Spec->catfile($srcDir,$fname),     
+        File::Spec->catfile($destDir,$fname)) or die "$! :\nfrom: $srcDir\nto: $destDir\nfile: $fname";
+}
+  
+exit 0;
diff --git a/SelfServiceBuild/Build/scripts/copy_IPS_Admin_EZY.pl b/SelfServiceBuild/Build/scripts/copy_IPS_Admin_EZY.pl
new file mode 100644
index 0000000..37b2eb1
--- /dev/null
+++ b/SelfServiceBuild/Build/scripts/copy_IPS_Admin_EZY.pl
@@ -0,0 +1,85 @@
+#!/usr/bin/perl -w
+#
+use strict;
+our $VERSION="0.0.0.1";
+
+use Archive::Zip qw( :ERROR_CODES :CONSTANTS );
+use File::Spec;
+use File::DosGlob;
+use File::Copy::Recursive qw(fcopy dircopy);
+use File::Path qw(make_path);
+use Getopt::Long;
+use DateTime;
+
+my $destPath = "";
+my $sourceRepoPath = "";
+my $version = "0.0.0.0";
+
+my $help = 0;
+my $argv_count = $#ARGV+1;
+
+GetOptions ("destpath=s"   => \$destPath,
+            "sourcepath=s" => \$sourceRepoPath,
+            "help!"     => \$help
+            )  or die "Invalid commmand line options. Try --help\n";
+
+if( $argv_count < 2 or $argv_count > 2 or ($destPath eq "") or $help )
+{
+  print STDERR "usage: $0 --destpath=\"PATH\" --sourcepath=\"PATH\" \n" ;
+  print STDERR "example: --destpath=\"\\\\file07.one.materna.com\\ONE\\Projekte\\London_Gatwick_Airport\\02_DEV_QA_OC\\020_DEV_Entwicklung\\Übergabe_QA\\GAL_IPS_Admin_V1.0.16\" \n";
+  print STDERR "         --sourcepath=\"\\\\BOB\\Subversion\\Platform\\RC-4.15.8015\" \n";
+  exit 0;
+}
+
+if (! -e $sourceRepoPath)
+{
+  die "$sourceRepoPath does not exist!\n";
+}
+if (! -e $destPath)
+{
+  print "$destPath does not exist but will be created\n";
+}  
+
+make_path(File::Spec->catdir($destPath,"IPS_Admin"));
+$destPath = "$destPath\\IPS_Admin";
+#make_path(File::Spec->catdir($destPath,"html"),
+#          File::Spec->catdir($destPath,"lib"));
+
+dircopy(File::Spec->catdir($sourceRepoPath,"SelfServicePlatform\\Applications\\AdminApplication\\html"), 
+        File::Spec->catdir($destPath,"html")) or die $!;
+
+my $libDir = File::Spec->catfile($destPath,"lib");
+
+my $srcDir = File::Spec->catdir($sourceRepoPath,"SelfServiceBuild\\Build\\output\\jar");
+myCopyFile($srcDir,$libDir,"ApplicationAdapter.jar");
+myCopyFile($srcDir,$libDir,"cuss.jar");
+myCopyFile($srcDir,$libDir,"cuss.sbd.xsd.jar");
+myCopyFile($srcDir,$libDir,"massai-admin-app.jar");
+myCopyFile($srcDir,$libDir,"massai-app-adapter.jar");
+myCopyFile($srcDir,$libDir,"massai-corba-settings.jar");
+myCopyFile($srcDir,$libDir,"massai-tools.jar");
+
+my $orbDir = File::Spec->catdir($sourceRepoPath,"SelfServiceCommon\\Massai\\java\\OpenORB-1.3.1\\OpenORB\\dist");
+myCopyFile($orbDir,$libDir,"avalon-framework.jar");
+myCopyFile($orbDir,$libDir,"excalibur-configuration.jar");
+myCopyFile($orbDir,$libDir,"logkit.jar");
+myCopyFile($orbDir,$libDir,"openorb-1.3.1.jar");
+myCopyFile($orbDir,$libDir,"openorb_tools-1.3.1.jar");
+
+my $thirdPartyDir = File::Spec->catdir("\\\\BOB\\C\\Globals", "Globals\\ThirdParty");
+myCopyFile(File::Spec->catdir($thirdPartyDir,"jetty\\9.2.10.v20150310\\lib"),$libDir,"servlet-api-3.1.jar");
+myCopyFile(File::Spec->catdir($thirdPartyDir,"jetty-all\\9.2.10.v20150310"),$libDir,"jetty-all-9.2.10.v20150310.jar");
+myCopyFile(File::Spec->catdir($thirdPartyDir,"XMLBeans\\xmlbeans-2.5.0\\lib"),$libDir,"xbean.jar");
+
+
+sub myCopyFile
+{
+  my $srcDir = shift;
+  my $destDir = shift;
+  my $fname = shift;
+  
+  fcopy(File::Spec->catfile($srcDir,$fname),     
+        File::Spec->catfile($destDir,$fname)) or die "$! :\nfrom: $srcDir\nto: $destDir\nfile: $fname";
+}
+  
+exit 0;
diff --git a/SelfServiceBuild/Build/scripts/copy_IPS_Admin_EZY_SSDM.pl b/SelfServiceBuild/Build/scripts/copy_IPS_Admin_EZY_SSDM.pl
new file mode 100644
index 0000000..0522fd4
--- /dev/null
+++ b/SelfServiceBuild/Build/scripts/copy_IPS_Admin_EZY_SSDM.pl
@@ -0,0 +1,85 @@
+#!/usr/bin/perl -w
+#
+use strict;
+our $VERSION="0.0.0.1";
+
+use Archive::Zip qw( :ERROR_CODES :CONSTANTS );
+use File::Spec;
+use File::DosGlob;
+use File::Copy::Recursive qw(fcopy dircopy);
+use File::Path qw(make_path);
+use Getopt::Long;
+use DateTime;
+
+my $destPath = "";
+my $sourceRepoPath = "";
+my $version = "0.0.0.0";
+
+my $help = 0;
+my $argv_count = $#ARGV+1;
+
+GetOptions ("destpath=s"   => \$destPath,
+            "sourcepath=s" => \$sourceRepoPath,
+            "help!"     => \$help
+            )  or die "Invalid commmand line options. Try --help\n";
+
+if( $argv_count < 2 or $argv_count > 2 or ($destPath eq "") or $help )
+{
+  print STDERR "usage: $0 --destpath=\"PATH\" --sourcepath=\"PATH\" \n" ;
+  print STDERR "example: --destpath=\"\\\\file07.one.materna.com\\ONE\\Projekte\\London_Gatwick_Airport\\02_DEV_QA_OC\\020_DEV_Entwicklung\\Übergabe_QA\\GAL_SSDM_IPS_Admin_V1.0.16\" \n";
+  print STDERR "         --sourcepath=\"\\\\BOB\\Subversion\\Platform\\RC-4.15.8015\" \n";
+  exit 0;
+}
+
+if (! -e $sourceRepoPath)
+{
+  die "$sourceRepoPath does not exist!\n";
+}
+if (! -e $destPath)
+{
+  print "$destPath does not exist but will be created\n";
+}  
+
+make_path(File::Spec->catdir($destPath,"IPS_Admin"));
+$destPath = "$destPath\\IPS_Admin";
+#make_path(File::Spec->catdir($destPath,"html"),
+#          File::Spec->catdir($destPath,"lib"));
+
+dircopy(File::Spec->catdir($sourceRepoPath,"SelfServicePlatform\\Applications\\AdminApplication\\html.SSDM"), 
+        File::Spec->catdir($destPath,"html")) or die $!;
+
+my $libDir = File::Spec->catfile($destPath,"lib");
+
+my $srcDir = File::Spec->catdir($sourceRepoPath,"SelfServiceBuild\\Build\\output\\jar");
+myCopyFile($srcDir,$libDir,"ApplicationAdapter.jar");
+myCopyFile($srcDir,$libDir,"cuss.jar");
+myCopyFile($srcDir,$libDir,"cuss.sbd.xsd.jar");
+myCopyFile($srcDir,$libDir,"massai-admin-app.jar");
+myCopyFile($srcDir,$libDir,"massai-app-adapter.jar");
+myCopyFile($srcDir,$libDir,"massai-corba-settings.jar");
+myCopyFile($srcDir,$libDir,"massai-tools.jar");
+
+my $orbDir = File::Spec->catdir($sourceRepoPath,"SelfServiceCommon\\Massai\\java\\OpenORB-1.3.1\\OpenORB\\dist");
+myCopyFile($orbDir,$libDir,"avalon-framework.jar");
+myCopyFile($orbDir,$libDir,"excalibur-configuration.jar");
+myCopyFile($orbDir,$libDir,"logkit.jar");
+myCopyFile($orbDir,$libDir,"openorb-1.3.1.jar");
+myCopyFile($orbDir,$libDir,"openorb_tools-1.3.1.jar");
+
+my $thirdPartyDir = File::Spec->catdir("\\\\BOB\\C\\Globals", "Globals\\ThirdParty");
+myCopyFile(File::Spec->catdir($thirdPartyDir,"jetty\\9.2.10.v20150310\\lib"),$libDir,"servlet-api-3.1.jar");
+myCopyFile(File::Spec->catdir($thirdPartyDir,"jetty-all\\9.2.10.v20150310"),$libDir,"jetty-all-9.2.10.v20150310.jar");
+myCopyFile(File::Spec->catdir($thirdPartyDir,"XMLBeans\\xmlbeans-2.5.0\\lib"),$libDir,"xbean.jar");
+
+
+sub myCopyFile
+{
+  my $srcDir = shift;
+  my $destDir = shift;
+  my $fname = shift;
+  
+  fcopy(File::Spec->catfile($srcDir,$fname),     
+        File::Spec->catfile($destDir,$fname)) or die "$! :\nfrom: $srcDir\nto: $destDir\nfile: $fname";
+}
+  
+exit 0;
diff --git a/SelfServiceBuild/Build/scripts/copy_IPS_Admin_TOM.pl b/SelfServiceBuild/Build/scripts/copy_IPS_Admin_TOM.pl
new file mode 100644
index 0000000..e8f72a6
--- /dev/null
+++ b/SelfServiceBuild/Build/scripts/copy_IPS_Admin_TOM.pl
@@ -0,0 +1,85 @@
+#!/usr/bin/perl -w
+#
+use strict;
+our $VERSION="0.0.0.1";
+
+use Archive::Zip qw( :ERROR_CODES :CONSTANTS );
+use File::Spec;
+use File::DosGlob;
+use File::Copy::Recursive qw(fcopy dircopy);
+use File::Path qw(make_path);
+use Getopt::Long;
+use DateTime;
+
+my $destPath = "";
+my $sourceRepoPath = "";
+my $version = "0.0.0.0";
+
+my $help = 0;
+my $argv_count = $#ARGV+1;
+
+GetOptions ("destpath=s"   => \$destPath,
+            "sourcepath=s" => \$sourceRepoPath,
+            "help!"     => \$help
+            )  or die "Invalid commmand line options. Try --help\n";
+
+if( $argv_count < 2 or $argv_count > 2 or ($destPath eq "") or $help )
+{
+  print STDERR "usage: $0 --destpath=\"PATH\" --sourcepath=\"PATH\" \n" ;
+  print STDERR "example: --destpath=\"\\\\file07.one.materna.com\\ONE\\Projekte\\London_Gatwick_Airport\\02_DEV_QA_OC\\020_DEV_Entwicklung\\Übergabe_QA\\TOM_IPS_Admin_V1.0.16\" \n";
+  print STDERR "         --sourcepath=\"\\\\BOB\\Subversion\\Platform\\RC-4.15.8015\" \n";
+  exit 0;
+}
+
+if (! -e $sourceRepoPath)
+{
+  die "$sourceRepoPath does not exist!\n";
+}
+if (! -e $destPath)
+{
+  print "$destPath does not exist but will be created\n";
+}  
+
+make_path(File::Spec->catdir($destPath,"IPS_Admin"));
+$destPath = "$destPath\\IPS_Admin";
+#make_path(File::Spec->catdir($destPath,"html"),
+#          File::Spec->catdir($destPath,"lib"));
+
+dircopy(File::Spec->catdir($sourceRepoPath,"SelfServicePlatform\\Applications\\AdminApplication\\html.TOM"), 
+        File::Spec->catdir($destPath,"html")) or die $!;
+
+my $libDir = File::Spec->catfile($destPath,"lib");
+
+my $srcDir = File::Spec->catdir($sourceRepoPath,"SelfServiceBuild\\Build\\output\\jar");
+myCopyFile($srcDir,$libDir,"ApplicationAdapter.jar");
+myCopyFile($srcDir,$libDir,"cuss.jar");
+myCopyFile($srcDir,$libDir,"cuss.sbd.xsd.jar");
+myCopyFile($srcDir,$libDir,"massai-admin-app.jar");
+myCopyFile($srcDir,$libDir,"massai-app-adapter.jar");
+myCopyFile($srcDir,$libDir,"massai-corba-settings.jar");
+myCopyFile($srcDir,$libDir,"massai-tools.jar");
+
+my $orbDir = File::Spec->catdir($sourceRepoPath,"SelfServiceCommon\\Massai\\java\\OpenORB-1.3.1\\OpenORB\\dist");
+myCopyFile($orbDir,$libDir,"avalon-framework.jar");
+myCopyFile($orbDir,$libDir,"excalibur-configuration.jar");
+myCopyFile($orbDir,$libDir,"logkit.jar");
+myCopyFile($orbDir,$libDir,"openorb-1.3.1.jar");
+myCopyFile($orbDir,$libDir,"openorb_tools-1.3.1.jar");
+
+my $thirdPartyDir = File::Spec->catdir("\\\\BOB\\C\\Globals", "Globals\\ThirdParty");
+myCopyFile(File::Spec->catdir($thirdPartyDir,"jetty\\9.2.10.v20150310\\lib"),$libDir,"servlet-api-3.1.jar");
+myCopyFile(File::Spec->catdir($thirdPartyDir,"jetty-all\\9.2.10.v20150310"),$libDir,"jetty-all-9.2.10.v20150310.jar");
+myCopyFile(File::Spec->catdir($thirdPartyDir,"XMLBeans\\xmlbeans-2.5.0\\lib"),$libDir,"xbean.jar");
+
+
+sub myCopyFile
+{
+  my $srcDir = shift;
+  my $destDir = shift;
+  my $fname = shift;
+  
+  fcopy(File::Spec->catfile($srcDir,$fname),     
+        File::Spec->catfile($destDir,$fname)) or die "$! :\nfrom: $srcDir\nto: $destDir\nfile: $fname";
+}
+  
+exit 0;
-- 
2.41.0.windows.1

