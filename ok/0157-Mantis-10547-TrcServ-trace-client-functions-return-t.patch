From 510a14f102004cedc45337656a2ebd5cf2c02925 Mon Sep 17 00:00:00 2001
From: tstegema <tstegema@90b65887-3827-0410-9a23-83215b262276>
Date: Fri, 21 Oct 2011 16:05:00 +0000
Subject: [PATCH 0157/1076] Mantis 10547: TrcServ: trace client functions
 return type: void

git-svn-id: svn://localhost/SelfServiceCommon/trunk@198 90b65887-3827-0410-9a23-83215b262276
---
 .../Interfaces/inc/Tools/TraceClient.h        |  22 +-
 .../Interfaces/inc/Tools/TraceDelegate.h      |  41 +-
 .../Interfaces/inc/Tools/TraceHandle.h        |  24 +-
 .../Interfaces/inc/Tools/TraceInterface.h     |  42 +-
 .../Interfaces/inc/Tools/TraceLocal.h         | 192 +++++
 .../inc/Tools/TraceLocationDelegate.h         | 421 +++++++++++
 .../Interfaces/inc/Tools/TraceSync.h          | 198 ++++++
 .../Interfaces/inc/Tools/localtrace.h         |  10 +-
 .../Massai/cpp/Tools/makefile.mak             |   3 +
 .../Massai/cpp/Tools/src/TraceClient.cpp      |  22 +-
 .../Massai/cpp/Tools/src/TraceDelegate.cpp    |  48 +-
 .../Massai/cpp/Tools/src/TraceHandle.cpp      |  22 +-
 .../Massai/cpp/Tools/src/TraceInterface.cpp   | 176 +----
 .../Massai/cpp/Tools/src/TraceLocal.cpp       | 235 +++++++
 .../cpp/Tools/src/TraceLocationDelegate.cpp   | 655 ++++++++++++++++++
 .../Massai/cpp/Tools/src/TraceSync.cpp        | 242 +++++++
 .../Massai/cpp/Tools/src/localtrace.cpp       | 116 +++-
 .../Massai/cpp/Tools/src/stringbuffer.cpp     |   4 +-
 18 files changed, 2128 insertions(+), 345 deletions(-)
 create mode 100644 SelfServiceCommon/Interfaces/inc/Tools/TraceLocal.h
 create mode 100644 SelfServiceCommon/Interfaces/inc/Tools/TraceLocationDelegate.h
 create mode 100644 SelfServiceCommon/Interfaces/inc/Tools/TraceSync.h
 create mode 100644 SelfServiceCommon/Massai/cpp/Tools/src/TraceLocal.cpp
 create mode 100644 SelfServiceCommon/Massai/cpp/Tools/src/TraceLocationDelegate.cpp
 create mode 100644 SelfServiceCommon/Massai/cpp/Tools/src/TraceSync.cpp

diff --git a/SelfServiceCommon/Interfaces/inc/Tools/TraceClient.h b/SelfServiceCommon/Interfaces/inc/Tools/TraceClient.h
index ce4596e3..3a66087d 100644
--- a/SelfServiceCommon/Interfaces/inc/Tools/TraceClient.h
+++ b/SelfServiceCommon/Interfaces/inc/Tools/TraceClient.h
@@ -43,7 +43,7 @@ namespace MASSAI
            short  sLine,
            const char* pszFunction,
            const char* pszText
-        );
+        ) const;
 
 
         /*
@@ -59,7 +59,7 @@ namespace MASSAI
            const char* pszFunction,
            long lDumpSize,
            const char* pDump
-        );
+        ) const;
 
         /*
         ---------------------------------------------------------------------------
@@ -67,7 +67,7 @@ namespace MASSAI
 
         ---------------------------------------------------------------------------
         */
-        virtual void startNewTraceFile(long lTraceLevel);
+        virtual void startNewTraceFile(long lTraceLevel) const;
 
 
         /*
@@ -83,7 +83,7 @@ namespace MASSAI
            short  sLine,
            const char* pszFunction,
            const char* pszText
-        );
+        ) const;
 
 
 
@@ -100,7 +100,7 @@ namespace MASSAI
            const char* pszFunction,
            long lDumpSize,
            const char* pDump
-        );
+        ) const;
 
         /*
         ---------------------------------------------------------------------------
@@ -108,7 +108,7 @@ namespace MASSAI
 
         ---------------------------------------------------------------------------
         */
-        virtual void startNewTraceFileForTopic(const char* pszTopic);
+        virtual void startNewTraceFileForTopic(const char* pszTopic) const;
 
 
 
@@ -125,7 +125,7 @@ namespace MASSAI
            const char* pszFunction,
            long lDumpSize,
            const char* pDump
-        );
+        ) const;
 
 
         /*
@@ -141,7 +141,7 @@ namespace MASSAI
            const char* pszFunction,
            long lDumpSize,
            const char* pDump
-        );
+        ) const;
 
 
         /*
@@ -153,7 +153,7 @@ namespace MASSAI
         virtual void moveTrace
         (
            const char* pszPath
-        );
+        ) const;
 
 
 
@@ -171,7 +171,7 @@ namespace MASSAI
            const char* pszFunction,
            long trackid,
            const char* pszTrack
-        );
+        ) const;
 
 
         /*
@@ -187,7 +187,7 @@ namespace MASSAI
            const char* pszFunction,
            long trackid,
            const char* pszTrack
-        );
+        ) const;
       private:
         bool m_close;
     };
diff --git a/SelfServiceCommon/Interfaces/inc/Tools/TraceDelegate.h b/SelfServiceCommon/Interfaces/inc/Tools/TraceDelegate.h
index 6734f34a..52b2eb45 100644
--- a/SelfServiceCommon/Interfaces/inc/Tools/TraceDelegate.h
+++ b/SelfServiceCommon/Interfaces/inc/Tools/TraceDelegate.h
@@ -27,7 +27,7 @@ namespace MASSAI
     class TraceDelegate: public TraceInterface
     {
       public:
-        TraceDelegate(TraceInterface* pDelegate);
+        TraceDelegate(const TraceInterface* pDelegate);
         ~TraceDelegate();
         /*
         ---------------------------------------------------------------------------
@@ -42,8 +42,7 @@ namespace MASSAI
            short  sLine,
            const char* pszFunction,
            const char* pszText
-        );
-
+        ) const;
 
         /*
         ---------------------------------------------------------------------------
@@ -58,7 +57,7 @@ namespace MASSAI
            const char* pszFunction,
            long lDumpSize,
            const char* pDump
-        );
+        ) const;
 
         /*
         ---------------------------------------------------------------------------
@@ -66,8 +65,7 @@ namespace MASSAI
 
         ---------------------------------------------------------------------------
         */
-        void startNewTraceFile(long lTraceLevel);
-
+        void startNewTraceFile(long lTraceLevel) const;
 
         /*
         ---------------------------------------------------------------------------
@@ -82,10 +80,7 @@ namespace MASSAI
            short  sLine,
            const char* pszFunction,
            const char* pszText
-        );
-
-
-
+        ) const;
 
         /*
         ---------------------------------------------------------------------------
@@ -100,7 +95,7 @@ namespace MASSAI
            const char* pszFunction,
            long lDumpSize,
            const char* pDump
-        );
+        ) const;
 
         /*
         ---------------------------------------------------------------------------
@@ -108,9 +103,7 @@ namespace MASSAI
 
         ---------------------------------------------------------------------------
         */
-        void startNewTraceFileForTopic(const char* pszTopic);
-
-
+        void startNewTraceFileForTopic(const char* pszTopic) const;
 
         /*
         ---------------------------------------------------------------------------
@@ -125,8 +118,7 @@ namespace MASSAI
            const char* pszFunction,
            long lDumpSize,
            const char* pDump
-        );
-
+        ) const;
 
         /*
         ---------------------------------------------------------------------------
@@ -141,8 +133,7 @@ namespace MASSAI
            const char* pszFunction,
            long lDumpSize,
            const char* pDump
-        );
-
+        ) const;
 
         /*
         ---------------------------------------------------------------------------
@@ -153,10 +144,7 @@ namespace MASSAI
         void moveTrace
         (
            const char* pszPath
-        );
-
-
-
+        ) const;
 
         /*
         ---------------------------------------------------------------------------
@@ -171,8 +159,7 @@ namespace MASSAI
            const char* pszFunction,
            long trackid,
            const char* pszTrack
-        );
-
+        ) const;
 
         /*
         ---------------------------------------------------------------------------
@@ -187,10 +174,10 @@ namespace MASSAI
            const char* pszFunction,
            long trackid,
            const char* pszTrack
-        );
+        ) const;
       private:
-        MASSAI::trace::TraceInterface* m_pDelegate;
+        const TraceInterface* m_pDelegate;
     };
   }
 }
-#endif
\ No newline at end of file
+#endif
diff --git a/SelfServiceCommon/Interfaces/inc/Tools/TraceHandle.h b/SelfServiceCommon/Interfaces/inc/Tools/TraceHandle.h
index b7b1d045..d52ad339 100644
--- a/SelfServiceCommon/Interfaces/inc/Tools/TraceHandle.h
+++ b/SelfServiceCommon/Interfaces/inc/Tools/TraceHandle.h
@@ -43,7 +43,7 @@ namespace MASSAI
            short  sLine,
            const char* pszFunction,
            const char* pszText
-        );
+        ) const;
 
 
         /*
@@ -59,7 +59,7 @@ namespace MASSAI
            const char* pszFunction,
            long lDumpSize,
            const char* pDump
-        );
+        ) const;
 
         /*
         ---------------------------------------------------------------------------
@@ -67,7 +67,7 @@ namespace MASSAI
 
         ---------------------------------------------------------------------------
         */
-        virtual void startNewTraceFile(long lTraceLevel);
+        virtual void startNewTraceFile(long lTraceLevel) const;
 
 
         /*
@@ -83,7 +83,7 @@ namespace MASSAI
            short  sLine,
            const char* pszFunction,
            const char* pszText
-        );
+        ) const;
 
 
         /*
@@ -99,7 +99,7 @@ namespace MASSAI
            const char* pszFunction,
            long lDumpSize,
            const char* pDump
-        );
+        ) const;
 
         /*
         ---------------------------------------------------------------------------
@@ -107,7 +107,7 @@ namespace MASSAI
 
         ---------------------------------------------------------------------------
         */
-        virtual void startNewTraceFileForTopic(const char* pszTopic);
+        virtual void startNewTraceFileForTopic(const char* pszTopic) const;
 
 
 
@@ -124,7 +124,7 @@ namespace MASSAI
            const char* pszFunction,
            long lDumpSize,
            const char* pDump
-        );
+        ) const;
 
 
         /*
@@ -140,7 +140,7 @@ namespace MASSAI
            const char* pszFunction,
            long lDumpSize,
            const char* pDump
-        );
+        ) const;
 
 
         /*
@@ -152,7 +152,7 @@ namespace MASSAI
         virtual void moveTrace
         (
            const char* pszPath
-        );
+        ) const;
 
 
 
@@ -170,7 +170,7 @@ namespace MASSAI
            const char* pszFunction,
            long trackid,
            const char* pszTrack
-        );
+        ) const;
 
 
         /*
@@ -186,11 +186,11 @@ namespace MASSAI
            const char* pszFunction,
            long trackid,
            const char* pszTrack
-        );
+        ) const;
       private:
         int m_handle;
         bool m_close;
     };
   }
 }
-#endif
\ No newline at end of file
+#endif
diff --git a/SelfServiceCommon/Interfaces/inc/Tools/TraceInterface.h b/SelfServiceCommon/Interfaces/inc/Tools/TraceInterface.h
index 258acd72..d33298cb 100644
--- a/SelfServiceCommon/Interfaces/inc/Tools/TraceInterface.h
+++ b/SelfServiceCommon/Interfaces/inc/Tools/TraceInterface.h
@@ -24,7 +24,6 @@ namespace MASSAI
 {
   namespace trace
   {
-
     class TraceInterface
     {
       public:
@@ -43,8 +42,7 @@ namespace MASSAI
            short  sLine,
            const char* pszFunction,
            const char* pszText
-        );
-
+        ) const = 0;
 
         /*
         ---------------------------------------------------------------------------
@@ -60,7 +58,8 @@ namespace MASSAI
           const char* pszFunction,
           const char* pszFormat,
           ...
-        );
+        ) const;
+
         /*
         ---------------------------------------------------------------------------
            Trace Dump
@@ -74,7 +73,7 @@ namespace MASSAI
            const char* pszFunction,
            long lDumpSize,
            const char* pDump
-        );
+        ) const = 0;
 
         /*
         ---------------------------------------------------------------------------
@@ -82,8 +81,7 @@ namespace MASSAI
 
         ---------------------------------------------------------------------------
         */
-        virtual void startNewTraceFile(long lTraceLevel);
-
+        virtual void startNewTraceFile(long lTraceLevel) const= 0;
 
         /*
         ---------------------------------------------------------------------------
@@ -98,8 +96,7 @@ namespace MASSAI
            short  sLine,
            const char* pszFunction,
            const char* pszText
-        );
-
+        ) const = 0;
 
         /*
         ---------------------------------------------------------------------------
@@ -115,8 +112,7 @@ namespace MASSAI
           const char* pszFunction,
           const char* pszFormat,
           ...
-        );
-
+        ) const;
 
         /*
         ---------------------------------------------------------------------------
@@ -131,7 +127,7 @@ namespace MASSAI
            const char* pszFunction,
            long lDumpSize,
            const char* pDump
-        );
+        ) const = 0;
 
         /*
         ---------------------------------------------------------------------------
@@ -139,9 +135,7 @@ namespace MASSAI
 
         ---------------------------------------------------------------------------
         */
-        virtual void startNewTraceFileForTopic(const char* pszTopic);
-
-
+        virtual void startNewTraceFileForTopic(const char* pszTopic) const = 0;
 
         /*
         ---------------------------------------------------------------------------
@@ -156,8 +150,7 @@ namespace MASSAI
            const char* pszFunction,
            long lDumpSize,
            const char* pDump
-        );
-
+        ) const = 0;
 
         /*
         ---------------------------------------------------------------------------
@@ -172,8 +165,7 @@ namespace MASSAI
            const char* pszFunction,
            long lDumpSize,
            const char* pDump
-        );
-
+        ) const = 0;
 
         /*
         ---------------------------------------------------------------------------
@@ -184,10 +176,7 @@ namespace MASSAI
         virtual void moveTrace
         (
            const char* pszPath
-        );
-
-
-
+        ) const = 0;
 
         /*
         ---------------------------------------------------------------------------
@@ -202,8 +191,7 @@ namespace MASSAI
            const char* pszFunction,
            long trackid,
            const char* pszTrack
-        );
-
+        ) const = 0;
 
         /*
         ---------------------------------------------------------------------------
@@ -218,8 +206,8 @@ namespace MASSAI
            const char* pszFunction,
            long trackid,
            const char* pszTrack
-        );
+        ) const = 0;
     };
   }
 }
-#endif
\ No newline at end of file
+#endif
diff --git a/SelfServiceCommon/Interfaces/inc/Tools/TraceLocal.h b/SelfServiceCommon/Interfaces/inc/Tools/TraceLocal.h
new file mode 100644
index 00000000..4e29e145
--- /dev/null
+++ b/SelfServiceCommon/Interfaces/inc/Tools/TraceLocal.h
@@ -0,0 +1,192 @@
+//---------------------------------------------------------------------------
+//
+//  file:       TraceLocal.h
+//
+//  purpose:    interface for traceing
+//
+//  date:       15.12.2010
+//
+//  author:     Materna Information & Communications
+//
+//  history:
+//---------------------------------------------------------------------------
+
+
+#if defined(SHOW_INCLUDE_FILES)
+#pragma message("including: " __FILE__)
+#endif
+#ifndef TRACELOCAL_H_INCLUDED
+#define TRACELOCAL_H_INCLUDED
+
+#include "Tools/TraceInterface.h"
+
+namespace MASSAI
+{
+  namespace trace
+  {
+    class TraceLocal: public TraceInterface
+    {
+      public:
+        TraceLocal(const char* pszApplication);
+        virtual ~TraceLocal();
+        /*
+        ---------------------------------------------------------------------------
+           Trace Text
+
+        ---------------------------------------------------------------------------
+        */
+        virtual void writeTraceText
+        (
+           long lTraceLevel,
+           const char* pszFile,
+           short  sLine,
+           const char* pszFunction,
+           const char* pszText
+        ) const;
+
+
+        /*
+        ---------------------------------------------------------------------------
+           Trace Dump
+        ---------------------------------------------------------------------------
+        */
+        virtual void dumpTrace
+        (
+           long lTraceLevel,
+           const char* pszFile,
+           short  sLine,
+           const char* pszFunction,
+           long lDumpSize,
+           const char* pDump
+        ) const;
+
+        /*
+        ---------------------------------------------------------------------------
+          Start new files
+
+        ---------------------------------------------------------------------------
+        */
+        virtual void startNewTraceFile(long lTraceLevel) const;
+
+
+        /*
+        ---------------------------------------------------------------------------
+           Trace Text
+
+        ---------------------------------------------------------------------------
+        */
+        virtual void writeTraceTextForTopic
+        (
+           const char* pszTopic,
+           const char* pszFile,
+           short  sLine,
+           const char* pszFunction,
+           const char* pszText
+        ) const;
+
+
+        /*
+        ---------------------------------------------------------------------------
+           Trace Dump
+        ---------------------------------------------------------------------------
+        */
+        virtual void dumpTraceForTopic
+        (
+           const char* pszTopic,
+           const char* pszFile,
+           short  sLine,
+           const char* pszFunction,
+           long lDumpSize,
+           const char* pDump
+        ) const;
+
+        /*
+        ---------------------------------------------------------------------------
+          Start new files
+
+        ---------------------------------------------------------------------------
+        */
+        virtual void startNewTraceFileForTopic(const char* pszTopic) const;
+
+
+
+        /*
+        ---------------------------------------------------------------------------
+           Trace encypted
+        ---------------------------------------------------------------------------
+        */
+        virtual void cryptTrace
+        (
+           long lTraceLevel,
+           const char* pszFile,
+           short  sLine,
+           const char* pszFunction,
+           long lDumpSize,
+           const char* pDump
+        ) const;
+
+
+        /*
+        ---------------------------------------------------------------------------
+           Trace encypted
+        ---------------------------------------------------------------------------
+        */
+        virtual void cryptTraceForTopic
+        (
+           const char* pszTopic,
+           const char* pszFile,
+           short  sLine,
+           const char* pszFunction,
+           long lDumpSize,
+           const char* pDump
+        ) const;
+
+
+        /*
+        ---------------------------------------------------------------------------
+           move file
+        ---------------------------------------------------------------------------
+        */
+
+        virtual void moveTrace
+        (
+           const char* pszPath
+        ) const;
+
+
+
+
+        /*
+        ---------------------------------------------------------------------------
+           Trace credit card track
+        ---------------------------------------------------------------------------
+        */
+        virtual void traceTrack
+        (
+           long lTraceLevel,
+           const char* pszFile,
+           short  sLine,
+           const char* pszFunction,
+           long trackid,
+           const char* pszTrack
+        ) const;
+
+
+        /*
+        ---------------------------------------------------------------------------
+           Trace credit card track
+        ---------------------------------------------------------------------------
+        */
+        virtual void traceTrackForTopic
+        (
+           const char* pszTopic,
+           const char* pszFile,
+           short  sLine,
+           const char* pszFunction,
+           long trackid,
+           const char* pszTrack
+        ) const;
+    };
+  }
+}
+#endif
diff --git a/SelfServiceCommon/Interfaces/inc/Tools/TraceLocationDelegate.h b/SelfServiceCommon/Interfaces/inc/Tools/TraceLocationDelegate.h
new file mode 100644
index 00000000..0ca7d3f8
--- /dev/null
+++ b/SelfServiceCommon/Interfaces/inc/Tools/TraceLocationDelegate.h
@@ -0,0 +1,421 @@
+//---------------------------------------------------------------------------
+//
+//  file:       TraceLocationDelegate.h
+//
+//  purpose:    interface for traceing
+//
+//  date:       15.12.2010
+//
+//  author:     Materna Information & Communications
+//
+//  history:
+//---------------------------------------------------------------------------
+
+
+#if defined(SHOW_INCLUDE_FILES)
+#pragma message("including: " __FILE__)
+#endif
+#ifndef TRACELOCATIONDELEGATE_H_INCLUDED
+#define TRACELOCATIONDELEGATE_H_INCLUDED
+
+#include "Tools/TraceInterface.h"
+
+namespace MASSAI
+{
+  namespace trace
+  {
+    class TraceLocationDelegate
+    {
+      public:
+        TraceLocationDelegate
+        (
+          const TraceInterface* pDelegate,
+          const char* pszFile,
+          short sLine,
+          const char* pszFunction
+        );
+        ~TraceLocationDelegate();
+
+        /*
+        ---------------------------------------------------------------------------
+           Trace Text
+           resulting string must be smaller than 4096 byte
+        ---------------------------------------------------------------------------
+        */
+        void writeTrace
+        (
+          long lTraceLevel,
+          const char* pszFormat,
+          ...
+        ) const;
+
+        /*
+        ---------------------------------------------------------------------------
+           Trace Text
+           resulting string must be smaller than 4096 byte
+        ---------------------------------------------------------------------------
+        */
+        void writeTraceForTopic
+        (
+          const char* pszTopic,
+          const char* pszFormat,
+          ...
+        ) const;
+
+        /*
+        ---------------------------------------------------------------------------
+           Trace Text
+
+        ---------------------------------------------------------------------------
+        */
+        void writeTraceText
+        (
+           long lTraceLevel,
+           const char* pszText
+        ) const;
+
+        /*
+        ---------------------------------------------------------------------------
+           Trace Dump
+        ---------------------------------------------------------------------------
+        */
+        void dumpTrace
+        (
+           long lTraceLevel,
+           long lDumpSize,
+           const char* pDump
+        ) const;
+
+        /*
+        ---------------------------------------------------------------------------
+          Start new files
+
+        ---------------------------------------------------------------------------
+        */
+        void startNewTraceFile(long lTraceLevel) const;
+
+        /*
+        ---------------------------------------------------------------------------
+           Trace Text
+
+        ---------------------------------------------------------------------------
+        */
+        void writeTraceTextForTopic
+        (
+           const char* pszTopic,
+           const char* pszText
+        ) const;
+
+        /*
+        ---------------------------------------------------------------------------
+           Trace Dump
+        ---------------------------------------------------------------------------
+        */
+        void dumpTraceForTopic
+        (
+           const char* pszTopic,
+           long lDumpSize,
+           const char* pDump
+        ) const;
+
+        /*
+        ---------------------------------------------------------------------------
+          Start new files
+
+        ---------------------------------------------------------------------------
+        */
+        void startNewTraceFileForTopic(const char* pszTopic) const;
+
+        /*
+        ---------------------------------------------------------------------------
+           Trace encypted
+        ---------------------------------------------------------------------------
+        */
+        void cryptTrace
+        (
+           long lTraceLevel,
+           long lDumpSize,
+           const char* pDump
+        ) const;
+
+        /*
+        ---------------------------------------------------------------------------
+           Trace encypted
+        ---------------------------------------------------------------------------
+        */
+        void cryptTraceForTopic
+        (
+           const char* pszTopic,
+           long lDumpSize,
+           const char* pDump
+        ) const;
+
+        /*
+        ---------------------------------------------------------------------------
+           move file
+        ---------------------------------------------------------------------------
+        */
+
+        void moveTrace
+        (
+           const char* pszPath
+        ) const;
+
+        /*
+        ---------------------------------------------------------------------------
+           Trace credit card track
+        ---------------------------------------------------------------------------
+        */
+        void traceTrack
+        (
+           long lTraceLevel,
+           long trackid,
+           const char* pszTrack
+        ) const;
+
+        /*
+        ---------------------------------------------------------------------------
+           Trace credit card track
+        ---------------------------------------------------------------------------
+        */
+        void traceTrackForTopic
+        (
+           const char* pszTopic,
+           long trackid,
+           const char* pszTrack
+        ) const;
+
+        const TraceInterface* getDelegate() const;
+        const char* getFile() const;
+        short getLine() const;
+        const char* getFunction() const;
+
+      private:
+        const TraceInterface* m_pDelegate;
+        const char* m_pszFile;
+        short m_sLine;
+        const char* m_pszFunction;
+    };
+
+    class TraceTopicDelegate
+    {
+      public:
+        TraceTopicDelegate(const TraceInterface* pDelegate, const char* pszTopic);
+        ~TraceTopicDelegate();
+
+        /*
+        ---------------------------------------------------------------------------
+           Trace Text
+           resulting string must be smaller than 4096 byte
+        ---------------------------------------------------------------------------
+        */
+        void writeTraceForTopic
+        (
+          const char* pszFile,
+          short  sLine,
+          const char* pszFunction,
+          const char* pszFormat,
+          ...
+        ) const;
+
+        /*
+        ---------------------------------------------------------------------------
+           Trace Text
+
+        ---------------------------------------------------------------------------
+        */
+        void writeTraceTextForTopic
+        (
+           const char* pszFile,
+           short  sLine,
+           const char* pszFunction,
+           const char* pszText
+        ) const;
+
+        /*
+        ---------------------------------------------------------------------------
+           Trace Dump
+        ---------------------------------------------------------------------------
+        */
+        void dumpTraceForTopic
+        (
+           const char* pszFile,
+           short  sLine,
+           const char* pszFunction,
+           long lDumpSize,
+           const char* pDump
+        ) const;
+
+        /*
+        ---------------------------------------------------------------------------
+          Start new files
+
+        ---------------------------------------------------------------------------
+        */
+        void startNewTraceFileForTopic() const;
+
+        /*
+        ---------------------------------------------------------------------------
+           Trace encypted
+        ---------------------------------------------------------------------------
+        */
+        void cryptTraceForTopic
+        (
+           const char* pszFile,
+           short  sLine,
+           const char* pszFunction,
+           long lDumpSize,
+           const char* pDump
+        ) const;
+
+        /*
+        ---------------------------------------------------------------------------
+           move file
+        ---------------------------------------------------------------------------
+        */
+
+        void moveTrace
+        (
+           const char* pszPath
+        ) const;
+
+        /*
+        ---------------------------------------------------------------------------
+           Trace credit card track
+        ---------------------------------------------------------------------------
+        */
+        void traceTrackForTopic
+        (
+           const char* pszFile,
+           short  sLine,
+           const char* pszFunction,
+           long trackid,
+           const char* pszTrack
+        ) const;
+
+
+        const TraceInterface* getDelegate() const;
+        const char* getTopic() const;
+
+      private:
+        const char* m_pszTopic;
+        const TraceInterface* m_pDelegate;
+    };
+
+
+    class TraceLocationTopicDelegate
+    {
+      public:
+        TraceLocationTopicDelegate
+        (
+          const TraceLocationDelegate& delegate,
+          const char* pszTopic
+        );
+        TraceLocationTopicDelegate
+        (
+          const TraceTopicDelegate& delegate,
+          const char* pszFile,
+          short sLine,
+          const char* pszFunction
+        );
+        TraceLocationTopicDelegate
+        (
+          const TraceInterface* pDelegate,
+          const char* pszTopic,
+          const char* pszFile,
+          short sLine,
+          const char* pszFunction
+        );
+        ~TraceLocationTopicDelegate();
+
+        /*
+        ---------------------------------------------------------------------------
+           Trace Text
+           resulting string must be smaller than 4096 byte
+        ---------------------------------------------------------------------------
+        */
+        void writeTraceForTopic
+        (
+          const char* pszFormat,
+          ...
+        ) const;
+        /*
+        ---------------------------------------------------------------------------
+           Trace Text
+
+        ---------------------------------------------------------------------------
+        */
+        void writeTraceTextForTopic
+        (
+           const char* pszText
+        ) const;
+
+        /*
+        ---------------------------------------------------------------------------
+           Trace Dump
+        ---------------------------------------------------------------------------
+        */
+        void dumpTraceForTopic
+        (
+           long lDumpSize,
+           const char* pDump
+        ) const;
+
+        /*
+        ---------------------------------------------------------------------------
+          Start new files
+
+        ---------------------------------------------------------------------------
+        */
+        void startNewTraceFileForTopic() const;
+
+
+        /*
+        ---------------------------------------------------------------------------
+           Trace encypted
+        ---------------------------------------------------------------------------
+        */
+        void cryptTraceForTopic
+        (
+           long lDumpSize,
+           const char* pDump
+        ) const;
+
+        /*
+        ---------------------------------------------------------------------------
+           move file
+        ---------------------------------------------------------------------------
+        */
+
+        void moveTrace
+        (
+           const char* pszPath
+        ) const;
+
+        /*
+        ---------------------------------------------------------------------------
+           Trace credit card track
+        ---------------------------------------------------------------------------
+        */
+        void traceTrackForTopic
+        (
+           long trackid,
+           const char* pszTrack
+        ) const;
+
+        const TraceInterface* getDelegate() const;
+        const char* getFile() const;
+        short getLine() const;
+        const char* getFunction() const;
+        const char* getTopic() const;
+
+      private:
+        const TraceInterface* m_pDelegate;
+        const char* m_pszFile;
+        short m_sLine;
+        const char* m_pszFunction;
+        const char* m_pszTopic;
+    };
+  }
+}
+#endif
diff --git a/SelfServiceCommon/Interfaces/inc/Tools/TraceSync.h b/SelfServiceCommon/Interfaces/inc/Tools/TraceSync.h
new file mode 100644
index 00000000..51dc049d
--- /dev/null
+++ b/SelfServiceCommon/Interfaces/inc/Tools/TraceSync.h
@@ -0,0 +1,198 @@
+//---------------------------------------------------------------------------
+//
+//  file:       TraceSync.h
+//
+//  purpose:    interface for traceing
+//
+//  date:       15.12.2010
+//
+//  author:     Materna Information & Communications
+//
+//  history:
+//---------------------------------------------------------------------------
+
+
+#if defined(SHOW_INCLUDE_FILES)
+#pragma message("including: " __FILE__)
+#endif
+#ifndef TRACESYNC_H_INCLUDED
+#define TRACESYNC_H_INCLUDED
+
+#include "Tools/TraceInterface.h"
+#include "systools/mMutexSem.hpp"
+
+namespace MASSAI
+{
+  namespace trace
+  {
+    class TraceSync: public TraceInterface
+    {
+      public:
+        TraceSync(TraceInterface& delegate);
+        ~TraceSync();
+        /*
+        ---------------------------------------------------------------------------
+           Trace Text
+
+        ---------------------------------------------------------------------------
+        */
+        void writeTraceText
+        (
+           long lTraceLevel,
+           const char* pszFile,
+           short  sLine,
+           const char* pszFunction,
+           const char* pszText
+        ) const;
+
+
+        /*
+        ---------------------------------------------------------------------------
+           Trace Dump
+        ---------------------------------------------------------------------------
+        */
+        void dumpTrace
+        (
+           long lTraceLevel,
+           const char* pszFile,
+           short  sLine,
+           const char* pszFunction,
+           long lDumpSize,
+           const char* pDump
+        ) const;
+
+        /*
+        ---------------------------------------------------------------------------
+          Start new files
+
+        ---------------------------------------------------------------------------
+        */
+        void startNewTraceFile(long lTraceLevel) const;
+
+
+        /*
+        ---------------------------------------------------------------------------
+           Trace Text
+
+        ---------------------------------------------------------------------------
+        */
+        void writeTraceTextForTopic
+        (
+           const char* pszTopic,
+           const char* pszFile,
+           short  sLine,
+           const char* pszFunction,
+           const char* pszText
+        ) const;
+
+
+
+
+        /*
+        ---------------------------------------------------------------------------
+           Trace Dump
+        ---------------------------------------------------------------------------
+        */
+        void dumpTraceForTopic
+        (
+           const char* pszTopic,
+           const char* pszFile,
+           short  sLine,
+           const char* pszFunction,
+           long lDumpSize,
+           const char* pDump
+        ) const;
+
+        /*
+        ---------------------------------------------------------------------------
+          Start new files
+
+        ---------------------------------------------------------------------------
+        */
+        void startNewTraceFileForTopic(const char* pszTopic) const;
+
+
+
+        /*
+        ---------------------------------------------------------------------------
+           Trace encypted
+        ---------------------------------------------------------------------------
+        */
+        void cryptTrace
+        (
+           long lTraceLevel,
+           const char* pszFile,
+           short  sLine,
+           const char* pszFunction,
+           long lDumpSize,
+           const char* pDump
+        ) const;
+
+
+        /*
+        ---------------------------------------------------------------------------
+           Trace encypted
+        ---------------------------------------------------------------------------
+        */
+        void cryptTraceForTopic
+        (
+           const char* pszTopic,
+           const char* pszFile,
+           short  sLine,
+           const char* pszFunction,
+           long lDumpSize,
+           const char* pDump
+        ) const;
+
+
+        /*
+        ---------------------------------------------------------------------------
+           move file
+        ---------------------------------------------------------------------------
+        */
+
+        void moveTrace
+        (
+           const char* pszPath
+        ) const;
+
+
+
+
+        /*
+        ---------------------------------------------------------------------------
+           Trace credit card track
+        ---------------------------------------------------------------------------
+        */
+        void traceTrack
+        (
+           long lTraceLevel,
+           const char* pszFile,
+           short  sLine,
+           const char* pszFunction,
+           long trackid,
+           const char* pszTrack
+        ) const;
+
+
+        /*
+        ---------------------------------------------------------------------------
+           Trace credit card track
+        ---------------------------------------------------------------------------
+        */
+        void traceTrackForTopic
+        (
+           const char* pszTopic,
+           const char* pszFile,
+           short  sLine,
+           const char* pszFunction,
+           long trackid,
+           const char* pszTrack
+        ) const;
+      private:
+        MASSAI::trace::TraceInterface& m_delegate;
+        mutable Materna::MSSD::mutexSemaphore m_access;
+    };
+  }
+}
+#endif
diff --git a/SelfServiceCommon/Interfaces/inc/Tools/localtrace.h b/SelfServiceCommon/Interfaces/inc/Tools/localtrace.h
index 9ed9d79d..3715df7f 100644
--- a/SelfServiceCommon/Interfaces/inc/Tools/localtrace.h
+++ b/SelfServiceCommon/Interfaces/inc/Tools/localtrace.h
@@ -23,10 +23,12 @@ namespace MASSAI
   namespace localtrace
   {
     void openTrace(const char* pszApplication);
-    long writeTraceText(long lTraceLevel, const char* pszFile, short sLine, const char* pszFunction, const char* pszText);
-    long wrtTrace (long lTraceLevel, const char* pszFile, short sLine, const char* pszFunction, const char* pszFormat, ...);
-    long dumpTrace(long lTraceLevel, const char* pszFile, short sLine, const char* pszFunction, long lDumpSize, const char* pDump);
-
+    void writeTraceText(long lTraceLevel, const char* pszFile, short sLine, const char* pszFunction, const char* pszText);
+    void wrtTrace (long lTraceLevel, const char* pszFile, short sLine, const char* pszFunction, const char* pszFormat, ...);
+    void dumpTrace(long lTraceLevel, const char* pszFile, short sLine, const char* pszFunction, long lDumpSize, const char* pDump);
+    void writeTraceTextForTopic(const char* pszTopic, const char* pszFile, short sLine, const char* pszFunction, const char* pszText);
+    void wrtTraceForTopic(const char* pszTopic, const char* pszFile, short sLine, const char* pszFunction, const char* pszFormat, ...);
+    void dumpTraceForTopic(const char* pszTopic, const char* pszFile, short sLine, const char* pszFunction, long lDumpSize, const char* pDump);
     void closeTrace();
   }
 
diff --git a/SelfServiceCommon/Massai/cpp/Tools/makefile.mak b/SelfServiceCommon/Massai/cpp/Tools/makefile.mak
index 9234852a..4b6b18db 100644
--- a/SelfServiceCommon/Massai/cpp/Tools/makefile.mak
+++ b/SelfServiceCommon/Massai/cpp/Tools/makefile.mak
@@ -26,6 +26,9 @@ MY_LIB1_OBJS =          $(_OBJ)\mHRTimerW32.obj \
                         $(_OBJ)\TraceDelegate.obj \
                         $(_OBJ)\TraceClient.obj \
                         $(_OBJ)\TraceHandle.obj \
+                        $(_OBJ)\TraceSync.obj \
+                        $(_OBJ)\TraceLocationDelegate.obj \
+                        $(_OBJ)\TraceLocal.obj \
                         $(_OBJ)\tracesFiler.obj \
                         $(_OBJ)\tracesMetaLFL.obj \
                         $(_OBJ)\tracesToFile.obj \
diff --git a/SelfServiceCommon/Massai/cpp/Tools/src/TraceClient.cpp b/SelfServiceCommon/Massai/cpp/Tools/src/TraceClient.cpp
index e37d7bf2..1eed7202 100644
--- a/SelfServiceCommon/Massai/cpp/Tools/src/TraceClient.cpp
+++ b/SelfServiceCommon/Massai/cpp/Tools/src/TraceClient.cpp
@@ -49,7 +49,7 @@ namespace MASSAI
        short  sLine,
        const char* pszFunction,
        const char* pszText
-    )
+    ) const
     {
       ::writeTraceText(lTraceLevel, pszFile, sLine, pszFunction, pszText);
     }
@@ -68,7 +68,7 @@ namespace MASSAI
        const char* pszFunction,
        long lDumpSize,
        const char* pDump
-    )
+    ) const
     {
       ::dumpTrace(lTraceLevel, pszFile, sLine, pszFunction, lDumpSize, pDump);
     }
@@ -80,7 +80,7 @@ namespace MASSAI
 
     ---------------------------------------------------------------------------
     */
-    void TraceClient::startNewTraceFile(long lTraceLevel)
+    void TraceClient::startNewTraceFile(long lTraceLevel) const
     {
       ::startNewTraceFile(lTraceLevel);
     }
@@ -100,7 +100,7 @@ namespace MASSAI
        short  sLine,
        const char* pszFunction,
        const char* pszText
-    )
+    ) const
     {
       ::writeTraceTextForTopic(pszTopic, pszFile, sLine, pszFunction, pszText);
     }
@@ -122,7 +122,7 @@ namespace MASSAI
        const char* pszFunction,
        long lDumpSize,
        const char* pDump
-    )
+    ) const
     {
       ::dumpTraceForTopic(pszTopic, pszFile, sLine, pszFunction, lDumpSize, pDump);
     }
@@ -134,7 +134,7 @@ namespace MASSAI
 
     ---------------------------------------------------------------------------
     */
-    void TraceClient::startNewTraceFileForTopic(const char* pszTopic)
+    void TraceClient::startNewTraceFileForTopic(const char* pszTopic) const
     {
       ::startNewTraceFileForTopic(pszTopic);
     }
@@ -155,7 +155,7 @@ namespace MASSAI
        const char* pszFunction,
        long lDumpSize,
        const char* pDump
-    )
+    ) const
     {
       ::cryptTrace(lTraceLevel, pszFile, sLine, pszFunction, lDumpSize, pDump);
     }
@@ -175,7 +175,7 @@ namespace MASSAI
        const char* pszFunction,
        long lDumpSize,
        const char* pDump
-    )
+    ) const
     {
       ::cryptTraceForTopic(pszTopic, pszFile, sLine, pszFunction, lDumpSize, pDump);
     }
@@ -191,7 +191,7 @@ namespace MASSAI
     void TraceClient::moveTrace
     (
        const char* pszPath
-    )
+    ) const
     {
       ::moveTrace(pszPath);
     }
@@ -213,7 +213,7 @@ namespace MASSAI
        const char* pszFunction,
        long trackid,
        const char* pszTrack
-    )
+    ) const
     {
       ::traceTrack(lTraceLevel, pszFile, sLine, pszFunction, trackid, pszTrack);
     }
@@ -233,7 +233,7 @@ namespace MASSAI
        const char* pszFunction,
        long trackid,
        const char* pszTrack
-    )
+    ) const
     {
       ::traceTrackForTopic(pszTopic, pszFile, sLine, pszFunction, trackid, pszTrack);
     }
diff --git a/SelfServiceCommon/Massai/cpp/Tools/src/TraceDelegate.cpp b/SelfServiceCommon/Massai/cpp/Tools/src/TraceDelegate.cpp
index fc618a7e..4a55cf03 100644
--- a/SelfServiceCommon/Massai/cpp/Tools/src/TraceDelegate.cpp
+++ b/SelfServiceCommon/Massai/cpp/Tools/src/TraceDelegate.cpp
@@ -19,11 +19,12 @@ namespace MASSAI
 {
   namespace trace
   {
-    TraceDelegate::TraceDelegate(TraceInterface* pDelegate):
+    TraceDelegate::TraceDelegate(const TraceInterface* pDelegate):
       m_pDelegate(pDelegate)
     {}
     TraceDelegate::~TraceDelegate()
     {}
+
     /*
     ---------------------------------------------------------------------------
        Trace Text
@@ -37,7 +38,7 @@ namespace MASSAI
        short  sLine,
        const char* pszFunction,
        const char* pszText
-    )
+    ) const
     {
       if(m_pDelegate)
       {
@@ -45,7 +46,6 @@ namespace MASSAI
       }
     }
 
-
     /*
     ---------------------------------------------------------------------------
        Trace Dump
@@ -59,7 +59,7 @@ namespace MASSAI
        const char* pszFunction,
        long lDumpSize,
        const char* pDump
-    )
+    ) const
     {
       if(m_pDelegate)
       {
@@ -67,14 +67,13 @@ namespace MASSAI
       }
     }
 
-
     /*
     ---------------------------------------------------------------------------
       Start new files
 
     ---------------------------------------------------------------------------
     */
-    void TraceDelegate::startNewTraceFile(long lTraceLevel)
+    void TraceDelegate::startNewTraceFile(long lTraceLevel) const
     {
       if(m_pDelegate)
       {
@@ -82,8 +81,6 @@ namespace MASSAI
       }
     }
 
-
-
     /*
     ---------------------------------------------------------------------------
        Trace Text
@@ -97,7 +94,7 @@ namespace MASSAI
        short  sLine,
        const char* pszFunction,
        const char* pszText
-    )
+    ) const
     {
       if(m_pDelegate)
       {
@@ -105,10 +102,6 @@ namespace MASSAI
       }
     }
 
-
-
-
-
     /*
     ---------------------------------------------------------------------------
        Trace Dump
@@ -122,7 +115,7 @@ namespace MASSAI
        const char* pszFunction,
        long lDumpSize,
        const char* pDump
-    )
+    ) const
     {
       if(m_pDelegate)
       {
@@ -130,14 +123,13 @@ namespace MASSAI
       }
     }
 
-
     /*
     ---------------------------------------------------------------------------
       Start new files
 
     ---------------------------------------------------------------------------
     */
-    void TraceDelegate::startNewTraceFileForTopic(const char* pszTopic)
+    void TraceDelegate::startNewTraceFileForTopic(const char* pszTopic) const
     {
       if(m_pDelegate)
       {
@@ -145,9 +137,6 @@ namespace MASSAI
       }
     }
 
-
-
-
     /*
     ---------------------------------------------------------------------------
        Trace encypted
@@ -161,7 +150,7 @@ namespace MASSAI
        const char* pszFunction,
        long lDumpSize,
        const char* pDump
-    )
+    ) const
     {
       if(m_pDelegate)
       {
@@ -169,8 +158,6 @@ namespace MASSAI
       }
     }
 
-
-
     /*
     ---------------------------------------------------------------------------
        Trace encypted
@@ -184,7 +171,7 @@ namespace MASSAI
        const char* pszFunction,
        long lDumpSize,
        const char* pDump
-    )
+    ) const
     {
       if(m_pDelegate)
       {
@@ -192,8 +179,6 @@ namespace MASSAI
       }
     }
 
-
-
     /*
     ---------------------------------------------------------------------------
        move file
@@ -203,7 +188,7 @@ namespace MASSAI
     void TraceDelegate::moveTrace
     (
        const char* pszPath
-    )
+    ) const
     {
       if(m_pDelegate)
       {
@@ -211,10 +196,6 @@ namespace MASSAI
       }
     }
 
-
-
-
-
     /*
     ---------------------------------------------------------------------------
        Trace credit card track
@@ -228,7 +209,7 @@ namespace MASSAI
        const char* pszFunction,
        long trackid,
        const char* pszTrack
-    )
+    ) const
     {
       if(m_pDelegate)
       {
@@ -236,8 +217,6 @@ namespace MASSAI
       }
     }
 
-
-
     /*
     ---------------------------------------------------------------------------
        Trace credit card track
@@ -251,13 +230,12 @@ namespace MASSAI
        const char* pszFunction,
        long trackid,
        const char* pszTrack
-    )
+    ) const
     {
       if(m_pDelegate)
       {
         m_pDelegate->traceTrackForTopic(pszTopic, pszFile, sLine, pszFunction, trackid, pszTrack);
       }
     }
-
   }
 }
diff --git a/SelfServiceCommon/Massai/cpp/Tools/src/TraceHandle.cpp b/SelfServiceCommon/Massai/cpp/Tools/src/TraceHandle.cpp
index 3f71aee2..ef497085 100644
--- a/SelfServiceCommon/Massai/cpp/Tools/src/TraceHandle.cpp
+++ b/SelfServiceCommon/Massai/cpp/Tools/src/TraceHandle.cpp
@@ -50,7 +50,7 @@ namespace MASSAI
        short  sLine,
        const char* pszFunction,
        const char* pszText
-    )
+    ) const
     {
       ::writeTraceText(m_handle, lTraceLevel, pszFile, sLine, pszFunction, pszText);
     }
@@ -69,7 +69,7 @@ namespace MASSAI
        const char* pszFunction,
        long lDumpSize,
        const char* pDump
-    )
+    ) const
     {
       ::dumpTrace(m_handle, lTraceLevel, pszFile, sLine, pszFunction, lDumpSize, pDump);
     }
@@ -81,7 +81,7 @@ namespace MASSAI
 
     ---------------------------------------------------------------------------
     */
-    void TraceHandle::startNewTraceFile(long lTraceLevel)
+    void TraceHandle::startNewTraceFile(long lTraceLevel) const
     {
       ::startNewTraceFile(m_handle, lTraceLevel);
     }
@@ -101,7 +101,7 @@ namespace MASSAI
        short  sLine,
        const char* pszFunction,
        const char* pszText
-    )
+    ) const
     {
       ::writeTraceTextForTopic(m_handle, pszTopic, pszFile, sLine, pszFunction, pszText);
     }
@@ -123,7 +123,7 @@ namespace MASSAI
        const char* pszFunction,
        long lDumpSize,
        const char* pDump
-    )
+    ) const
     {
       ::dumpTraceForTopic(m_handle, pszTopic, pszFile, sLine, pszFunction, lDumpSize, pDump);
     }
@@ -135,7 +135,7 @@ namespace MASSAI
 
     ---------------------------------------------------------------------------
     */
-    void TraceHandle::startNewTraceFileForTopic(const char* pszTopic)
+    void TraceHandle::startNewTraceFileForTopic(const char* pszTopic) const
     {
       ::startNewTraceFileForTopic(m_handle, pszTopic);
     }
@@ -156,7 +156,7 @@ namespace MASSAI
        const char* pszFunction,
        long lDumpSize,
        const char* pDump
-    )
+    ) const
     {
       ::cryptTrace(m_handle, lTraceLevel, pszFile, sLine, pszFunction, lDumpSize, pDump);
     }
@@ -176,7 +176,7 @@ namespace MASSAI
        const char* pszFunction,
        long lDumpSize,
        const char* pDump
-    )
+    ) const
     {
       ::cryptTraceForTopic(m_handle, pszTopic, pszFile, sLine, pszFunction, lDumpSize, pDump);
     }
@@ -192,7 +192,7 @@ namespace MASSAI
     void TraceHandle::moveTrace
     (
        const char* pszPath
-    )
+    ) const
     {
       ::moveTrace(m_handle, pszPath);
     }
@@ -214,7 +214,7 @@ namespace MASSAI
        const char* pszFunction,
        long trackid,
        const char* pszTrack
-    )
+    ) const
     {
       ::traceTrack(m_handle, lTraceLevel, pszFile, sLine, pszFunction, trackid, pszTrack);
     }
@@ -234,7 +234,7 @@ namespace MASSAI
        const char* pszFunction,
        long trackid,
        const char* pszTrack
-    )
+    ) const
     {
       ::traceTrackForTopic(m_handle, pszTopic, pszFile, sLine, pszFunction, trackid, pszTrack);
     }
diff --git a/SelfServiceCommon/Massai/cpp/Tools/src/TraceInterface.cpp b/SelfServiceCommon/Massai/cpp/Tools/src/TraceInterface.cpp
index 9db5c509..6d40ebf7 100644
--- a/SelfServiceCommon/Massai/cpp/Tools/src/TraceInterface.cpp
+++ b/SelfServiceCommon/Massai/cpp/Tools/src/TraceInterface.cpp
@@ -33,22 +33,6 @@ namespace MASSAI
     {}
     TraceInterface::~TraceInterface()
     {}
-    /*
-    ---------------------------------------------------------------------------
-       Trace Text
-
-    ---------------------------------------------------------------------------
-    */
-    void TraceInterface::writeTraceText
-    (
-       long lTraceLevel,
-       const char* pszFile,
-       short  sLine,
-       const char* pszFunction,
-       const char* pszText
-    )
-    {}
-
 
     /*
     ---------------------------------------------------------------------------
@@ -64,7 +48,7 @@ namespace MASSAI
       const char* pszFunction,
       const char* pszFormat,
       ...
-    )
+    ) const
     {
       va_list arg_ptr;
       va_start(arg_ptr, pszFormat);
@@ -72,50 +56,8 @@ namespace MASSAI
       _vsnprintf(buffer, sizeof(buffer), pszFormat, arg_ptr);
       buffer[sizeof(buffer)-1]= 0;
       writeTraceText(lTraceLevel, pszFile, sLine, pszFunction, buffer);
-      va_end( arg_ptr);
+      va_end(arg_ptr);
     }
-    /*
-    ---------------------------------------------------------------------------
-       Trace Dump
-    ---------------------------------------------------------------------------
-    */
-    void TraceInterface::dumpTrace
-    (
-       long lTraceLevel,
-       const char* pszFile,
-       short  sLine,
-       const char* pszFunction,
-       long lDumpSize,
-       const char* pDump
-    )
-    {}
-
-    /*
-    ---------------------------------------------------------------------------
-      Start new files
-
-    ---------------------------------------------------------------------------
-    */
-    void TraceInterface::startNewTraceFile(long lTraceLevel)
-    {}
-
-
-    /*
-    ---------------------------------------------------------------------------
-       Trace Text
-
-    ---------------------------------------------------------------------------
-    */
-    void TraceInterface::writeTraceTextForTopic
-    (
-       const char* pszTopic,
-       const char* pszFile,
-       short  sLine,
-       const char* pszFunction,
-       const char* pszText
-    )
-    {}
-
 
     /*
     ---------------------------------------------------------------------------
@@ -131,7 +73,7 @@ namespace MASSAI
       const char* pszFunction,
       const char* pszFormat,
       ...
-    )
+    ) const
     {
       va_list arg_ptr;
       va_start(arg_ptr, pszFormat);
@@ -139,117 +81,7 @@ namespace MASSAI
       _vsnprintf(buffer, sizeof(buffer), pszFormat, arg_ptr);
       buffer[sizeof(buffer)-1]= 0;
       writeTraceTextForTopic(pszTopic, pszFile, sLine, pszFunction, buffer);
-      va_end( arg_ptr);
+      va_end(arg_ptr);
     }
-
-
-    /*
-    ---------------------------------------------------------------------------
-       Trace Dump
-    ---------------------------------------------------------------------------
-    */
-    void TraceInterface::dumpTraceForTopic
-    (
-       const char* pszTopic,
-       const char* pszFile,
-       short  sLine,
-       const char* pszFunction,
-       long lDumpSize,
-       const char* pDump
-    )
-    {}
-
-    /*
-    ---------------------------------------------------------------------------
-      Start new files
-
-    ---------------------------------------------------------------------------
-    */
-    void TraceInterface::startNewTraceFileForTopic(const char* pszTopic)
-    {}
-
-
-
-    /*
-    ---------------------------------------------------------------------------
-       Trace encypted
-    ---------------------------------------------------------------------------
-    */
-    void TraceInterface::cryptTrace
-    (
-       long lTraceLevel,
-       const char* pszFile,
-       short  sLine,
-       const char* pszFunction,
-       long lDumpSize,
-       const char* pDump
-    )
-    {}
-
-
-    /*
-    ---------------------------------------------------------------------------
-       Trace encypted
-    ---------------------------------------------------------------------------
-    */
-    void TraceInterface::cryptTraceForTopic
-    (
-       const char* pszTopic,
-       const char* pszFile,
-       short  sLine,
-       const char* pszFunction,
-       long lDumpSize,
-       const char* pDump
-    )
-    {}
-
-
-    /*
-    ---------------------------------------------------------------------------
-       move file
-    ---------------------------------------------------------------------------
-    */
-
-    void TraceInterface::moveTrace
-    (
-       const char* pszPath
-    )
-    {}
-
-
-
-
-    /*
-    ---------------------------------------------------------------------------
-       Trace credit card track
-    ---------------------------------------------------------------------------
-    */
-    void TraceInterface::traceTrack
-    (
-       long lTraceLevel,
-       const char* pszFile,
-       short  sLine,
-       const char* pszFunction,
-       long trackid,
-       const char* pszTrack
-    )
-    {}
-
-
-    /*
-    ---------------------------------------------------------------------------
-       Trace credit card track
-    ---------------------------------------------------------------------------
-    */
-    void TraceInterface::traceTrackForTopic
-    (
-       const char* pszTopic,
-       const char* pszFile,
-       short  sLine,
-       const char* pszFunction,
-       long trackid,
-       const char* pszTrack
-    )
-    {}
   }
 }
diff --git a/SelfServiceCommon/Massai/cpp/Tools/src/TraceLocal.cpp b/SelfServiceCommon/Massai/cpp/Tools/src/TraceLocal.cpp
new file mode 100644
index 00000000..7169e84d
--- /dev/null
+++ b/SelfServiceCommon/Massai/cpp/Tools/src/TraceLocal.cpp
@@ -0,0 +1,235 @@
+//---------------------------------------------------------------------------
+//
+//  file:       TraceLocal.cpp
+//
+//  purpose:    interface for traceing
+//
+//  date:       15.12.2010
+//
+//  author:     Materna Information & Communications
+//
+//  history:
+//---------------------------------------------------------------------------
+
+
+#include "Tools/TraceLocal.h"
+#include "Tools/localtrace.h"
+
+
+
+namespace MASSAI
+{
+  namespace trace
+  {
+    TraceLocal::TraceLocal(const char* pszApplication)
+    {
+      MASSAI::localtrace::openTrace(pszApplication);
+    }
+
+    TraceLocal::~TraceLocal()
+    {
+      MASSAI::localtrace::closeTrace();
+    }
+    /*
+    ---------------------------------------------------------------------------
+       Trace Text
+
+    ---------------------------------------------------------------------------
+    */
+    void TraceLocal::writeTraceText
+    (
+       long lTraceLevel,
+       const char* pszFile,
+       short  sLine,
+       const char* pszFunction,
+       const char* pszText
+    ) const
+    {
+      MASSAI::localtrace::writeTraceText(lTraceLevel, pszFile, sLine, pszFunction, pszText);
+    }
+
+
+    /*
+    ---------------------------------------------------------------------------
+       Trace Dump
+    ---------------------------------------------------------------------------
+    */
+    void TraceLocal::dumpTrace
+    (
+       long lTraceLevel,
+       const char* pszFile,
+       short  sLine,
+       const char* pszFunction,
+       long lDumpSize,
+       const char* pDump
+    ) const
+    {
+      MASSAI::localtrace::dumpTrace(lTraceLevel, pszFile, sLine, pszFunction, lDumpSize, pDump);
+    }
+
+
+    /*
+    ---------------------------------------------------------------------------
+      Start new files
+
+    ---------------------------------------------------------------------------
+    */
+    void TraceLocal::startNewTraceFile(long lTraceLevel) const
+    {
+      // MASSAI::localtrace::startNewTraceFile(lTraceLevel);
+    }
+
+
+
+    /*
+    ---------------------------------------------------------------------------
+       Trace Text
+
+    ---------------------------------------------------------------------------
+    */
+    void TraceLocal::writeTraceTextForTopic
+    (
+       const char* pszTopic,
+       const char* pszFile,
+       short  sLine,
+       const char* pszFunction,
+       const char* pszText
+    ) const
+    {
+      MASSAI::localtrace::writeTraceTextForTopic(pszTopic, pszFile, sLine, pszFunction, pszText);
+    }
+
+
+
+
+
+    /*
+    ---------------------------------------------------------------------------
+       Trace Dump
+    ---------------------------------------------------------------------------
+    */
+    void TraceLocal::dumpTraceForTopic
+    (
+       const char* pszTopic,
+       const char* pszFile,
+       short  sLine,
+       const char* pszFunction,
+       long lDumpSize,
+       const char* pDump
+    ) const
+    {
+      MASSAI::localtrace::dumpTraceForTopic(pszTopic, pszFile, sLine, pszFunction, lDumpSize, pDump);
+    }
+
+
+    /*
+    ---------------------------------------------------------------------------
+      Start new files
+
+    ---------------------------------------------------------------------------
+    */
+    void TraceLocal::startNewTraceFileForTopic(const char* pszTopic) const
+    {
+      // MASSAI::localtrace::startNewTraceFileForTopic(pszTopic);
+    }
+
+
+
+
+    /*
+    ---------------------------------------------------------------------------
+       Trace encypted
+    ---------------------------------------------------------------------------
+    */
+    void TraceLocal::cryptTrace
+    (
+       long lTraceLevel,
+       const char* pszFile,
+       short  sLine,
+       const char* pszFunction,
+       long lDumpSize,
+       const char* pDump
+    ) const
+    {
+      // MASSAI::localtrace::cryptTrace(lTraceLevel, pszFile, sLine, pszFunction, lDumpSize, pDump);
+    }
+
+
+
+    /*
+    ---------------------------------------------------------------------------
+       Trace encypted
+    ---------------------------------------------------------------------------
+    */
+    void TraceLocal::cryptTraceForTopic
+    (
+       const char* pszTopic,
+       const char* pszFile,
+       short  sLine,
+       const char* pszFunction,
+       long lDumpSize,
+       const char* pDump
+    ) const
+    {
+      // MASSAI::localtrace::cryptTraceForTopic(pszTopic, pszFile, sLine, pszFunction, lDumpSize, pDump);
+    }
+
+
+
+    /*
+    ---------------------------------------------------------------------------
+       move file
+    ---------------------------------------------------------------------------
+    */
+
+    void TraceLocal::moveTrace
+    (
+       const char* pszPath
+    ) const
+    {
+      // MASSAI::localtrace::moveTrace(pszPath);
+    }
+
+
+
+
+
+    /*
+    ---------------------------------------------------------------------------
+       Trace credit card track
+    ---------------------------------------------------------------------------
+    */
+    void TraceLocal::traceTrack
+    (
+       long lTraceLevel,
+       const char* pszFile,
+       short  sLine,
+       const char* pszFunction,
+       long trackid,
+       const char* pszTrack
+    ) const
+    {
+      // MASSAI::localtrace::traceTrack(lTraceLevel, pszFile, sLine, pszFunction, trackid, pszTrack);
+    }
+
+
+
+    /*
+    ---------------------------------------------------------------------------
+       Trace credit card track
+    ---------------------------------------------------------------------------
+    */
+    void TraceLocal::traceTrackForTopic
+    (
+       const char* pszTopic,
+       const char* pszFile,
+       short  sLine,
+       const char* pszFunction,
+       long trackid,
+       const char* pszTrack
+    ) const
+    {
+      // MASSAI::localtrace::traceTrackForTopic(pszTopic, pszFile, sLine, pszFunction, trackid, pszTrack);
+    }
+  }
+}
diff --git a/SelfServiceCommon/Massai/cpp/Tools/src/TraceLocationDelegate.cpp b/SelfServiceCommon/Massai/cpp/Tools/src/TraceLocationDelegate.cpp
new file mode 100644
index 00000000..180bbc75
--- /dev/null
+++ b/SelfServiceCommon/Massai/cpp/Tools/src/TraceLocationDelegate.cpp
@@ -0,0 +1,655 @@
+//---------------------------------------------------------------------------
+//
+//  file:       TraceLocationDelegate.cpp
+//
+//  purpose:    interface for traceing
+//
+//  date:       15.12.2010
+//
+//  author:     Materna Information & Communications
+//
+//  history:
+//---------------------------------------------------------------------------
+
+
+#include "Tools/TraceLocationDelegate.h"
+#include "Tools/TraceInterface.h"
+#include <stdarg.h>
+#include <stdio.h>
+
+namespace
+{
+  enum CONSTS
+  {
+    BUFFERSIZE= 4096
+  };
+}
+
+
+
+namespace MASSAI
+{
+  namespace trace
+  {
+    TraceLocationDelegate::TraceLocationDelegate
+    (
+      const TraceInterface* pDelegate,
+      const char* pszFile,
+      short sLine,
+      const char* pszFunction
+    ):
+      m_pDelegate(pDelegate),
+      m_pszFile(m_pszFile),
+      m_sLine(m_sLine),
+      m_pszFunction(m_pszFunction)
+    {}
+    TraceLocationDelegate::~TraceLocationDelegate()
+    {}
+
+
+    /*
+    ---------------------------------------------------------------------------
+       Trace Text
+       resulting string must be smaller than 4096 byte
+    ---------------------------------------------------------------------------
+    */
+    void TraceLocationDelegate::writeTrace
+    (
+      long lTraceLevel,
+      const char* pszFormat,
+      ...
+    ) const
+    {
+      va_list arg_ptr;
+      va_start(arg_ptr, pszFormat);
+      char buffer[BUFFERSIZE];
+      _vsnprintf(buffer, sizeof(buffer), pszFormat, arg_ptr);
+      buffer[sizeof(buffer)-1]= 0;
+      if(m_pDelegate)
+      {
+        m_pDelegate->writeTraceText(lTraceLevel, m_pszFile, m_sLine, m_pszFunction, buffer);
+      }
+      va_end(arg_ptr);
+
+    }
+
+    /*
+    ---------------------------------------------------------------------------
+       Trace Text
+       resulting string must be smaller than 4096 byte
+    ---------------------------------------------------------------------------
+    */
+    void TraceLocationDelegate::writeTraceForTopic
+    (
+      const char* pszTopic,
+      const char* pszFormat,
+      ...
+    ) const
+    {
+      va_list arg_ptr;
+      va_start(arg_ptr, pszFormat);
+      char buffer[BUFFERSIZE];
+      _vsnprintf(buffer, sizeof(buffer), pszFormat, arg_ptr);
+      buffer[sizeof(buffer)-1]= 0;
+      if(m_pDelegate)
+      {
+        m_pDelegate->writeTraceTextForTopic(pszTopic, m_pszFile, m_sLine, m_pszFunction, buffer);
+      }
+      va_end(arg_ptr);
+    }
+
+    /*
+    ---------------------------------------------------------------------------
+       Trace Text
+
+    ---------------------------------------------------------------------------
+    */
+    void TraceLocationDelegate::writeTraceText
+    (
+       long lTraceLevel,
+       const char* pszText
+    ) const
+    {
+      if(m_pDelegate)
+      {
+        m_pDelegate->writeTraceText(lTraceLevel, m_pszFile, m_sLine, m_pszFunction, pszText);
+      }
+    }
+
+    /*
+    ---------------------------------------------------------------------------
+       Trace Dump
+    ---------------------------------------------------------------------------
+    */
+    void TraceLocationDelegate::dumpTrace
+    (
+       long lTraceLevel,
+       long lDumpSize,
+       const char* pDump
+    ) const
+    {
+      if(m_pDelegate)
+      {
+        m_pDelegate->dumpTrace(lTraceLevel, m_pszFile, m_sLine, m_pszFunction, lDumpSize, pDump);
+      }
+    }
+
+    /*
+    ---------------------------------------------------------------------------
+      Start new files
+
+    ---------------------------------------------------------------------------
+    */
+    void TraceLocationDelegate::startNewTraceFile(long lTraceLevel) const
+    {
+      if(m_pDelegate)
+      {
+        m_pDelegate->startNewTraceFile(lTraceLevel);
+      }
+    }
+
+    /*
+    ---------------------------------------------------------------------------
+       Trace Text
+
+    ---------------------------------------------------------------------------
+    */
+    void TraceLocationDelegate::writeTraceTextForTopic
+    (
+       const char* pszTopic,
+       const char* pszText
+    ) const
+    {
+      if(m_pDelegate)
+      {
+        m_pDelegate->writeTraceTextForTopic(pszTopic, m_pszFile, m_sLine, m_pszFunction, pszText);
+      }
+    }
+
+    /*
+    ---------------------------------------------------------------------------
+       Trace Dump
+    ---------------------------------------------------------------------------
+    */
+    void TraceLocationDelegate::dumpTraceForTopic
+    (
+       const char* pszTopic,
+       long lDumpSize,
+       const char* pDump
+    ) const
+    {
+      if(m_pDelegate)
+      {
+        m_pDelegate->dumpTraceForTopic(pszTopic, m_pszFile, m_sLine, m_pszFunction, lDumpSize, pDump);
+      }
+    }
+
+    /*
+    ---------------------------------------------------------------------------
+      Start new files
+
+    ---------------------------------------------------------------------------
+    */
+    void TraceLocationDelegate::startNewTraceFileForTopic(const char* pszTopic) const
+    {
+      if(m_pDelegate)
+      {
+        m_pDelegate->startNewTraceFileForTopic(pszTopic);
+      }
+    }
+
+    /*
+    ---------------------------------------------------------------------------
+       Trace encypted
+    ---------------------------------------------------------------------------
+    */
+    void TraceLocationDelegate::cryptTrace
+    (
+       long lTraceLevel,
+       long lDumpSize,
+       const char* pDump
+    ) const
+    {
+      if(m_pDelegate)
+      {
+        m_pDelegate->cryptTrace(lTraceLevel, m_pszFile, m_sLine, m_pszFunction, lDumpSize, pDump);
+      }
+    }
+
+    /*
+    ---------------------------------------------------------------------------
+       Trace encypted
+    ---------------------------------------------------------------------------
+    */
+    void TraceLocationDelegate::cryptTraceForTopic
+    (
+       const char* pszTopic,
+       long lDumpSize,
+       const char* pDump
+    ) const
+    {
+      if(m_pDelegate)
+      {
+        m_pDelegate->cryptTraceForTopic(pszTopic, m_pszFile, m_sLine, m_pszFunction, lDumpSize, pDump);
+      }
+    }
+
+    /*
+    ---------------------------------------------------------------------------
+       move file
+    ---------------------------------------------------------------------------
+    */
+
+    void TraceLocationDelegate::moveTrace
+    (
+       const char* pszPath
+    ) const
+    {
+      if(m_pDelegate)
+      {
+        m_pDelegate->moveTrace(pszPath);
+      }
+    }
+
+    /*
+    ---------------------------------------------------------------------------
+       Trace credit card track
+    ---------------------------------------------------------------------------
+    */
+    void TraceLocationDelegate::traceTrack
+    (
+       long lTraceLevel,
+       long trackid,
+       const char* pszTrack
+    ) const
+    {
+      if(m_pDelegate)
+      {
+        m_pDelegate->traceTrack(lTraceLevel, m_pszFile, m_sLine, m_pszFunction, trackid, pszTrack);
+      }
+    }
+
+    /*
+    ---------------------------------------------------------------------------
+       Trace credit card track
+    ---------------------------------------------------------------------------
+    */
+    void TraceLocationDelegate::traceTrackForTopic
+    (
+       const char* pszTopic,
+       long trackid,
+       const char* pszTrack
+    ) const
+    {
+      if(m_pDelegate)
+      {
+        m_pDelegate->traceTrackForTopic(pszTopic, m_pszFile, m_sLine, m_pszFunction, trackid, pszTrack);
+      }
+    }
+
+    const TraceInterface* TraceLocationDelegate::getDelegate() const
+    {
+      return m_pDelegate;
+    }
+    const char* TraceLocationDelegate::getFile() const
+    {
+      return m_pszFile;
+    }
+    short TraceLocationDelegate::getLine() const
+    {
+      return m_sLine;
+    }
+    const char* TraceLocationDelegate::getFunction() const
+    {
+      return m_pszFunction;
+    }
+
+
+
+    TraceTopicDelegate::TraceTopicDelegate(const TraceInterface* pDelegate, const char* pszTopic):
+      m_pDelegate(pDelegate),
+      m_pszTopic(pszTopic)
+    {}
+    TraceTopicDelegate::~TraceTopicDelegate()
+    {}
+
+
+    /*
+    ---------------------------------------------------------------------------
+       Trace Text
+       resulting string must be smaller than 4096 byte
+    ---------------------------------------------------------------------------
+    */
+    void TraceTopicDelegate::writeTraceForTopic
+    (
+      const char* pszFile,
+      short  sLine,
+      const char* pszFunction,
+      const char* pszFormat,
+      ...
+    ) const
+    {
+      va_list arg_ptr;
+      va_start(arg_ptr, pszFormat);
+      char buffer[BUFFERSIZE];
+      _vsnprintf(buffer, sizeof(buffer), pszFormat, arg_ptr);
+      buffer[sizeof(buffer)-1]= 0;
+      if(m_pDelegate)
+      {
+        m_pDelegate->writeTraceTextForTopic(m_pszTopic, pszFile, sLine, pszFunction, buffer);
+      }
+      va_end(arg_ptr);
+    }
+
+    /*
+    ---------------------------------------------------------------------------
+       Trace Text
+
+    ---------------------------------------------------------------------------
+    */
+    void TraceTopicDelegate::writeTraceTextForTopic
+    (
+       const char* pszFile,
+       short  sLine,
+       const char* pszFunction,
+       const char* pszText
+    ) const
+    {
+      if(m_pDelegate)
+      {
+        m_pDelegate->writeTraceTextForTopic(m_pszTopic, pszFile, sLine, pszFunction, pszText);
+      }
+    }
+
+    /*
+    ---------------------------------------------------------------------------
+       Trace Dump
+    ---------------------------------------------------------------------------
+    */
+    void TraceTopicDelegate::dumpTraceForTopic
+    (
+       const char* pszFile,
+       short  sLine,
+       const char* pszFunction,
+       long lDumpSize,
+       const char* pDump
+    ) const
+    {
+      if(m_pDelegate)
+      {
+        m_pDelegate->dumpTraceForTopic(m_pszTopic, pszFile, sLine, pszFunction, lDumpSize, pDump);
+      }
+    }
+
+    /*
+    ---------------------------------------------------------------------------
+      Start new files
+
+    ---------------------------------------------------------------------------
+    */
+    void TraceTopicDelegate::startNewTraceFileForTopic() const
+    {
+      if(m_pDelegate)
+      {
+        m_pDelegate->startNewTraceFileForTopic(m_pszTopic);
+      }
+    }
+
+    /*
+    ---------------------------------------------------------------------------
+       Trace encypted
+    ---------------------------------------------------------------------------
+    */
+    void TraceTopicDelegate::cryptTraceForTopic
+    (
+       const char* pszFile,
+       short  sLine,
+       const char* pszFunction,
+       long lDumpSize,
+       const char* pDump
+    ) const
+    {
+      if(m_pDelegate)
+      {
+        m_pDelegate->cryptTraceForTopic(m_pszTopic, pszFile, sLine, pszFunction, lDumpSize, pDump);
+      }
+    }
+
+    /*
+    ---------------------------------------------------------------------------
+       move file
+    ---------------------------------------------------------------------------
+    */
+
+    void TraceTopicDelegate::moveTrace
+    (
+       const char* pszPath
+    ) const
+    {
+      if(m_pDelegate)
+      {
+        m_pDelegate->moveTrace(pszPath);
+      }
+    }
+
+
+    /*
+    ---------------------------------------------------------------------------
+       Trace credit card track
+    ---------------------------------------------------------------------------
+    */
+    void TraceTopicDelegate::traceTrackForTopic
+    (
+       const char* pszFile,
+       short  sLine,
+       const char* pszFunction,
+       long trackid,
+       const char* pszTrack
+    ) const
+    {
+      if(m_pDelegate)
+      {
+        m_pDelegate->traceTrackForTopic(m_pszTopic, pszFile, sLine, pszFunction, trackid, pszTrack);
+      }
+    }
+
+    const TraceInterface* TraceTopicDelegate::getDelegate() const
+    {
+      return m_pDelegate;
+    }
+
+    const char* TraceTopicDelegate::getTopic() const
+    {
+      return m_pszTopic;
+    }
+
+
+    TraceLocationTopicDelegate::TraceLocationTopicDelegate
+    (
+      const TraceTopicDelegate& delegate,
+      const char* pszFile,
+      short sLine,
+      const char* pszFunction
+    ):
+      m_pDelegate(delegate.getDelegate()),
+      m_pszTopic(delegate.getTopic()),
+      m_pszFile(pszFile),
+      m_sLine(sLine),
+      m_pszFunction(pszFunction)
+    {}
+
+    TraceLocationTopicDelegate::TraceLocationTopicDelegate
+    (
+      const TraceLocationDelegate& delegate,
+      const char* pszTopic
+    ):
+      m_pDelegate(delegate.getDelegate()),
+      m_pszTopic(pszTopic),
+      m_pszFile(delegate.getFile()),
+      m_sLine(delegate.getLine()),
+      m_pszFunction(delegate.getFunction())
+    {}
+
+    TraceLocationTopicDelegate::TraceLocationTopicDelegate
+    (
+      const TraceInterface* pDelegate,
+      const char* pszTopic,
+      const char* pszFile,
+      short sLine,
+      const char* pszFunction
+    ):
+      m_pDelegate(pDelegate),
+      m_pszTopic(pszTopic),
+      m_pszFile(pszFile),
+      m_sLine(sLine),
+      m_pszFunction(pszFunction)
+    {}
+    TraceLocationTopicDelegate::~TraceLocationTopicDelegate()
+    {}
+
+
+    /*
+    ---------------------------------------------------------------------------
+       Trace Text
+       resulting string must be smaller than 4096 byte
+    ---------------------------------------------------------------------------
+    */
+    void TraceLocationTopicDelegate::writeTraceForTopic
+    (
+      const char* pszFormat,
+      ...
+    ) const
+    {
+      va_list arg_ptr;
+      va_start(arg_ptr, pszFormat);
+      char buffer[BUFFERSIZE];
+      _vsnprintf(buffer, sizeof(buffer), pszFormat, arg_ptr);
+      buffer[sizeof(buffer)-1]= 0;
+      if(m_pDelegate)
+      {
+        m_pDelegate->writeTraceTextForTopic(m_pszTopic, m_pszFile, m_sLine, m_pszFunction, buffer);
+      }
+      va_end(arg_ptr);
+    }
+
+
+    /*
+    ---------------------------------------------------------------------------
+       Trace Text
+
+    ---------------------------------------------------------------------------
+    */
+    void TraceLocationTopicDelegate::writeTraceTextForTopic
+    (
+       const char* pszText
+    ) const
+    {
+      if(m_pDelegate)
+      {
+        m_pDelegate->writeTraceTextForTopic(m_pszTopic, m_pszFile, m_sLine, m_pszFunction, pszText);
+      }
+    }
+
+    /*
+    ---------------------------------------------------------------------------
+       Trace Dump
+    ---------------------------------------------------------------------------
+    */
+    void TraceLocationTopicDelegate::dumpTraceForTopic
+    (
+       long lDumpSize,
+       const char* pDump
+    ) const
+    {
+      if(m_pDelegate)
+      {
+        m_pDelegate->dumpTraceForTopic(m_pszTopic, m_pszFile, m_sLine, m_pszFunction, lDumpSize, pDump);
+      }
+    }
+
+    /*
+    ---------------------------------------------------------------------------
+      Start new files
+
+    ---------------------------------------------------------------------------
+    */
+    void TraceLocationTopicDelegate::startNewTraceFileForTopic() const
+    {
+      if(m_pDelegate)
+      {
+        m_pDelegate->startNewTraceFileForTopic(m_pszTopic);
+      }
+    }
+
+    /*
+    ---------------------------------------------------------------------------
+       Trace encypted
+    ---------------------------------------------------------------------------
+    */
+    void TraceLocationTopicDelegate::cryptTraceForTopic
+    (
+       long lDumpSize,
+       const char* pDump
+    ) const
+    {
+      if(m_pDelegate)
+      {
+        m_pDelegate->cryptTraceForTopic(m_pszTopic, m_pszFile, m_sLine, m_pszFunction, lDumpSize, pDump);
+      }
+    }
+
+    /*
+    ---------------------------------------------------------------------------
+       move file
+    ---------------------------------------------------------------------------
+    */
+
+    void TraceLocationTopicDelegate::moveTrace
+    (
+       const char* pszPath
+    ) const
+    {
+      if(m_pDelegate)
+      {
+        m_pDelegate->moveTrace(pszPath);
+      }
+    }
+
+    /*
+    ---------------------------------------------------------------------------
+       Trace credit card track
+    ---------------------------------------------------------------------------
+    */
+    void TraceLocationTopicDelegate::traceTrackForTopic
+    (
+       long trackid,
+       const char* pszTrack
+    ) const
+    {
+      if(m_pDelegate)
+      {
+        m_pDelegate->traceTrackForTopic(m_pszTopic, m_pszFile, m_sLine, m_pszFunction, trackid, pszTrack);
+      }
+    }
+    const TraceInterface* TraceLocationTopicDelegate::getDelegate() const
+    {
+      return m_pDelegate;
+    }
+    const char* TraceLocationTopicDelegate::getFile() const
+    {
+      return m_pszFile;
+    }
+    short TraceLocationTopicDelegate::getLine() const
+    {
+      return m_sLine;
+    }
+    const char* TraceLocationTopicDelegate::getFunction() const
+    {
+      return m_pszFunction;
+    }
+    const char* TraceLocationTopicDelegate::getTopic() const
+    {
+      return m_pszTopic;
+    }
+  }
+}
diff --git a/SelfServiceCommon/Massai/cpp/Tools/src/TraceSync.cpp b/SelfServiceCommon/Massai/cpp/Tools/src/TraceSync.cpp
new file mode 100644
index 00000000..facfd283
--- /dev/null
+++ b/SelfServiceCommon/Massai/cpp/Tools/src/TraceSync.cpp
@@ -0,0 +1,242 @@
+//---------------------------------------------------------------------------
+//
+//  file:       TraceSync.cpp
+//
+//  purpose:    interface for traceing
+//
+//  date:       15.12.2010
+//
+//  author:     Materna Information & Communications
+//
+//  history:
+//---------------------------------------------------------------------------
+
+
+#include "Tools/TraceSync.h"
+#include "Tools/TraceInterface.h"
+#include "systools/mAutoMutex.hpp"
+
+namespace MASSAI
+{
+  namespace trace
+  {
+    TraceSync::TraceSync(TraceInterface& delegate):
+      m_delegate(delegate)
+    {}
+    TraceSync::~TraceSync()
+    {}
+    /*
+    ---------------------------------------------------------------------------
+       Trace Text
+
+    ---------------------------------------------------------------------------
+    */
+    void TraceSync::writeTraceText
+    (
+       long lTraceLevel,
+       const char* pszFile,
+       short  sLine,
+       const char* pszFunction,
+       const char* pszText
+    ) const
+    {
+      Materna::MSSD::autoMutex mx(m_access);
+      m_delegate.writeTraceText(lTraceLevel, pszFile, sLine, pszFunction, pszText);
+    }
+
+
+    /*
+    ---------------------------------------------------------------------------
+       Trace Dump
+    ---------------------------------------------------------------------------
+    */
+    void TraceSync::dumpTrace
+    (
+       long lTraceLevel,
+       const char* pszFile,
+       short  sLine,
+       const char* pszFunction,
+       long lDumpSize,
+       const char* pDump
+    ) const
+    {
+      Materna::MSSD::autoMutex mx(m_access);
+      m_delegate.dumpTrace(lTraceLevel, pszFile, sLine, pszFunction, lDumpSize, pDump);
+    }
+
+
+    /*
+    ---------------------------------------------------------------------------
+      Start new files
+
+    ---------------------------------------------------------------------------
+    */
+    void TraceSync::startNewTraceFile(long lTraceLevel) const
+    {
+      Materna::MSSD::autoMutex mx(m_access);
+      m_delegate.startNewTraceFile(lTraceLevel);
+    }
+
+
+
+    /*
+    ---------------------------------------------------------------------------
+       Trace Text
+
+    ---------------------------------------------------------------------------
+    */
+    void TraceSync::writeTraceTextForTopic
+    (
+       const char* pszTopic,
+       const char* pszFile,
+       short  sLine,
+       const char* pszFunction,
+       const char* pszText
+    ) const
+    {
+      Materna::MSSD::autoMutex mx(m_access);
+      m_delegate.writeTraceTextForTopic(pszTopic, pszFile, sLine, pszFunction, pszText);
+    }
+
+
+
+
+
+    /*
+    ---------------------------------------------------------------------------
+       Trace Dump
+    ---------------------------------------------------------------------------
+    */
+    void TraceSync::dumpTraceForTopic
+    (
+       const char* pszTopic,
+       const char* pszFile,
+       short  sLine,
+       const char* pszFunction,
+       long lDumpSize,
+       const char* pDump
+    ) const
+    {
+      Materna::MSSD::autoMutex mx(m_access);
+      m_delegate.dumpTraceForTopic(pszTopic, pszFile, sLine, pszFunction, lDumpSize, pDump);
+    }
+
+
+    /*
+    ---------------------------------------------------------------------------
+      Start new files
+
+    ---------------------------------------------------------------------------
+    */
+    void TraceSync::startNewTraceFileForTopic(const char* pszTopic) const
+    {
+      Materna::MSSD::autoMutex mx(m_access);
+      m_delegate.startNewTraceFileForTopic(pszTopic);
+    }
+
+
+
+
+    /*
+    ---------------------------------------------------------------------------
+       Trace encypted
+    ---------------------------------------------------------------------------
+    */
+    void TraceSync::cryptTrace
+    (
+       long lTraceLevel,
+       const char* pszFile,
+       short  sLine,
+       const char* pszFunction,
+       long lDumpSize,
+       const char* pDump
+    ) const
+    {
+      Materna::MSSD::autoMutex mx(m_access);
+      m_delegate.cryptTrace(lTraceLevel, pszFile, sLine, pszFunction, lDumpSize, pDump);
+    }
+
+
+
+    /*
+    ---------------------------------------------------------------------------
+       Trace encypted
+    ---------------------------------------------------------------------------
+    */
+    void TraceSync::cryptTraceForTopic
+    (
+       const char* pszTopic,
+       const char* pszFile,
+       short  sLine,
+       const char* pszFunction,
+       long lDumpSize,
+       const char* pDump
+    ) const
+    {
+      Materna::MSSD::autoMutex mx(m_access);
+      m_delegate.cryptTraceForTopic(pszTopic, pszFile, sLine, pszFunction, lDumpSize, pDump);
+    }
+
+
+
+    /*
+    ---------------------------------------------------------------------------
+       move file
+    ---------------------------------------------------------------------------
+    */
+
+    void TraceSync::moveTrace
+    (
+       const char* pszPath
+    ) const
+    {
+      Materna::MSSD::autoMutex mx(m_access);
+      m_delegate.moveTrace(pszPath);
+    }
+
+
+
+
+
+    /*
+    ---------------------------------------------------------------------------
+       Trace credit card track
+    ---------------------------------------------------------------------------
+    */
+    void TraceSync::traceTrack
+    (
+       long lTraceLevel,
+       const char* pszFile,
+       short  sLine,
+       const char* pszFunction,
+       long trackid,
+       const char* pszTrack
+    ) const
+    {
+      Materna::MSSD::autoMutex mx(m_access);
+      m_delegate.traceTrack(lTraceLevel, pszFile, sLine, pszFunction, trackid, pszTrack);
+    }
+
+
+
+    /*
+    ---------------------------------------------------------------------------
+       Trace credit card track
+    ---------------------------------------------------------------------------
+    */
+    void TraceSync::traceTrackForTopic
+    (
+       const char* pszTopic,
+       const char* pszFile,
+       short  sLine,
+       const char* pszFunction,
+       long trackid,
+       const char* pszTrack
+    ) const
+    {
+      Materna::MSSD::autoMutex mx(m_access);
+        m_delegate.traceTrackForTopic(pszTopic, pszFile, sLine, pszFunction, trackid, pszTrack);
+    }
+
+  }
+}
diff --git a/SelfServiceCommon/Massai/cpp/Tools/src/localtrace.cpp b/SelfServiceCommon/Massai/cpp/Tools/src/localtrace.cpp
index 940a41b9..f77af077 100644
--- a/SelfServiceCommon/Massai/cpp/Tools/src/localtrace.cpp
+++ b/SelfServiceCommon/Massai/cpp/Tools/src/localtrace.cpp
@@ -4,12 +4,70 @@
 
 namespace
 {
+  const char* formatFile(const char* pszFile)
+  {
+    const char* result = strrchr(pszFile, '\\');
+    if(result == 0)
+    {
+      result = pszFile;
+    }
+    else
+    {
+      result++;
+    }
+    return result;
+  }
+
   void printHeader(long lTraceLevel, const char* pszFile, short sLine)
   {
     SYSTEMTIME now;
     GetLocalTime(&now);
-    printf("\n%d %02d.%02d.%04d %02d:%02d:%02d.%03d ", lTraceLevel, now.wDay, now.wMonth, now.wYear, now.wHour, now.wMinute, now.wSecond, now.wMilliseconds);
-    printf("%11.11s(%03d): ", pszFile, sLine);
+    DWORD tid = GetCurrentThreadId();
+    printf("\n");
+    printf("%02d.%02d.%04d %02d:%02d:%02d.%03d ", now.wDay, now.wMonth, now.wYear, now.wHour, now.wMinute, now.wSecond, now.wMilliseconds);
+    printf("[%04x] ", tid);
+    printf("%d ", lTraceLevel);
+    printf("%11.11s(%03d): ", formatFile(pszFile), sLine);
+  }
+  void printHeader(const char* pszTopic, const char* pszFile, short sLine)
+  {
+    SYSTEMTIME now;
+    GetLocalTime(&now);
+    DWORD tid = GetCurrentThreadId();
+    printf("\n");
+    printf("%02d.%02d.%04d %02d:%02d:%02d.%03d ", now.wDay, now.wMonth, now.wYear, now.wHour, now.wMinute, now.wSecond, now.wMilliseconds);
+    printf("[%04x] ", tid);
+    printf("% 10s ", pszTopic);
+    printf("%11.11s(%03d): ", formatFile(pszFile), sLine);
+  }
+  void printDump(long lDumpSize, const char* pDump)
+  {
+    for(long i = 0; i < lDumpSize; i += 16)
+    {
+      printf("[%04x,%04d] ", i, i);
+      for(long j = 0; j < 16 && (i+j) < lDumpSize; j++)
+      {
+        if(j == 8)
+        {
+          printf("- ");
+        }
+        printf("%02x ",((unsigned char*)pDump)[i+j]);
+      }
+
+      while(j < 16)
+      {
+        if(j == 8)
+          printf("     ");
+        else
+          printf("   ");
+        j++;
+      }
+
+      for(j = 0; j < 16 && (i+j) < lDumpSize; j++)
+        printf("%c", (pDump[i+j] >= ' ') ? pDump[i+j]: '.');
+
+      printf("\n");
+    }
   }
 }
 
@@ -26,14 +84,13 @@ namespace MASSAI
       wrtTrace(MajorError_HERE, "--- Trace Close ---");
     }
 
-    long writeTraceText(long lTraceLevel, const char* pszFile, short sLine, const char* pszFunction, const char* pszText)
+    void writeTraceText(long lTraceLevel, const char* pszFile, short sLine, const char* pszFunction, const char* pszText)
     {
       printHeader(lTraceLevel, pszFile, sLine);
       printf("%s", pszText);
-      return TRC_OK;
     }
 
-    long wrtTrace(long lTraceLevel, const char* pszFile, short sLine, const char* pszFunction, const char* pszFormat, ...)
+    void wrtTrace(long lTraceLevel, const char* pszFile, short sLine, const char* pszFunction, const char* pszFormat, ...)
     {
       va_list   arg_ptr;
       va_start( arg_ptr, pszFormat);
@@ -41,40 +98,33 @@ namespace MASSAI
       printHeader(lTraceLevel, pszFile, sLine);
       vprintf(pszFormat, arg_ptr);
       va_end( arg_ptr);
-      return TRC_OK;
     }
 
-    long dumpTrace(long lTraceLevel, const char* pszFile, short sLine, const char* pszFunction, long lDumpSize, const char* pDump)
+    void dumpTrace(long lTraceLevel, const char* pszFile, short sLine, const char* pszFunction, long lDumpSize, const char* pDump)
     {
       printHeader(lTraceLevel, pszFile, sLine);
       printf("\n");
-      for(long i = 0; i < lDumpSize; i += 16)
-      {
-        printf("[%04x,%04d] ", i, i);
-        for(long j = 0; j < 16 && (i+j) < lDumpSize; j++)
-        {
-          if(j == 8)
-          {
-            printf("- ");
-          }
-          printf("%02x ",((unsigned char*)pDump)[i+j]);
-        }
-
-        while(j < 16)
-        {
-          if(j == 8)
-            printf("     ");
-          else
-            printf("   ");
-          j++;
-        }
-
-        for(j = 0; j < 16 && (i+j) < lDumpSize; j++)
-          printf("%c", (pDump[i+j] >= ' ') ? pDump[i+j]: '.');
+      printDump(lDumpSize, pDump);
+    }
+    void writeTraceTextForTopic(const char* pszTopic, const char* pszFile, short sLine, const char* pszFunction, const char* pszText)
+    {
+      printHeader(pszTopic, pszFile, sLine);
+      printf("%s", pszText);
+    }
+    void wrtTraceForTopic(const char* pszTopic, const char* pszFile, short sLine, const char* pszFunction, const char* pszFormat, ...)
+    {
+      va_list   arg_ptr;
+      va_start( arg_ptr, pszFormat);
 
-        printf("\n");
-      }
-      return TRC_OK;
+      printHeader(pszTopic, pszFile, sLine);
+      vprintf(pszFormat, arg_ptr);
+      va_end( arg_ptr);
+    }
+    void dumpTraceForTopic(const char* pszTopic, const char* pszFile, short sLine, const char* pszFunction, long lDumpSize, const char* pDump)
+    {
+      printHeader(pszTopic, pszFile, sLine);
+      printf("\n");
+      printDump(lDumpSize, pDump);
     }
   }
 }
diff --git a/SelfServiceCommon/Massai/cpp/Tools/src/stringbuffer.cpp b/SelfServiceCommon/Massai/cpp/Tools/src/stringbuffer.cpp
index 37cac895..26505e02 100644
--- a/SelfServiceCommon/Massai/cpp/Tools/src/stringbuffer.cpp
+++ b/SelfServiceCommon/Massai/cpp/Tools/src/stringbuffer.cpp
@@ -106,7 +106,7 @@ namespace MASSAI
     StringBuffer::StringBuffer(const std::string& assign)
     {
       size_t size= assign.size();
-      init(assign.data(), size, size);
+      init(assign.data(), size, size + 1);
     }
     StringBuffer::StringBuffer(const std::string& assign, size_t capacity)
     {
@@ -149,7 +149,7 @@ namespace MASSAI
           memcpy(m_pBuf, pBuf, m_size);
           if(m_capacity > m_size)
           {
-            memset(m_pBuf, 0, m_capacity - m_size);
+            memset(m_pBuf + m_size, 0, m_capacity - m_size);
           }
         }
         else
-- 
2.41.0.windows.1

