From f8412b63b198b15bff34190173d70b80e88839bf Mon Sep 17 00:00:00 2001
From: tstegema <tstegema@90b65887-3827-0410-9a23-83215b262276>
Date: Tue, 28 Jan 2020 14:31:56 +0000
Subject: [PATCH 0918/1000] MANTIS 0057134 change: mstarter: use special text
 for standard exit code

massai_systools.lib
V1.0.0.39
- assume exit code of process is ntstatus


git-svn-id: svn://localhost/SelfServiceCommon/trunk@1533 90b65887-3827-0410-9a23-83215b262276
---
 .../Massai/cpp/Systools/inc/mSysErrorW32.h    |  2 ++
 .../Massai/cpp/Systools/src/local_def.cpp     |  9 +++--
 .../Massai/cpp/Systools/src/mSysErrorW32.cpp  | 33 +++++++++++++++++++
 .../cpp/Systools/src/mSysProcessW32.cpp       |  7 +++-
 4 files changed, 48 insertions(+), 3 deletions(-)

diff --git a/SelfServiceCommon/Massai/cpp/Systools/inc/mSysErrorW32.h b/SelfServiceCommon/Massai/cpp/Systools/inc/mSysErrorW32.h
index 7c1b6a17..4ea52387 100644
--- a/SelfServiceCommon/Massai/cpp/Systools/inc/mSysErrorW32.h
+++ b/SelfServiceCommon/Massai/cpp/Systools/inc/mSysErrorW32.h
@@ -21,6 +21,8 @@ namespace mSysError
   void traceLastError(MASSAI::trace::TraceInterface& trc,
     long level, const char* file, short line, const char* function,
     const char* where, SystemErrorCode errorCode);
+  SystemErrorCode convertNtStatus(unsigned long ntStatus);
+  bool isConverted(SystemErrorCode errorCode);
 
   class SystemError: public std::runtime_error
   {
diff --git a/SelfServiceCommon/Massai/cpp/Systools/src/local_def.cpp b/SelfServiceCommon/Massai/cpp/Systools/src/local_def.cpp
index 4a92246c..e0bdbc95 100644
--- a/SelfServiceCommon/Massai/cpp/Systools/src/local_def.cpp
+++ b/SelfServiceCommon/Massai/cpp/Systools/src/local_def.cpp
@@ -1,6 +1,6 @@
 #include "tools/versionlib.h"
 
-VERSION_ID_DT(systools, 1, 0, 0, 38);
+VERSION_ID_DT(systools, 1, 0, 0, 39);
 
 /*!
 \file
@@ -8,12 +8,17 @@ VERSION_ID_DT(systools, 1, 0, 0, 38);
 
 \page massai_systools.lib Release Notes - massai_systools.lib
 
-@version 1.0.0.38
+@version 1.0.0.39
 
 \section changehistory Change history
 
 massai_systools.lib
 
+\version 1.0.0.39
+\li 28.01.2020
+\li change - SteT Mantis 0057134: mstarter: use special text for standard exit code
+- assume exit code of process is ntstatus
+
 \version 1.0.0.38
 \li 14.11.2018
 \li extension - SteT Mantis 0052433: appcontrol: add current AppId and PLATFORM.ENVIRONMENT.Variables to application start environment
diff --git a/SelfServiceCommon/Massai/cpp/Systools/src/mSysErrorW32.cpp b/SelfServiceCommon/Massai/cpp/Systools/src/mSysErrorW32.cpp
index 1806b1a9..96858b45 100644
--- a/SelfServiceCommon/Massai/cpp/Systools/src/mSysErrorW32.cpp
+++ b/SelfServiceCommon/Massai/cpp/Systools/src/mSysErrorW32.cpp
@@ -3,8 +3,41 @@
 #include "mSysErrorW32.h"
 #include <windows.h>
 
+namespace
+{
+  typedef ULONG (WINAPI *RtlNtStatusToDosErrorPtr)(LONG);
+  RtlNtStatusToDosErrorPtr rtlNtStatusToDosErrorPtr = 0;
+  bool rtlNtStatusToDosErrorLoaded = false;
+
+  void loadRtlNtStatusToDosError()
+  {
+    if(!rtlNtStatusToDosErrorLoaded)
+    {
+      rtlNtStatusToDosErrorLoaded = true;
+      rtlNtStatusToDosErrorPtr = reinterpret_cast<RtlNtStatusToDosErrorPtr>
+        (GetProcAddress(GetModuleHandle("ntdll"), "RtlNtStatusToDosError"));
+    }
+  }
+}
+
 namespace mSysError
 {
+  SystemErrorCode convertNtStatus(unsigned long ntStatus)
+  {
+    SystemErrorCode result = ERROR_MR_MID_NOT_FOUND;
+    loadRtlNtStatusToDosError();
+    if(rtlNtStatusToDosErrorPtr)
+    {
+      result = rtlNtStatusToDosErrorPtr(ntStatus);
+    }
+    return result;
+  }
+
+  bool isConverted(SystemErrorCode errorCode)
+  {
+    return errorCode != ERROR_MR_MID_NOT_FOUND;
+  }
+
   SystemErrorCode getErrorCode()
   {
     return GetLastError();
diff --git a/SelfServiceCommon/Massai/cpp/Systools/src/mSysProcessW32.cpp b/SelfServiceCommon/Massai/cpp/Systools/src/mSysProcessW32.cpp
index 930904d0..7280f26c 100644
--- a/SelfServiceCommon/Massai/cpp/Systools/src/mSysProcessW32.cpp
+++ b/SelfServiceCommon/Massai/cpp/Systools/src/mSysProcessW32.cpp
@@ -1618,7 +1618,12 @@ namespace
       out << "result\t";
       out << exitCode << "\t";
       out << "0x" << std::hex << exitCode << "\t";
-      if(mSysError::isSystemError(exitCode))
+      unsigned long systemError = mSysError::convertNtStatus(exitCode);
+      if(mSysError::isConverted(systemError))
+      {
+        out << mSysError::getErrorText(systemError).c_str();
+      }
+      else if(mSysError::isSystemError(exitCode))
       {
         out << mSysError::getErrorText(exitCode).c_str();
       }
-- 
2.41.0.windows.1

