From 3c9df316565ecaa36e2b5984cbd5eb62dcec1a90 Mon Sep 17 00:00:00 2001
From: tstegema <tstegema@90b65887-3827-0410-9a23-83215b262276>
Date: Thu, 18 Jul 2013 16:35:32 +0000
Subject: [PATCH 0364/1000] aea_parser V1.0.0.4 Mantis 0028134: AEASimulation:
 invalid error messages

git-svn-id: svn://localhost/SelfServiceCommon/trunk@536 90b65887-3827-0410-9a23-83215b262276
---
 .../Massai/cpp/AEAParser/src/aeaContext.cpp      | 16 ++++++++--------
 .../Massai/cpp/AEAParser/src/local_def.cpp       |  6 +++++-
 2 files changed, 13 insertions(+), 9 deletions(-)

diff --git a/SelfServiceCommon/Massai/cpp/AEAParser/src/aeaContext.cpp b/SelfServiceCommon/Massai/cpp/AEAParser/src/aeaContext.cpp
index 6cc29302..a368eae0 100644
--- a/SelfServiceCommon/Massai/cpp/AEAParser/src/aeaContext.cpp
+++ b/SelfServiceCommon/Massai/cpp/AEAParser/src/aeaContext.cpp
@@ -164,13 +164,13 @@ namespace MASSAI
       }
       catch(InvalidField& ex)
       {
-        std::string response= m_transactionCode + LOGO_LOAD + RETURN_LOADLOGOERROR + ex.field;
+        std::string response= m_transactionCode + RETURN_LOADLOGOERROR + ex.field;
         rsp= AEAResult(new AEAConstResponse(COMMAND_SETUP, RESULT_FORMAT_ERROR, response));
         trace.writeTrace(MajorWarning_HERE, "ParseException: (%.4000s), (%.10s)", ex.what(), ex.field.c_str());
       }
       catch(ParseException& ex)
       {
-        std::string response= m_transactionCode + LOGO_LOAD + RETURN_LOADLOGOERROR + "00";
+        std::string response= m_transactionCode + RETURN_LOADLOGOERROR + "00";
         rsp= AEAResult(new AEAConstResponse(COMMAND_SETUP, RESULT_FORMAT_ERROR, response));
         trace.writeTrace(MajorWarning_HERE, "ParseException: (%.4000s)", ex.what());
       }
@@ -365,13 +365,13 @@ namespace MASSAI
       }
       catch(InvalidField& ex)
       {
-        std::string response= transactionCode() + PECTAB_LOAD + RETURN_FORMATERROR + ex.field;
+        std::string response= transactionCode() + RETURN_FORMATERROR + ex.field;
         rsp= AEAResult(new AEAConstResponse(COMMAND_SETUP, RESULT_FORMAT_ERROR, response));
         trace.writeTrace(MajorWarning_HERE, "ParseException: (%.4000s), (%.10s)", ex.what(), ex.field.c_str());
       }
       catch(ParseException& ex)
       {
-        std::string response= transactionCode() + PECTAB_LOAD + RETURN_FORMATERROR + "00";
+        std::string response= transactionCode() + RETURN_FORMATERROR + "00";
         rsp= AEAResult(new AEAConstResponse(COMMAND_SETUP, RESULT_FORMAT_ERROR, response));
         trace.writeTrace(MajorWarning_HERE, "ParseException: (%.4000s)", ex.what());
       }
@@ -553,13 +553,13 @@ namespace MASSAI
       }
       catch(InvalidField& ex)
       {
-        std::string response= transactionCode() + PECTAB_LOAD + RETURN_FORMATERROR + ex.field;
+        std::string response= transactionCode() + RETURN_FORMATERROR + ex.field;
         rsp= AEAResult(new AEAConstResponse(COMMAND_SETUP, RESULT_FORMAT_ERROR, response));
         trace.writeTrace(MajorWarning_HERE, "ParseException: (%.4000s), (%.10s)", ex.what(), ex.field.c_str());
       }
       catch(ParseException& ex)
       {
-        std::string response= transactionCode() + PECTAB_LOAD + RETURN_FORMATERROR + "00";
+        std::string response= transactionCode() + RETURN_FORMATERROR + "00";
         rsp= AEAResult(new AEAConstResponse(COMMAND_SETUP, RESULT_FORMAT_ERROR, response));
         trace.writeTrace(MajorWarning_HERE, "ParseException: (%.4000s)", ex.what());
       }
@@ -662,13 +662,13 @@ namespace MASSAI
       }
       catch(InvalidField& ex)
       {
-        std::string response= transactionCode() + TEMPLATE_LOAD + RETURN_LOADTEMPLATEERROR + ex.field;
+        std::string response= transactionCode() + RETURN_LOADTEMPLATEERROR + ex.field;
         rsp= AEAResult(new AEAConstResponse(COMMAND_SETUP, RESULT_FORMAT_ERROR, response));
         trace.writeTrace(MajorWarning_HERE, "ParseException: (%.4000s), (%.10s)", ex.what(), ex.field.c_str());
       }
       catch(ParseException& ex)
       {
-        std::string response= transactionCode() + TEMPLATE_LOAD + RETURN_LOADTEMPLATEERROR;
+        std::string response= transactionCode() + RETURN_LOADTEMPLATEERROR;
         rsp= AEAResult(new AEAConstResponse(COMMAND_SETUP, RESULT_FORMAT_ERROR, response));
         trace.writeTrace(MajorWarning_HERE, "ParseException: (%.4000s)", ex.what());
       }
diff --git a/SelfServiceCommon/Massai/cpp/AEAParser/src/local_def.cpp b/SelfServiceCommon/Massai/cpp/AEAParser/src/local_def.cpp
index 6c43df79..e6223f5e 100644
--- a/SelfServiceCommon/Massai/cpp/AEAParser/src/local_def.cpp
+++ b/SelfServiceCommon/Massai/cpp/AEAParser/src/local_def.cpp
@@ -1,10 +1,14 @@
 #include "Tools/VERSIONLIB.h"
 
-VERSION_ID_DT(aea_parser, 1, 0, 0, 3);
+VERSION_ID_DT(aea_parser, 1, 0, 0, 4);
 
 /*!
 \page aea_parser aea_parser - Release Notes
 
+\date 18.07.2013
+\li V1.0.0.4
+\li Mantis 0028134: AEASimulation: invalid error messages
+
 \date 26.06.2013
 \li V1.0.0.3
 \li Mantis 0027792: AEASimulation: return error for invalid id in clear command
-- 
2.41.0.windows.1

