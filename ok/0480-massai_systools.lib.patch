From d02f7b85c262bac1331888e03da8d9a322d685ac Mon Sep 17 00:00:00 2001
From: tstegema <tstegema@90b65887-3827-0410-9a23-83215b262276>
Date: Thu, 19 Sep 2013 16:29:31 +0000
Subject: [PATCH 0480/1077] massai_systools.lib V1.0.0.12 Mantis 0028903: MR:
 MCR Sankyo ICM 350 mSysDeviceEvent: device name stops at terminating zero
 mSysIO: open files with read and write share         do not dump input (PCI
 DSS)

appVersionInfoResource added
for applicaiton resource files

git-svn-id: svn://localhost/SelfServiceCommon/trunk@591 90b65887-3827-0410-9a23-83215b262276
---
 .../inc/resource/appVersionInfoResource.h     | 42 +++++++++++++++++++
 .../Massai/cpp/Systools/src/local_def.cpp     | 11 ++++-
 .../cpp/Systools/src/mSysDeviceEventW32.cpp   |  2 +-
 .../Massai/cpp/Systools/src/mSysIOW32.cpp     | 10 ++---
 .../cpp/Systools/src/mSysUSBDeviceW32.cpp     |  2 +-
 5 files changed, 59 insertions(+), 8 deletions(-)
 create mode 100644 SelfServiceCommon/Interfaces/inc/resource/appVersionInfoResource.h

diff --git a/SelfServiceCommon/Interfaces/inc/resource/appVersionInfoResource.h b/SelfServiceCommon/Interfaces/inc/resource/appVersionInfoResource.h
new file mode 100644
index 00000000..e5ffda4b
--- /dev/null
+++ b/SelfServiceCommon/Interfaces/inc/resource/appVersionInfoResource.h
@@ -0,0 +1,42 @@
+#include "Global_def.h"
+
+#include "winver.h"
+
+#define LANG_US_ENGLISH    0x0409
+#define LANG_US_ENGLISH_T   "0409"
+
+#define CHARSET_WINDOWS    0x04E4
+#define CHARSET_WINDOWS_T   "04E4"
+
+VS_VERSION_INFO VERSIONINFO
+  FILEVERSION    FILE_VER_BIN
+  PRODUCTVERSION PRODUCT_VER_BIN
+  FILEFLAGSMASK  VS_FFI_FILEFLAGSMASK
+#ifdef _DEBUG
+  FILEFLAGS      VS_FF_DEBUG
+#else
+  FILEFLAGS      0x0L
+#endif
+  FILEOS         (VOS_NT | VOS__WINDOWS32)
+  FILETYPE       VFT_APP
+  BEGIN
+    BLOCK "StringFileInfo"
+    BEGIN
+      BLOCK LANG_US_ENGLISH_T CHARSET_WINDOWS_T
+      BEGIN
+        VALUE COMPANY
+        VALUE FILEDESCRIPTION
+        VALUE FILE_VER_STR
+        VALUE INTERNALNAME
+        VALUE COPYRIGHT
+        VALUE LEGALTRADEMARKS
+        VALUE ORIGINALFILENAME
+        VALUE PRODUCT
+        VALUE PRODUCT_VER_STR
+      END
+    END
+    BLOCK "VarFileInfo"
+    BEGIN
+      VALUE "Translation", LANG_US_ENGLISH, CHARSET_WINDOWS
+    END
+  END
diff --git a/SelfServiceCommon/Massai/cpp/Systools/src/local_def.cpp b/SelfServiceCommon/Massai/cpp/Systools/src/local_def.cpp
index 1f836096..129ba81a 100644
--- a/SelfServiceCommon/Massai/cpp/Systools/src/local_def.cpp
+++ b/SelfServiceCommon/Massai/cpp/Systools/src/local_def.cpp
@@ -1,12 +1,21 @@
 #include "Tools/VERSIONLIB.h"
 
-VERSION_ID_DT(systools, 1, 0, 0, 11);
+VERSION_ID_DT(systools, 1, 0, 0, 12);
 
 /*!
 \page massai_systools.lib, massai_systools.lib - Release Notes
 
 massai_systools.lib
 
+
+\date 19.09.2013
+\li V1.0.0.12
+\li Mantis 0028903: MR: MCR Sankyo ICM 350
+mSysDeviceEvent: device name stops at terminating zero
+mSysIO: open files with read and write share
+        do not dump input (PCI DSS)
+
+
 \date 17.09.2013
 \li V1.0.0.11
 \li Mantis 0029028: mstarter: if process cannot be started, the pid 0 is used to find subprocesses
diff --git a/SelfServiceCommon/Massai/cpp/Systools/src/mSysDeviceEventW32.cpp b/SelfServiceCommon/Massai/cpp/Systools/src/mSysDeviceEventW32.cpp
index c5459fec..abd96f00 100644
--- a/SelfServiceCommon/Massai/cpp/Systools/src/mSysDeviceEventW32.cpp
+++ b/SelfServiceCommon/Massai/cpp/Systools/src/mSysDeviceEventW32.cpp
@@ -61,7 +61,7 @@ namespace
     int length = device.dbcc_size - sizeof(DEV_BROADCAST_DEVICEINTERFACE) + 1;
     if(length > 0)
     {
-      result.name = std::string(device.dbcc_name, length);
+      result.name = device.dbcc_name;
     }
     result.uuid = getUUID(device.dbcc_classguid);
     return result;
diff --git a/SelfServiceCommon/Massai/cpp/Systools/src/mSysIOW32.cpp b/SelfServiceCommon/Massai/cpp/Systools/src/mSysIOW32.cpp
index f5b9619b..79d1fa63 100644
--- a/SelfServiceCommon/Massai/cpp/Systools/src/mSysIOW32.cpp
+++ b/SelfServiceCommon/Massai/cpp/Systools/src/mSysIOW32.cpp
@@ -112,7 +112,7 @@ namespace
     (
       name.c_str(),
       GENERIC_READ,
-      FILE_SHARE_READ,
+      FILE_SHARE_WRITE|FILE_SHARE_READ,
       0,
       OPEN_EXISTING,
       FILE_FLAG_OVERLAPPED,
@@ -121,7 +121,7 @@ namespace
     if(m_handle == INVALID_HANDLE_VALUE)
     {
       DWORD resultCode = GetLastError();
-      traceLastError(m_trc, MajorError_HERE, "CreateFile", m_name, resultCode);
+      traceLastError(m_trc, MajorError_HERE, "CreateFile for read", m_name, resultCode);
       throw IOException(mSysError::getErrorText(resultCode));
     }
   }
@@ -151,7 +151,7 @@ namespace
     {
       m_trc.writeTrace(BasicProcess_HERE, "read done (%d) from (%s)",
         readCount, m_name.c_str());
-      m_trc.dumpTrace(SecondaryRuntime_HERE, readCount, buffer);
+      // m_trc.dumpTrace(SecondaryRuntime_HERE, readCount, buffer);  // PCI-DSS
       data.append(buffer, readCount);
       totalRead += readCount;
     }
@@ -280,7 +280,7 @@ namespace
     (
       name.c_str(),
       GENERIC_WRITE,
-      FILE_SHARE_WRITE,
+      FILE_SHARE_WRITE|FILE_SHARE_READ,
       0,
       OPEN_EXISTING,
       FILE_FLAG_OVERLAPPED,
@@ -289,7 +289,7 @@ namespace
     if(m_handle == INVALID_HANDLE_VALUE)
     {
       DWORD resultCode = GetLastError();
-      traceLastError(m_trc, MajorError_HERE, "CreateFile", m_name, resultCode);
+      traceLastError(m_trc, MajorError_HERE, "CreateFile for write", m_name, resultCode);
       throw IOException(mSysError::getErrorText(resultCode));
     }
   }
diff --git a/SelfServiceCommon/Massai/cpp/Systools/src/mSysUSBDeviceW32.cpp b/SelfServiceCommon/Massai/cpp/Systools/src/mSysUSBDeviceW32.cpp
index ff21c29b..4eb7d6d2 100644
--- a/SelfServiceCommon/Massai/cpp/Systools/src/mSysUSBDeviceW32.cpp
+++ b/SelfServiceCommon/Massai/cpp/Systools/src/mSysUSBDeviceW32.cpp
@@ -170,7 +170,7 @@ namespace mSysUSBDeviceW32
       char* buffer = new char[deviceInstanceIdSize];
       if(!SetupDiGetDeviceInstanceId(m_devices.getDeviceInfoHandle(), &m_devData, buffer, deviceInstanceIdSize, &deviceInstanceIdSize))
       {
-        mSysError::traceLastError(m_trc, MajorError_HERE, "SetupDiGetDeviceInterfaceDetail", GetLastError());
+        mSysError::traceLastError(m_trc, MajorError_HERE, "SetupDiGetDeviceInstanceId", GetLastError());
       }
       else
       {
-- 
2.41.0.windows.1

