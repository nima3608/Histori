From 723045bbbac83254f656de9577837a85b89828c0 Mon Sep 17 00:00:00 2001
From: tstegema <tstegema@90b65887-3827-0410-9a23-83215b262276>
Date: Thu, 3 Nov 2011 19:09:25 +0000
Subject: [PATCH 0085/1000] massai_systools.lib; V1.0.0.1     added files
 mAutoMutexCS.h, mMutexCS.h, mMutexCSW32.cpp     with classes AutoMutexCS,
 Mutex        using CRITICAL_SECTION as more efficent synchronisation
 mechanism

    can be use instead of
      the classes autoMutex, mutexSemaphore
      from the files mAutoMutexCS.h, mMutexSem.hpp, mMutexSemW32.cpp



git-svn-id: svn://localhost/SelfServiceCommon/trunk@202 90b65887-3827-0410-9a23-83215b262276
---
 .../Massai/cpp/Systools/makefile.mak          |  3 +-
 .../Massai/cpp/Systools/src/local_def.cpp     | 13 ++++-
 .../Massai/cpp/Systools/src/mMutexCSW32.cpp   | 49 +++++++++++++++++++
 3 files changed, 63 insertions(+), 2 deletions(-)
 create mode 100644 SelfServiceCommon/Massai/cpp/Systools/src/mMutexCSW32.cpp

diff --git a/SelfServiceCommon/Massai/cpp/Systools/makefile.mak b/SelfServiceCommon/Massai/cpp/Systools/makefile.mak
index bd1a7800..918899ce 100644
--- a/SelfServiceCommon/Massai/cpp/Systools/makefile.mak
+++ b/SelfServiceCommon/Massai/cpp/Systools/makefile.mak
@@ -31,7 +31,8 @@ MY_LIB1_OBJS =          $(_OBJ)\local_def.obj \
                         $(_OBJ)\threadException.obj \
                         $(_OBJ)\tRex.obj \
                         $(_OBJ)\tRexLookupComport.obj \
-                        $(_OBJ)\Console.obj
+                        $(_OBJ)\Console.obj \
+                        $(_OBJ)\mMutexCSW32.obj
 
 MY_LIB1_LIBS =          $(SYS_ADVAPI32)
 
diff --git a/SelfServiceCommon/Massai/cpp/Systools/src/local_def.cpp b/SelfServiceCommon/Massai/cpp/Systools/src/local_def.cpp
index 941fd06f..b5fc9c03 100644
--- a/SelfServiceCommon/Massai/cpp/Systools/src/local_def.cpp
+++ b/SelfServiceCommon/Massai/cpp/Systools/src/local_def.cpp
@@ -1,6 +1,17 @@
 #include "Tools/VERSIONLIB.h"
 
 /*! \page systools systools - Release Notes
+ *
+ *
+ *  \date 03.11.2011 \li V1.0.0.1
+ *                   \li SteT added
+ *    added files mAutoMutexCS.h, mMutexCS.h, mMutexCSW32.cpp
+ *    with classes AutoMutexCS, Mutex
+ *       using CRITICAL_SECTION as more efficent synchronisation mechanism
+ *
+ *    can be use instead of
+ *      the classes autoMutex, mutexSemaphore
+ *      from the files mAutoMutexCS.h, mMutexSem.hpp, mMutexSemW32.cpp
  *
  *
  *  \date 19.10.2010 \li V1.0.0.0
@@ -8,4 +19,4 @@
  *
  */
 
-VERSION_ID_DT(systools, 1, 0, 0, 0);
+VERSION_ID_DT(systools, 1, 0, 0, 1);
diff --git a/SelfServiceCommon/Massai/cpp/Systools/src/mMutexCSW32.cpp b/SelfServiceCommon/Massai/cpp/Systools/src/mMutexCSW32.cpp
new file mode 100644
index 00000000..971064ac
--- /dev/null
+++ b/SelfServiceCommon/Massai/cpp/Systools/src/mMutexCSW32.cpp
@@ -0,0 +1,49 @@
+/**
+ **************************************************************************
+ *
+ * @file mMutexCSW32.cpp
+ *
+ * Contains the implementation for the methods defined in mMutexCS.hpp
+ * for the Win32 platform.
+ *
+ *
+ **************************************************************************
+**/
+
+#include "systools/mMutexCS.h"
+#include <windows.h>
+
+namespace Materna
+{
+  namespace MSSD
+  {
+    class Mutex_Handle
+    {
+      public:
+        Mutex_Handle()
+        {
+          InitializeCriticalSection(&m_criticalSection);
+        }
+        ~Mutex_Handle()
+        {
+          DeleteCriticalSection(&m_criticalSection);
+        }
+        CRITICAL_SECTION m_criticalSection;
+    };
+    Mutex::Mutex():
+      m_handle(new Mutex_Handle())
+    {}
+    Mutex::~Mutex()
+    {
+      delete m_handle;
+    }
+    void Mutex::request()
+    {
+      EnterCriticalSection(&m_handle->m_criticalSection);
+    }
+    void Mutex::release()
+    {
+      LeaveCriticalSection(&m_handle->m_criticalSection);
+    }
+  }
+}
-- 
2.41.0.windows.1

