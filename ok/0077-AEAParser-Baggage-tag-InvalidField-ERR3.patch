From f02e38332878c1460268e480b513f4a52e68e5a4 Mon Sep 17 00:00:00 2001
From: tstegema <tstegema@90b65887-3827-0410-9a23-83215b262276>
Date: Fri, 17 Dec 2010 13:15:51 +0000
Subject: [PATCH 0077/1077] AEAParser: Baggage tag: InvalidField= ERR3

git-svn-id: svn://localhost/SelfServiceCommon/trunk@97 90b65887-3827-0410-9a23-83215b262276
---
 .../AEAParser/src/aeaSimulator_BagtagImpl.cpp |  6 ++--
 .../Services/cpp/TrcServ/inc/TraceTestHdl.h   | 30 +++++++++++++++++++
 .../Services/cpp/TrcServ/src/TraceTestHdl.cpp | 23 ++++++++++++++
 3 files changed, 56 insertions(+), 3 deletions(-)
 create mode 100644 SelfServiceCommon/Services/cpp/TrcServ/inc/TraceTestHdl.h
 create mode 100644 SelfServiceCommon/Services/cpp/TrcServ/src/TraceTestHdl.cpp

diff --git a/SelfServiceCommon/Massai/cpp/AEAParser/src/aeaSimulator_BagtagImpl.cpp b/SelfServiceCommon/Massai/cpp/AEAParser/src/aeaSimulator_BagtagImpl.cpp
index d0b6194e..2203bb6e 100644
--- a/SelfServiceCommon/Massai/cpp/AEAParser/src/aeaSimulator_BagtagImpl.cpp
+++ b/SelfServiceCommon/Massai/cpp/AEAParser/src/aeaSimulator_BagtagImpl.cpp
@@ -251,19 +251,19 @@ namespace MASSAI
         }
         catch(InvalidFieldContent& ex)
         {
-          std::string response= getTransactionCode() + RETURN_PECTABNOTFOUNDERROR + ex.field + ex.content;
+          std::string response= getTransactionCode() + RETURN_PRINTINCORRECT_FIELD + ex.field + ex.content;
           rsp= AEAResult(new AEAConstResponse(COMMAND_PRINT, RESULT_FORMAT_ERROR, response));
           trace.writeTrace(MajorWarning_HERE, "ParseException: (%.4000s), (%.10s) (%.100s)", ex.what(), ex.field.c_str(), ex.content.c_str());
         }
         catch(InvalidField& ex)
         {
-          std::string response= getTransactionCode() + RETURN_PECTABNOTFOUNDERROR + ex.field;
+          std::string response= getTransactionCode() + RETURN_PRINTINCORRECT_FIELD + ex.field;
           rsp= AEAResult(new AEAConstResponse(COMMAND_PRINT, RESULT_FORMAT_ERROR, response));
           trace.writeTrace(MajorWarning_HERE, "ParseException: (%.4000s), (%.10s)", ex.what(), ex.field.c_str());
         }
         catch(ParseException& ex)
         {
-          std::string response= getTransactionCode() + RETURN_PECTABNOTFOUNDERROR + "00";
+          std::string response= getTransactionCode() + RETURN_PRINTINCORRECT_FIELD + "00";
           rsp= AEAResult(new AEAConstResponse(COMMAND_PRINT, RESULT_FORMAT_ERROR, response));
           trace.writeTrace(MajorWarning_HERE, "ParseException: (%.4000s)", ex.what());
         }
diff --git a/SelfServiceCommon/Services/cpp/TrcServ/inc/TraceTestHdl.h b/SelfServiceCommon/Services/cpp/TrcServ/inc/TraceTestHdl.h
new file mode 100644
index 00000000..8d738adb
--- /dev/null
+++ b/SelfServiceCommon/Services/cpp/TrcServ/inc/TraceTestHdl.h
@@ -0,0 +1,30 @@
+/****************************************************************************
+
+ FILE:      TraceTestHdl.h
+
+ PURPOSE:   Client listening to TrcServ
+
+ DATE:      05.02.2001
+
+ AUTHOR:    MATERNA Information & Communications  (TS)
+
+ HISTORY:
+
+****************************************************************************/
+
+#ifndef TRACETESTHDL_H
+#define TRACETESTHDL_H
+#if defined(SHOW_INCLUDE_FILES)
+#pragma message("including: " __FILE__)
+#endif
+
+class TraceTest
+{
+  public:
+    TraceTest(const char* client);
+    void trace(const char* text);
+  private:
+    int handle;
+};
+
+#endif
diff --git a/SelfServiceCommon/Services/cpp/TrcServ/src/TraceTestHdl.cpp b/SelfServiceCommon/Services/cpp/TrcServ/src/TraceTestHdl.cpp
new file mode 100644
index 00000000..820bb261
--- /dev/null
+++ b/SelfServiceCommon/Services/cpp/TrcServ/src/TraceTestHdl.cpp
@@ -0,0 +1,23 @@
+/****************************************************************************
+
+ FILE:      TraceTestHdl.cpp
+
+ PURPOSE:   Client listening to TrcServ
+
+ AUTHOR:    MATERNA Information & Communications
+
+ HISTORY:
+
+****************************************************************************/
+
+#include "TraceTestHdl.h"
+#include "TrcHdlClt.h"
+
+TraceTest::TraceTest(const char* client)
+{
+  handle= openTrace(client);
+}
+void TraceTest::trace(const char* text)
+{
+  writeTraceText(handle, MajorError_HERE, text);
+}
-- 
2.41.0.windows.1

