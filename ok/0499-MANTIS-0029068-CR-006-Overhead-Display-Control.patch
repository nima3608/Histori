From f3c31b510875ae0ca72dbc1fe6e335ebef5a1c74 Mon Sep 17 00:00:00 2001
From: tgeisler <tgeisler@90b65887-3827-0410-9a23-83215b262276>
Date: Fri, 6 Dec 2013 15:35:29 +0000
Subject: [PATCH 0499/1077] MANTIS	0029068: CR 006 - Overhead Display
 Control

git-svn-id: svn://localhost/SelfServiceCommon/trunk@619 90b65887-3827-0410-9a23-83215b262276
---
 .../Massai/idl/Massai/makefile.mak            |  3 +-
 .../Massai/idl/Massai/second_screen.idl       | 48 +++++++++++++++++++
 2 files changed, 50 insertions(+), 1 deletion(-)
 create mode 100644 SelfServiceCommon/Massai/idl/Massai/second_screen.idl

diff --git a/SelfServiceCommon/Massai/idl/Massai/makefile.mak b/SelfServiceCommon/Massai/idl/Massai/makefile.mak
index 06686d7f..ac0f0fd3 100644
--- a/SelfServiceCommon/Massai/idl/Massai/makefile.mak
+++ b/SelfServiceCommon/Massai/idl/Massai/makefile.mak
@@ -36,6 +36,7 @@ MY_GEN_CPPS = \
     $(_GEN)\ScaleDev.cpp \
     $(_GEN)\screendev.cpp \
     $(_GEN)\seldev.cpp \
-    $(_GEN)\doordev.cpp
+    $(_GEN)\doordev.cpp \
+    $(_GEN)\second_screen.cpp
 
 !include $(BUILDROOT)\Build\cpp\makefile.rules.mak
diff --git a/SelfServiceCommon/Massai/idl/Massai/second_screen.idl b/SelfServiceCommon/Massai/idl/Massai/second_screen.idl
new file mode 100644
index 00000000..46e04d6e
--- /dev/null
+++ b/SelfServiceCommon/Massai/idl/Massai/second_screen.idl
@@ -0,0 +1,48 @@
+//  purpose:  interface definition for the second screen handler module
+//  version:  0.1
+#ifndef SECOND_SCREEN_IDL
+#define SECOND_SCREEN_IDL
+
+#pragma prefix "massai.materna.com"
+
+module second_screen
+{
+    /** Definition of platform running states */
+    enum plf_running_state
+    {
+        PLF_R_UNKNOWN,          /**< unknown state (not much to do here) */
+        PLF_R_AVAILABLE,        /**< CLA is running and application(s) are available */
+        PLF_R_ACTIVE,           /**< an application is active  */
+        PLF_R_ACTIVE_ACTIVE,    /**< an application is active and a checkin process is going on */
+        PLF_R_ERROR,            /**< the plf is in error state, no application is available */
+        PLF_R_RESERVED1,        /**< for future use */
+        PLF_R_RESERVED2         /**< for future use */
+    };
+
+    /** state change info */    
+    struct state_info
+    {
+        string            version;  /**< interface version */
+        plf_running_state state;    /**< platform state */
+        string            app_id;   /**< A unique application identifier */
+    };
+
+    /** Returncodes returned by the second screen module */
+    enum rc
+    {
+        RC_OK,		       /**< second screen shows configured information for new platform state */
+        RC_ERROR,	       /**< state change failed */
+        RC_NO_2NDSCREEN    /**< no second screen available (chrome not found or no screen present) */
+    };
+    
+    interface control_second_screen
+    {
+        /** informs the second_screen module about a platform state change
+         *  @param  st - the new state
+         *  @return a return code as specified in this module
+         */                
+        rc state_change (in state_info st);
+    };
+};
+
+#endif
-- 
2.41.0.windows.1

