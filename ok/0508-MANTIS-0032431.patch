From 49adc22c24eb91e6078688d87824078118a9dbaf Mon Sep 17 00:00:00 2001
From: motten <motten@90b65887-3827-0410-9a23-83215b262276>
Date: Tue, 14 Oct 2014 14:08:15 +0000
Subject: [PATCH 0508/1000] MANTIS 0032431 configure the basic function of
 mDaemon_main

git-svn-id: svn://localhost/SelfServiceCommon/trunk@735 90b65887-3827-0410-9a23-83215b262276
---
 .../Massai/cpp/mControl/makefile.mak          |  4 +-
 .../res/{mcontrol.rc => newmcontrol.rc}       |  0
 .../cpp/mControl/src/mControl_config.cpp      | 54 +++++--------
 .../Massai/cpp/mControl/src/mControl_main.cpp | 77 +++++++++++--------
 4 files changed, 63 insertions(+), 72 deletions(-)
 rename SelfServiceCommon/Massai/cpp/mControl/res/{mcontrol.rc => newmcontrol.rc} (100%)

diff --git a/SelfServiceCommon/Massai/cpp/mControl/makefile.mak b/SelfServiceCommon/Massai/cpp/mControl/makefile.mak
index 03d059ce..48e05263 100644
--- a/SelfServiceCommon/Massai/cpp/mControl/makefile.mak
+++ b/SelfServiceCommon/Massai/cpp/mControl/makefile.mak
@@ -35,10 +35,10 @@ STDLINKLIBS = \
 ######################################################################
 
 MY_BIN1 = \
-    $(_BIN)\mControl.exe
+    $(_BIN)\NewMControl.exe
 
 MY_BIN1_RES = \
-    $(_OBJ)\mcontrol.res
+    $(_OBJ)\newmcontrol.res
 
 MY_BIN1_OBJS = \
     $(_OBJ)\controller.obj \
diff --git a/SelfServiceCommon/Massai/cpp/mControl/res/mcontrol.rc b/SelfServiceCommon/Massai/cpp/mControl/res/newmcontrol.rc
similarity index 100%
rename from SelfServiceCommon/Massai/cpp/mControl/res/mcontrol.rc
rename to SelfServiceCommon/Massai/cpp/mControl/res/newmcontrol.rc
diff --git a/SelfServiceCommon/Massai/cpp/mControl/src/mControl_config.cpp b/SelfServiceCommon/Massai/cpp/mControl/src/mControl_config.cpp
index 711f6592..4c94d62a 100644
--- a/SelfServiceCommon/Massai/cpp/mControl/src/mControl_config.cpp
+++ b/SelfServiceCommon/Massai/cpp/mControl/src/mControl_config.cpp
@@ -148,29 +148,18 @@ namespace mControl
             else
                 TRACE(HERE,"failed to get ABLS-IP-Address");
         }      
-        
-
-        // The parameters to CreateWindow explained:
-        // m_className: the name of the application
-        // m_title: the text that appears in the title bar
-        // WS_OVERLAPPEDWINDOW: the type of window to create
-        // CW_USEDEFAULT, CW_USEDEFAULT: initial position (x, ySize)
-        // m_width, m_height: initial size (width, length)
-        // NULL: the parent of this window
-        // NULL: this application dows not have a menu bar
-        // m_hInstance: the first parameter from WinMain
-        // NULL: not used in this application       
+             
         m_hWnd = CreateWindow(  szClassName,            // window class name
-                                szAppName,            // window caption
-                                myStyle,              // window style
-                                xPosition,            // initial x position
-                                yPosition,            // initial y position
-                                xSize,                // initial x size
-                                ySize,                // initial y size
-                                NULL,                 // parent window handle
-                                NULL,                 // window menu handle
-                                m_Wcex.hInstance,     // program instance handle
-                                (void *)this) ;       // creation parameters
+                                szAppName,              // window caption
+                                myStyle,                // window style
+                                xPosition,              // initial x position
+                                yPosition,              // initial y position
+                                xSize,                  // initial x size
+                                ySize,                  // initial y size
+                                NULL,                   // parent window handle
+                                NULL,                   // window menu handle
+                                m_Wcex.hInstance,       // program instance handle
+                                (void *)this) ;         // creation parameters
         
 
         if (!m_hWnd)
@@ -270,8 +259,6 @@ namespace mControl
 
                 hdc = GetDC(hWnd);
 
-
-
                 if(m_config.serverMode())
                     this->setHBitMap( Tools::CreateBitmapObjectFromDibFile (hdc,".\\mcontrol_small.bmp") );
                 else
@@ -306,7 +293,6 @@ namespace mControl
 
                 if(!m_config.serverMode())
                 {
-
                     cyLoad = 20;
 
                     //TRACE(HERE,"xSize = %d, ySize = %d, xPosition = %d, yPosition = %d",xSize,ySize,xPosition,yPosition);
@@ -324,11 +310,7 @@ namespace mControl
                     cyLoad = 10;
                 }
 
-                //GetClientRect(hWnd,&rect);
-
-                //TRACE(HERE,"xSize = %d, ySize = %d, xPosition = %d, yPosition = %d",rect.left,rect.top,rect.right,rect.bottom);
-
-                cxLoad = xPosition; // - xPosition/4;
+                cxLoad = xPosition; 
 
                 this->setHWndLoad( CreateWindow(
                                         PROGRESS_CLASS,
@@ -341,8 +323,8 @@ namespace mControl
                                         hWnd,
                                         NULL,
                                         this->getInstance(),
-                                        NULL) 
-                                );
+                                        NULL 
+                                ));
 
                 SendMessage(this->getHwndLoad(),PBM_SETRANGE,0,MAKELPARAM(0,100));
                 SendMessage(this->getHwndLoad(),PBM_SETPOS,0,0);
@@ -361,8 +343,8 @@ namespace mControl
                                         hWnd,
                                         NULL,
                                         this->getInstance(),
-                                        NULL)
-                                );
+                                        NULL
+                                ));
 
                 SetClassLong(this->getHwndInfo1() ,GCL_STYLE,CS_HREDRAW | CS_VREDRAW);
 
@@ -398,8 +380,8 @@ namespace mControl
                                         hWnd,
                                         NULL,
                                         getInstance(),
-                                        NULL)
-                                );
+                                        NULL
+                                ));
 
                 SetClassLong(this->getHwndInfo2() ,GCL_STYLE,CS_HREDRAW | CS_VREDRAW);
 
diff --git a/SelfServiceCommon/Massai/cpp/mControl/src/mControl_main.cpp b/SelfServiceCommon/Massai/cpp/mControl/src/mControl_main.cpp
index c57ed652..8432ea78 100644
--- a/SelfServiceCommon/Massai/cpp/mControl/src/mControl_main.cpp
+++ b/SelfServiceCommon/Massai/cpp/mControl/src/mControl_main.cpp
@@ -103,17 +103,12 @@ void exitHandler(int iSignal)
 //---------------------------------------------------------------------------
 int WINAPI WinMain ( HINSTANCE hInst, HINSTANCE, char * cmdline, int )
 {
+    openTrace("New_mControl");
+    TRACE(HERE,"entering WinMain...");
+
     globalHInstance = hInst;
     globalConfig = MControlConfig( globalHInstance );
     
-    /*
-    mControl_Impl impl(globalHInstance);
-    impl.getDialog().getMControlWindowConfig().registerWindow();
-    impl.getDialog().getMControlWindowConfig().createWindow();
-
-    impl.getDialog().startShowWindow(SW_SHOW);
-    */
-    
     mMainCommandLine cmdline_parser( "mControl", cmdline );
     
     // Ask the deamon control for an "interactive" service session.
@@ -128,7 +123,7 @@ int WINAPI WinMain ( HINSTANCE hInst, HINSTANCE, char * cmdline, int )
 
 int mDaemon_main( int argc, char const * const * argv )
 {
-    openTrace("mControl");
+    TRACE(HERE,"entering mDaemon_main...");
 
     
     argScan args( argc, argv );
@@ -147,11 +142,12 @@ int mDaemon_main( int argc, char const * const * argv )
 
     DWORD myStyle = WS_POPUP;
 
-    /*
+    
     
     //******************************************************************************************
     //*  Signals for ctrl (// needed! otherwise a ctrl-break leeds to exit(0)!!!)
     //******************************************************************************************
+    TRACE(HERE,"call signal-handler...");
     signal(SIGABRT, exitHandler);
     signal(SIGBREAK,exitHandler);
     signal(SIGTERM, exitHandler);
@@ -167,6 +163,7 @@ int mDaemon_main( int argc, char const * const * argv )
     //*  init-delay
     //******************************************************************************************
     //TODO: Linker Fehler beheben
+    TRACE(HERE,"mDaemon initializing...");
     mDaemon_indInitializing(60000);
 
 
@@ -176,6 +173,7 @@ int mDaemon_main( int argc, char const * const * argv )
     //  try create within the global name space, so that this program also
     //  on terminal server services runs only once 08.01.2004 (AGe)
     //******************************************************************************************
+    TRACE(HERE,"try create within the global name space...");
     version.dwOSVersionInfoSize = sizeof(OSVERSIONINFO);
     if(GetVersionEx (&version))
     {
@@ -270,24 +268,33 @@ int mDaemon_main( int argc, char const * const * argv )
 
     if(rc != 0)
     {
-      MessageBox
+        TRACE(HERE,"ERROR: Service <massaiConfig>not running...");
+
+        MessageBox
         (
-          NULL,
-          TEXT
+            NULL,
+            TEXT
             (
-              "ERROR: Service <massaiConfig> not running.\n\nPlease"
-              " start massai configuration- and trace services first."
+                "ERROR: Service <massaiConfig> not running.\n\nPlease"
+                " start massai configuration- and trace services first."
             ),
-          szClassName,
-          MB_ICONERROR
+            szClassName,
+            MB_ICONERROR
         );
-      exit( -2 );
+        exit( -2 );
     }
 
+    TRACE(HERE,"set Base environment variables...");
     globalConfig.getEnvS().SetBaseEnvVars();
 
+
+    //******************************************************************************************
+    //  handle the args parameter
+    //******************************************************************************************
     try
     {
+        TRACE(HERE,"handle the args parameter...");
+
         if( args.option( "SERVER" ) || mDaemon_isService() )
             globalConfig.setServerMode(true);
         
@@ -340,39 +347,41 @@ int mDaemon_main( int argc, char const * const * argv )
         Tools::printInfoAboutFiles ("..\\bin\\*.exe") ;
 
         if((rc = Tools::setWorkingDir()) != 0)
-        TRACE(HERE,"Failed to set working directory, rc = %d",rc);
-        */
-
+            TRACE(HERE,"Failed to set working directory, rc = %d",rc);
 
-        //******************************************************************************************
-        //  initialize the main components 
-        //******************************************************************************************
-        mControl_Impl impl(globalHInstance);
-        impl.getDialog().getMControlWindowConfig().registerWindow();
-        impl.getDialog().getMControlWindowConfig().createWindow();
-
-        impl.getDialog().startShowWindow(SW_SHOW);
-    try
-    {
     }
     catch( std::exception & X )
     {
         char const * se = X.what();
         TRACE( HERE, "%s", se );
-        SendMessage(globalConfig.getHwnd(),WM_CLOSE,0,0);
+        //SendMessage(globalConfig.getHwnd(),WM_CLOSE,0,0);
     }
     catch( char * se )
     {
         TRACE( HERE, "%s", se );
-        SendMessage(globalConfig.getHwnd(),WM_CLOSE,0,0);
+        //SendMessage(globalConfig.getHwnd(),WM_CLOSE,0,0);
     }
     catch(...)
     {
         char const * se = "unknown exception";
         TRACE( HERE, "%s", se );
-        SendMessage(globalConfig.getHwnd(),WM_CLOSE,0,0);
+        //SendMessage(globalConfig.getHwnd(),WM_CLOSE,0,0);
     }
 
+
+    //******************************************************************************************
+    //  initialize the main components 
+    //******************************************************************************************
+    TRACE(HERE,"initialize the main components...");
+
+    mControl_Impl impl(globalHInstance);
+    impl.getDialog().getMControlWindowConfig().registerWindow();
+    impl.getDialog().getMControlWindowConfig().createWindow();
+
+    impl.getDialog().startShowWindow(SW_SHOW);
+
+    OS_Sleep(500);
+    
     TRACE(HERE,"%s terminated.", szClassName);
     CloseHandle(isRunning);
 
-- 
2.41.0.windows.1

