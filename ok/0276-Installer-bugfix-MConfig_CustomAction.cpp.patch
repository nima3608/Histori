From edfa1e59f369a2a7c1a24c07b1a128578c7c615d Mon Sep 17 00:00:00 2001
From: tgeisler <tgeisler@90b65887-3827-0410-9a23-83215b262276>
Date: Tue, 16 Oct 2012 17:34:58 +0000
Subject: [PATCH 0276/1000] Installer bugfix MConfig_CustomAction.cpp

git-svn-id: svn://localhost/SelfServiceCommon/trunk@419 90b65887-3827-0410-9a23-83215b262276
---
 .../inc/MConfig_CustomAction_def.h            |   4 +-
 .../src/MConfig_CustomAction.cpp              | 183 ++++++++----------
 2 files changed, 88 insertions(+), 99 deletions(-)

diff --git a/SelfServiceCommon/Massai/cpp/Installer_CustomAction/inc/MConfig_CustomAction_def.h b/SelfServiceCommon/Massai/cpp/Installer_CustomAction/inc/MConfig_CustomAction_def.h
index dfb63f36..e414fdd7 100644
--- a/SelfServiceCommon/Massai/cpp/Installer_CustomAction/inc/MConfig_CustomAction_def.h
+++ b/SelfServiceCommon/Massai/cpp/Installer_CustomAction/inc/MConfig_CustomAction_def.h
@@ -1,6 +1,6 @@
 
-#define FILE_VER_BIN     1,0,0,3
-#define FILE_VER_STR     "FileVersion", "1.0.0.3\0"
+#define FILE_VER_BIN     1,0,0,4
+#define FILE_VER_STR     "FileVersion", "1.0.0.4\0"
 
 #define FILEDESCRIPTION  "FileDescription"  ,"MConfig_CustomActio\0"
 #define INTERNALNAME     "InternalName"     ,"MConfig_CustomActio\0"
diff --git a/SelfServiceCommon/Massai/cpp/Installer_CustomAction/src/MConfig_CustomAction.cpp b/SelfServiceCommon/Massai/cpp/Installer_CustomAction/src/MConfig_CustomAction.cpp
index 9ba6f325..0ce0eac0 100644
--- a/SelfServiceCommon/Massai/cpp/Installer_CustomAction/src/MConfig_CustomAction.cpp
+++ b/SelfServiceCommon/Massai/cpp/Installer_CustomAction/src/MConfig_CustomAction.cpp
@@ -46,7 +46,6 @@ typedef std::set<std::wstring> TUNIQUESET;
 BOOL __stdcall WcaIsPropertySetW(__in LPCWSTR szProperty)
 {
     DWORD cchProperty = 0;
-    char szEmpty[1] = "";
     UINT er = ::MsiGetPropertyW(WcaGetInstallHandle(), szProperty, L"", &cchProperty);
 
     return 0 < cchProperty; // property is set if the length is greater than zero
@@ -149,7 +148,7 @@ bool Check_Dialog_Cond(MSIHANDLE hInstall, std::wstring& prop_name, HRESULT& hr
 	std::wstringstream dbstrs;
 	LPWSTR pwzPropertyValue = NULL;
 
-	if(!WcaIsPropertySetW(prop_name.c_str()))
+	if(!prop_name.length() || !WcaIsPropertySetW(prop_name.c_str()))
 	{
 		hr = S_OK;
 		ret = true;
@@ -165,9 +164,11 @@ bool Check_Dialog_Cond(MSIHANDLE hInstall, std::wstring& prop_name, HRESULT& hr
 	}
 	//dbstrs << "MSI SETUP CA_NextDialog: Check Dialog " << prop_name.c_str() <<" Condition [" << std::wstring(pwzPropertyValue).c_str() << "]";
 	//Log_Str(dbstrs);
+
 	if (pwzPropertyValue && *pwzPropertyValue)
 	{
 		MSICONDITION condition = ::MsiEvaluateConditionW(hInstall, pwzPropertyValue);
+
 		if (condition == MSICONDITION_ERROR)
 		{
 			hr = E_INVALIDARG;
@@ -196,7 +197,6 @@ bool Check_Dialog_Cond(MSIHANDLE hInstall, std::wstring& prop_name, HRESULT& hr
 extern "C" _declspec(dllexport) UINT __stdcall CA_NextDialog(MSIHANDLE hInstall)
 {
 #define DIALOG_NAME L"DIALOG"
-#define START_DIALOG_NAME L"DIALOG_START"
 
 #define DIALOG_CONDITION_PREFIX L"COND_"
 
@@ -215,9 +215,11 @@ extern "C" _declspec(dllexport) UINT __stdcall CA_NextDialog(MSIHANDLE hInstall)
 	LPWSTR pwzPropertyValue = NULL;
 
 	bool init_prop=false;
+	bool set_initial_dialog=true;
+	int iDialogNum=-1;
 	if(!WcaIsPropertySet("NEXT_DIALOG"))
     {
-		init_prop = true;
+		init_prop=true;
     }
 	else
 	{
@@ -226,58 +228,50 @@ extern "C" _declspec(dllexport) UINT __stdcall CA_NextDialog(MSIHANDLE hInstall)
 		dbstrs << "MSI SETUP CA_NextDialog: Read NEXT_DIALOG [" << std::wstring(pwzPropertyValue).c_str() << "]";
 		Log_Str(dbstrs);
 		init_prop=!wcslen(pwzPropertyValue);
-		if(!init_prop)
-		{
-			init_prop = true;
-
-			int iDialogNum=-1;
-			if(wcscmp(pwzPropertyValue,START_DIALOG_NAME))
-			{
-				std::wstring wzDialogNum(pwzPropertyValue);
-				size_t not_num=wzDialogNum.find_last_not_of(L"0123456789");
+	}
 
-				if(not_num != std::wstring::npos)
-				{
-					wzDialogNum.erase(0,not_num+1);
-					std::wstringstream ss(wzDialogNum);
-					ss >> iDialogNum;
-				}
-			}
+	if(!init_prop)
+	{
+		std::wstring wzDialogNum(pwzPropertyValue);
+		size_t not_num=wzDialogNum.find_last_not_of(L"0123456789");
 
-			for(int i = iDialogNum; i < MAX_NUM_DIALOGS; i++)
-			{
+		if(not_num != std::wstring::npos)
+		{
+			wzDialogNum.erase(0,not_num+1);
+			std::wstringstream ss(wzDialogNum);
+			ss >> iDialogNum;
+		}
+	}
 
-				strbuf.str(std::wstring());
-				strbuf << DIALOG_NAME << (int)(i + 1);
-				std::wstring wstrDialogCondProp(DIALOG_CONDITION_PREFIX);
+	for(int i = iDialogNum; i < MAX_NUM_DIALOGS; i++)
+	{
+		strbuf.str(std::wstring());
+		strbuf << DIALOG_NAME << (int)(i + 1);
+		std::wstring wstrDialogCondProp(DIALOG_CONDITION_PREFIX);
 
-				wstrDialogCondProp.append(strbuf.str());
-				bool bCond = Check_Dialog_Cond(hInstall, wstrDialogCondProp, hr);
-				ExitOnFailure(hr, "MSI SETUP CA_NextDialog condition error");
-				if(!bCond) continue;
+		wstrDialogCondProp.append(strbuf.str());
+		bool bCond = Check_Dialog_Cond(hInstall, wstrDialogCondProp, hr);
+		ExitOnFailure(hr, "MSI SETUP CA_NextDialog condition error");
+		if(!bCond) continue;
 
-				dbstrs << "MSI SETUP CA_NextDialog: NEXT_DIALOG found Dialog " << std::wstring(pwzPropertyValue).c_str();
-				Log_Str(dbstrs);
-				init_prop = false;
-				hr = WcaSetProperty(L"NEXT_DIALOG", strbuf.str().c_str());
-				dbstrs << "MSI SETUP CA_NextDialog: SetProperty NEXT_DIALOG [" << strbuf.str().c_str() << "] Result:" << hr;
-				Log_Str(dbstrs);
-				ExitOnFailure(hr, "Failed to set NEXT_DIALOG property value");
-				break;
-			}
-			if(!init_prop)
-			{
-				if(!WcaIsPropertySetW(strbuf.str().c_str()))
-				{
-					init_prop = true;
-					dbstrs << "MSI SETUP CA_NextDialog: Dialog " << std::wstring(pwzPropertyValue).c_str() << " not found -> set DIALOG0 ";
-					Log_Str(dbstrs);
-				}
-			}
+		dbstrs << "MSI SETUP CA_NextDialog: NEXT_DIALOG found Dialog " << strbuf.str().c_str();
+		Log_Str(dbstrs);
+		hr = WcaSetProperty(L"NEXT_DIALOG", strbuf.str().c_str());
+		dbstrs << "MSI SETUP CA_NextDialog: SetProperty NEXT_DIALOG [" << strbuf.str().c_str() << "] Result:" << hr;
+		Log_Str(dbstrs);
+		ExitOnFailure(hr, "Failed to set NEXT_DIALOG property value");
+		set_initial_dialog=false;
+		break;
+	}
 
-		}
+	if( !pwzPropertyValue || !strbuf.str().length() || (strbuf.str().length() && !WcaIsPropertySetW(strbuf.str().c_str())) )
+	{
+		set_initial_dialog = true;
+		dbstrs << "MSI SETUP CA_NextDialog: Dialog NEXT_DIALOG not found -> set DIALOG0 ";
+		Log_Str(dbstrs);
 	}
-	if(init_prop)
+
+	if(set_initial_dialog)
 	{
 		std::wstring dln(DIALOG_NAME);
 		dln.append(L"0");
@@ -287,7 +281,7 @@ extern "C" _declspec(dllexport) UINT __stdcall CA_NextDialog(MSIHANDLE hInstall)
 		ExitOnFailure(hr, "Failed to set NEXT_DIALOG property value");
     }
 LExit:
-	ReleaseStr(pwzPropertyValue);
+	if(pwzPropertyValue)ReleaseStr(pwzPropertyValue);
 	er = SUCCEEDED(hr) ? ERROR_SUCCESS : ERROR_INSTALL_FAILURE;
     return WcaFinalize(er);
 }
@@ -309,6 +303,8 @@ extern "C" _declspec(dllexport) UINT __stdcall CA_PrevDialog(MSIHANDLE hInstall)
 	LPWSTR pwzPropertyValue = NULL;
 
 	bool init_prop=false;
+	bool set_initial_dialog=true;
+	int iDialogNum=-1;
 	if(!WcaIsPropertySet("NEXT_DIALOG"))
     {
 		init_prop = true;
@@ -320,66 +316,59 @@ extern "C" _declspec(dllexport) UINT __stdcall CA_PrevDialog(MSIHANDLE hInstall)
 		dbstrs << "MSI SETUP CA_PrevDialog: Read NEXT_DIALOG [" << std::wstring(pwzPropertyValue).c_str() << "]";
 		Log_Str(dbstrs);
 		init_prop=!wcslen(pwzPropertyValue);
-		if(!init_prop)
-		{
-			init_prop = true;
-
-			int iDialogNum=-1;
+	}
 
-			if(wcscmp(pwzPropertyValue,START_DIALOG_NAME))
-			{
-				std::wstring wzDialogNum(pwzPropertyValue);
-				size_t not_num=wzDialogNum.find_last_not_of(L"0123456789");
+	if(!init_prop)
+	{
+		std::wstring wzDialogNum(pwzPropertyValue);
+		size_t not_num=wzDialogNum.find_last_not_of(L"0123456789");
 
-				if(not_num != std::wstring::npos)
-				{
-					wzDialogNum.erase(0,not_num+1);
-					std::wstringstream ss(wzDialogNum);
-					ss >> iDialogNum;
-				}
-			}
+		if(not_num != std::wstring::npos)
+		{
+			wzDialogNum.erase(0,not_num+1);
+			std::wstringstream ss(wzDialogNum);
+			ss >> iDialogNum;
+		}
+	}
 
-			for(int i = iDialogNum; i < MAX_NUM_DIALOGS && i>=0 ; i--)
-			{
-					strbuf.str(std::wstring());
-					strbuf << DIALOG_NAME << (int)(i - 1);
-					std::wstring wstrDialogCondProp(DIALOG_CONDITION_PREFIX);
+	for(int i = iDialogNum; i < MAX_NUM_DIALOGS && i>=0 ; i--)
+	{
+			strbuf.str(std::wstring());
+			strbuf << DIALOG_NAME << (int)(i - 1);
+			std::wstring wstrDialogCondProp(DIALOG_CONDITION_PREFIX);
 
-					wstrDialogCondProp.append(strbuf.str());
-					bool bCond = Check_Dialog_Cond(hInstall, wstrDialogCondProp, hr);
-					ExitOnFailure(hr, "MSI SETUP CA_NextDialog condition error");
-					if(!bCond) continue;
+			wstrDialogCondProp.append(strbuf.str());
+			bool bCond = Check_Dialog_Cond(hInstall, wstrDialogCondProp, hr);
+			ExitOnFailure(hr, "MSI SETUP CA_NextDialog condition error");
+			if(!bCond) continue;
 
-					dbstrs << "MSI SETUP CA_PrevDialog: NEXT_DIALOG found Dialog " << std::wstring(pwzPropertyValue).c_str();
-					Log_Str(dbstrs);
-					init_prop = false;
-					hr = WcaSetProperty(L"NEXT_DIALOG", strbuf.str().c_str());
-					dbstrs << "MSI SETUP CA_PrevDialog: SetProperty NEXT_DIALOG [" << strbuf.str().c_str() << "] Result:" << hr;
-					Log_Str(dbstrs);
-					ExitOnFailure(hr, "Failed to set NEXT_DIALOG property value");
-					break;
-			}
-			if(!init_prop)
-			{
-				if(!WcaIsPropertySetW(strbuf.str().c_str()))
-				{
-					init_prop = true;
-					dbstrs << "MSI SETUP CA_PrevDialog: Dialog " << std::wstring(pwzPropertyValue).c_str() << " not found -> set DIALOG_START ";
-					Log_Str(dbstrs);
-				}
-			}
-		}
+			dbstrs << "MSI SETUP CA_PrevDialog: NEXT_DIALOG found Dialog " << strbuf.str().c_str();
+			Log_Str(dbstrs);
+			init_prop = false;
+			hr = WcaSetProperty(L"NEXT_DIALOG", strbuf.str().c_str());
+			dbstrs << "MSI SETUP CA_PrevDialog: SetProperty NEXT_DIALOG [" << strbuf.str().c_str() << "] Result:" << hr;
+			Log_Str(dbstrs);
+			ExitOnFailure(hr, "Failed to set NEXT_DIALOG property value");
+			set_initial_dialog=false;
+			break;
+	}
+	if(!pwzPropertyValue || !strbuf.str().length() || (strbuf.str().length() && !WcaIsPropertySetW(strbuf.str().c_str())))
+	{
+		set_initial_dialog = true;
+		dbstrs << "MSI SETUP CA_PrevDialog: Dialog NEXT_DIALOG not found -> set DIALOG0 ";
+		Log_Str(dbstrs);
 	}
-	if(init_prop)
+	if(set_initial_dialog)
 	{
-		std::wstring dln(L"DIALOG_START");
+		std::wstring dln(DIALOG_NAME);
+		dln.append(L"0");
 		hr = WcaSetProperty(L"NEXT_DIALOG", dln.c_str());
 		dbstrs << "CA_NextDialog: SetProperty NEXT_DIALOG [" << dln.c_str() << "] Result:" << hr;
 		Log_Str(dbstrs);
 		ExitOnFailure(hr, "Failed to set NEXT_DIALOG property value");
     }
 LExit:
-	ReleaseStr(pwzPropertyValue);
+	if(pwzPropertyValue)ReleaseStr(pwzPropertyValue);
     er = SUCCEEDED(hr) ? ERROR_SUCCESS : ERROR_INSTALL_FAILURE;
     return WcaFinalize(er);
 }
-- 
2.41.0.windows.1

