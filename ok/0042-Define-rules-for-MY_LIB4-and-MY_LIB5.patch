From eaf9a5030cca1af3e93d961296fcb492d7be9c1c Mon Sep 17 00:00:00 2001
From: jkreierh <jkreierh@2eb42a87-3827-0410-b767-dc15055982e4>
Date: Wed, 13 Apr 2011 15:04:26 +0000
Subject: [PATCH 042/462] Define rules for MY_LIB4 and MY_LIB5

git-svn-id: svn://localhost/SelfServiceBuild/trunk@63 2eb42a87-3827-0410-b767-dc15055982e4
---
 SelfServiceBuild/Build/cpp/makefile.rules.mak | 1762 +++++++++--------
 1 file changed, 906 insertions(+), 856 deletions(-)

diff --git a/SelfServiceBuild/Build/cpp/makefile.rules.mak b/SelfServiceBuild/Build/cpp/makefile.rules.mak
index 072a84f..f594d41 100644
--- a/SelfServiceBuild/Build/cpp/makefile.rules.mak
+++ b/SelfServiceBuild/Build/cpp/makefile.rules.mak
@@ -1,856 +1,906 @@
-######################################################################
-#
-# /vob/SelfServiceBuild/Build/cpp/makefile.rules.mak
-#
-######################################################################
-
-######################################################################
-# Suffixe
-######################################################################
-
-.SUFFIXES: .mak .rc .l .idl .cpp .c .obj .res .lib .dll .exe
-
-######################################################################
-# Spezielle Regeln
-######################################################################
-
-# Sonderregel fuer die Common-Interface-Dateien
-{$(COMMONROOT)\Interfaces\src}.cpp{$(_OBJ)}.obj:
-    $(CC) $(STDCFLAGS) $(MY_CFLAGS) $< -Fo$@
-
-{$(COMMONROOT)\Interfaces\src}.cpp{$(_OBJ)}.lob:
-    $(LINT) -os($(_OBJ)\$(@B).lnt.com.txt) -oo($@) $(STDLINTLOBFLAGS) $(MY_LINTFLAGS) -COMPILER_OPTIONS $(STDCFLAGS) $(MY_CFLAGS) -LINT_OPTIONS $< 
-
-######################################################################
-# Allgemeine Regeln Common-Common-Source
-######################################################################
-
-# cpp => obj
-{$(PP_SRC)}.cpp{$(_OBJ)}.obj:
-    $(CC) $(STDCFLAGS) $(MY_CFLAGS) $< -Fo$@
-
-{$(PP_SRC)}.cpp{$(_OBJ)}.lob:
-    $(LINT) -os($(_OBJ)\$(@B).lnt.txt) -oo($@) $(STDLINTLOBFLAGS) $(MY_LINTFLAGS) -COMPILER_OPTIONS $(STDCFLAGS) $(MY_CFLAGS) -LINT_OPTIONS $< 
-
-# gsoap-cpp => obj
-{$(PP_SOAPGEN)}.cpp{$(_OBJ)}.obj:
-    $(CC) $(STDCFLAGS) $(MY_CFLAGS) $< -Fo$@
-
-{$(PP_SOAPGEN)}.cpp{$(_OBJ)}.lob:
-    $(LINT) -os($(_OBJ)\$(@B).lnt.gen.txt) -oo($@) $(STDLINTLOBFLAGS) $(MY_LINTFLAGS) -COMPILER_OPTIONS $(STDCFLAGS) $(MY_CFLAGS) -LINT_OPTIONS $< 
-
-# c => obj
-{$(PP_SRC)}.c{$(_OBJ)}.obj:
-    $(CC) $(STDCFLAGS) $(MY_CFLAGS) $< -Fo$@
-
-{$(PP_SRC)}.c{$(_OBJ)}.lob:
-    $(LINT) -os($(_OBJ)\$(@B).lnt.txt) -oo($@) $(STDLINTLOBFLAGS) $(MY_LINTFLAGS) -COMPILER_OPTIONS $(STDCFLAGS) $(MY_CFLAGS) -LINT_OPTIONS $< 
-
-# rc => res
-{$(PP_RES)}.rc{$(_OBJ)}.res:
-    $(RC) $(STDRCFLAGS) $(MY_RCFLAGS) -fo$@ $<
-
-# lex => cpp => obj
-{$(PP_SRC)}.l{$(_OBJ)}.obj:
-    $(FLEX) $(MY_FLEXFLAGS) -o$(_OBJ)\$(@B).cpp $<
-    $(CC) $(STDCFLAGS) $(MY_CFLAGS) $(_OBJ)\$(@B).cpp -Fo$@
-
-{$(PP_SRC)}.l{$(_OBJ)}.lob:
-    $(FLEX) $(MY_FLEXFLAGS) -o$(_OBJ)\$(@B).cpp $<
-    $(LINT) -os($(_OBJ)\$(@B).lnt.gen.txt) -oo($@) $(STDLINTLOBFLAGS) $(MY_LINTFLAGS) -COMPILER_OPTIONS $(STDCFLAGS) $(MY_CFLAGS) -LINT_OPTIONS $(_OBJ)\$(@B).cpp
-
-######################################################################
-# Allgemeine Regeln Common-Source
-######################################################################
-
-# cpp => obj
-{$(P_SRC)}.cpp{$(_OBJ)}.obj:
-    $(CC) $(STDCFLAGS) $(MY_CFLAGS) $< -Fo$@
-
-{$(P_SRC)}.cpp{$(_OBJ)}.lob:
-    $(LINT) -os($(_OBJ)\$(@B).lnt.txt) -oo($@) $(STDLINTLOBFLAGS) $(MY_LINTFLAGS) -COMPILER_OPTIONS $(STDCFLAGS) $(MY_CFLAGS) -LINT_OPTIONS $< 
-
-# gsoap-cpp => obj
-{$(P_SOAPGEN)}.cpp{$(_OBJ)}.obj:
-    $(CC) $(STDCFLAGS) $(MY_CFLAGS) $< -Fo$@
-
-{$(P_SOAPGEN)}.cpp{$(_OBJ)}.lob:
-    $(LINT) -os($(_OBJ)\$(@B).lnt.gen.txt) -oo($@) $(STDLINTLOBFLAGS) $(MY_LINTFLAGS) -COMPILER_OPTIONS $(STDCFLAGS) $(MY_CFLAGS) -LINT_OPTIONS $< 
-
-# c => obj
-{$(P_SRC)}.c{$(_OBJ)}.obj:
-    $(CC) $(STDCFLAGS) $(MY_CFLAGS) $< -Fo$@
-
-{$(P_SRC)}.c{$(_OBJ)}.lob:
-    $(LINT) -os($(_OBJ)\$(@B).lnt.txt) -oo($@) $(STDLINTLOBFLAGS) $(MY_LINTFLAGS) -COMPILER_OPTIONS $(STDCFLAGS) $(MY_CFLAGS) -LINT_OPTIONS $< 
-
-# rc => res
-{$(P_RES)}.rc{$(_OBJ)}.res:
-    $(RC) $(STDRCFLAGS) $(MY_RCFLAGS) -fo$@ $<
-
-# lex => cpp => obj
-{$(P_SRC)}.l{$(_OBJ)}.obj:
-    $(FLEX) $(MY_FLEXFLAGS) -o$(_OBJ)\$(@B).cpp $<
-    $(CC) $(STDCFLAGS) $(MY_CFLAGS) $(_OBJ)\$(@B).cpp -Fo$@
-
-{$(P_SRC)}.l{$(_OBJ)}.lob:
-    $(FLEX) $(MY_FLEXFLAGS) -o$(_OBJ)\$(@B).cpp $<
-    $(LINT) -os($(_OBJ)\$(@B).lnt.gen.txt) -oo($@) $(STDLINTLOBFLAGS) $(MY_LINTFLAGS) -COMPILER_OPTIONS $(STDCFLAGS) $(MY_CFLAGS) -LINT_OPTIONS $(_OBJ)\$(@B).cpp
-
-######################################################################
-# Allgemeine Regeln
-######################################################################
-
-# cpp => obj
-{$(_GEN)}.cpp{$(_OBJ)}.obj:
-    $(CC) $(STDCFLAGS) $(MY_CFLAGS) $< -Fo$@
-
-{$(_GEN)}.cpp{$(_OBJ)}.lob:
-    $(LINT) -os($(_OBJ)\$(@B).lnt.gen.txt) -oo($@) $(STDLINTLOBFLAGS) $(MY_LINTFLAGS) -COMPILER_OPTIONS $(STDCFLAGS) $(MY_CFLAGS) -LINT_OPTIONS $< 
-
-# cpp => obj
-{$(_SRC)}.cpp{$(_OBJ)}.obj:
-    $(CC) $(STDCFLAGS) $(MY_CFLAGS) $< -Fo$@
-
-{$(_SRC)}.cpp{$(_OBJ)}.lob:
-    $(LINT) -os($(_OBJ)\$(@B).lnt.txt) -oo($@) $(STDLINTLOBFLAGS) $(MY_LINTFLAGS) -COMPILER_OPTIONS $(STDCFLAGS) $(MY_CFLAGS) -LINT_OPTIONS $< 
-
-# gsoap-cpp => obj
-{$(_SOAPGEN)}.cpp{$(_OBJ)}.obj:
-    $(CC) $(STDCFLAGS) $(MY_CFLAGS) $< -Fo$@
-
-{$(_SOAPGEN)}.cpp{$(_OBJ)}.lob:
-    $(LINT) -os($(_OBJ)\$(@B).lnt.gen.txt) -oo($@) $(STDLINTLOBFLAGS) $(MY_LINTFLAGS) -COMPILER_OPTIONS $(STDCFLAGS) $(MY_CFLAGS) -LINT_OPTIONS $< 
-
-# c => obj
-{$(_SRC)}.c{$(_OBJ)}.obj:
-    $(CC) $(STDCFLAGS) $(MY_CFLAGS) $< -Fo$@
-
-{$(_SRC)}.c{$(_OBJ)}.lob:
-    $(LINT) -os($(_OBJ)\$(@B).lnt.txt) -oo($@) $(STDLINTLOBFLAGS) $(MY_LINTFLAGS) -COMPILER_OPTIONS $(STDCFLAGS) $(MY_CFLAGS) -LINT_OPTIONS $< 
-
-# idl => cpp
-.idl{$(_GEN)}.cpp:
-    $(IDLC) $(IDLFLAGS) $(MY_IDLFLAGS) $<
-
-# rc => res
-{$(_RES)}.rc{$(_OBJ)}.res:
-    $(RC) $(STDRCFLAGS) $(MY_RCFLAGS) -fo$@ $<
-
-# lex => cpp => obj
-{$(_SRC)}.l{$(_OBJ)}.obj:
-    $(FLEX) $(MY_FLEXFLAGS) -o$(_OBJ)\$(@B).cpp $<
-    $(CC) $(STDCFLAGS) $(MY_CFLAGS) $(_OBJ)\$(@B).cpp -Fo$@
-
-{$(_SRC)}.l{$(_OBJ)}.lob:
-    $(FLEX) $(MY_FLEXFLAGS) -o$(_OBJ)\$(@B).cpp $<
-    $(LINT) -os($(_OBJ)\$(@B).lnt.gen.txt) -oo($@) $(STDLINTLOBFLAGS) $(MY_LINTFLAGS) -COMPILER_OPTIONS $(STDCFLAGS) $(MY_CFLAGS) -LINT_OPTIONS $(_OBJ)\$(@B).cpp
-
-
-######################################################################
-# all
-######################################################################
-
-all: $(DEP_MAKEDEP) \
-     $(_OBJ) \
-     $(MY_GEN_CPPS) \
-     $(MY_LIB1)  $(MY_LIB2)  $(MY_LIB3) \
-     $(MY_DLL1)  $(MY_DLL2)  \
-     $(MY_BIN1)  $(MY_BIN2)  $(MY_BIN3)  $(MY_BIN4)  $(MY_BIN5)  \
-     $(MY_BIN6)  $(MY_BIN7)  $(MY_BIN8)  $(MY_BIN9)  $(MY_BIN10) \
-     $(MY_BIN11) $(MY_BIN12) $(MY_BIN13) $(MY_BIN14) $(MY_BIN15)
-     
-
-######################################################################
-# lint
-######################################################################
-
-MY_DLL1_LINT= $(MY_DLL1)
-MY_DLL1_LINT= $(MY_DLL1_LINT:.dll=.dll.lnt.txt)
-MY_DLL1_LINT= $(MY_DLL1_LINT:.x32=.x32.lnt.txt)
-
-MY_DLL2_LINT= $(MY_DLL2)
-MY_DLL2_LINT= $(MY_DLL2_LINT:.dll=.dll.lnt.txt)
-MY_DLL2_LINT= $(MY_DLL2_LINT:.x32=.x32.lnt.txt)
-
-
-lint: $(DEP_MAKEDEP) \
-      $(_OBJ) \
-      $(MY_GEN_CPPS) \
-      $(MY_LIB1:.lib=.lib.lnt.txt)  $(MY_LIB2:.lib=.lib.lnt.txt)  $(MY_LIB3:.lib=.lib.lnt.txt) \
-      $(MY_DLL1_LINT)  $(MY_DLL2_LINT)  \
-      $(MY_BIN1:.exe=.exe.lnt.txt)  $(MY_BIN2:.exe=.exe.lnt.txt)  $(MY_BIN3:.exe=.exe.lnt.txt)  $(MY_BIN4:.exe=.exe.lnt.txt)  $(MY_BIN5:.exe=.exe.lnt.txt)  \
-      $(MY_BIN6:.exe=.exe.lnt.txt)  $(MY_BIN7:.exe=.exe.lnt.txt)  $(MY_BIN8:.exe=.exe.lnt.txt)  $(MY_BIN9:.exe=.exe.lnt.txt)  $(MY_BIN10:.exe=.exe.lnt.txt) \
-      $(MY_BIN11:.exe=.exe.lnt.txt) $(MY_BIN12:.exe=.exe.lnt.txt) $(MY_BIN13:.exe=.exe.lnt.txt) $(MY_BIN14:.exe=.exe.lnt.txt) $(MY_BIN15:.exe=.exe.lnt.txt)      
-
-######################################################################
-# globaldep
-######################################################################
-
-DEPFILE= $(MAKEDIR)
-DEPFILE= $(DEPFILE:\=_)
-DEPFILE= $(DEPFILE::=_)
-DEPFILE= $(_DEP)\$(DEPFILE).dep
-
-globaldep: $(_DEP)
-      @echo # Automatically generated makefile, do not change > $(DEPFILE)
-      @echo !include $(DEPFILE) >> $(_DEP)\all.dep
-!if "$(MY_GEN_CPPS)" != ""
-      @for %%i in ($(MY_GEN_CPPS)) do @echo %%~nxi: %%i >> $(DEPFILE) && @echo. >> $(DEPFILE)
-      @echo $(MY_GEN_CPPS): forcebuild>> $(DEPFILE)
-      @echo.   cd $(MAKEDIR) ^&^& ^$(MAKE) ^$@ >> $(DEPFILE)
-      @echo. >> $(DEPFILE)
-      @echo $(MAKEDIR): forcebuild>> $(DEPFILE)
-      @echo.   cd $(MAKEDIR) ^&^& ^$(MAKE) >> $(DEPFILE)
-      @echo. >> $(DEPFILE)
-!endif
-!if "$(MY_LIB1)" != ""
-      @for %%i in ($(MY_LIB1)) do @echo %%~nxi: %%i >> $(DEPFILE) && @echo. >> $(DEPFILE)
-      @echo $(MY_LIB1): forcebuild $(MY_LIB1_USER_LIBS) $(MY_LIB1_GEN_DIRS)>> $(DEPFILE)
-      @echo.   cd $(MAKEDIR) ^&^& ^$(MAKE) $(MY_LIB1) >> $(DEPFILE)
-      @echo. >> $(DEPFILE)
-!endif
-!if "$(MY_LIB2)" != ""
-      @for %%i in ($(MY_LIB2)) do @echo %%~nxi: %%i >> $(DEPFILE) && @echo. >> $(DEPFILE)
-      @echo $(MY_LIB2): forcebuild $(MY_LIB2_USER_LIBS) $(MY_LIB2_GEN_DIRS) >> $(DEPFILE)
-      @echo.   cd $(MAKEDIR) ^&^& ^$(MAKE) $(MY_LIB2) >> $(DEPFILE)
-      @echo. >> $(DEPFILE)
-!endif
-!if "$(MY_LIB3)" != ""
-      @for %%i in ($(MY_LIB3)) do @echo %%~nxi: %%i >> $(DEPFILE) && @echo. >> $(DEPFILE)
-      @echo $(MY_LIB3): forcebuild $(MY_LIB3_USER_LIBS) (MY_LIB3_GEN_DIRS) >> $(DEPFILE)
-      @echo.   cd $(MAKEDIR) ^&^& ^$(MAKE) $(MY_LIB3) >> $(DEPFILE)
-      @echo. >> $(DEPFILE)
-!endif
-!if "$(MY_DLL1)" != ""
-      @for %%i in ($(MY_DLL1)) do @echo %%~nxi: %%i >> $(DEPFILE) && @echo. >> $(DEPFILE)
-      @echo $(MY_DLL1): forcebuild $(MY_DLL1_USER_LIBS) $(MY_DLL1_GEN_DIRS) >> $(DEPFILE)
-      @echo.   cd $(MAKEDIR) ^&^& ^$(MAKE) $(MY_DLL1) >> $(DEPFILE)
-      @echo. >> $(DEPFILE)
-      @for %%i in ($(MY_DLL1)) do @echo $(_LIB)\%%~ni.lib: $(MY_DLL1) >> $(DEPFILE)
-      @echo. >> $(DEPFILE)
-!endif
-!if "$(MY_DLL2)" != ""
-      @for %%i in ($(MY_DLL2)) do @echo %%~nxi: %%i >> $(DEPFILE) && @echo. >> $(DEPFILE)
-      @echo $(MY_DLL2): forcebuild $(MY_DLL2_USER_LIBS) $(MY_DLL2_GEN_DIRS) >> $(DEPFILE)
-      @echo.   cd $(MAKEDIR) ^&^& ^$(MAKE) $(MY_DLL2) >> $(DEPFILE)
-      @echo. >> $(DEPFILE)
-      @for %%i in ($(MY_DLL2)) do @echo $(_LIB)\%%~ni.lib: $(MY_DLL2) >> $(DEPFILE)
-      @echo. >> $(DEPFILE)
-!endif
-!if "$(MY_BIN1)" != ""
-      @for %%i in ($(MY_BIN1)) do @echo %%~nxi: %%i >> $(DEPFILE) && @echo. >> $(DEPFILE)
-      @echo $(MY_BIN1): forcebuild $(MY_BIN1_USER_LIBS) $(MY_BIN1_GEN_DIRS) $(_LIB)\gracefullycrash.lib>> $(DEPFILE)
-      @echo.   cd $(MAKEDIR) ^&^& ^$(MAKE) $(MY_BIN1) >> $(DEPFILE)
-      @echo. >> $(DEPFILE)
-!endif
-!if "$(MY_BIN2)" != ""
-      @for %%i in ($(MY_BIN2)) do @echo %%~nxi: %%i >> $(DEPFILE) && @echo. >> $(DEPFILE)
-      @echo $(MY_BIN2): forcebuild $(MY_BIN2_USER_LIBS) $(MY_BIN2_GEN_DIRS) $(_LIB)\gracefullycrash.lib>> $(DEPFILE)
-      @echo.   cd $(MAKEDIR) ^&^& ^$(MAKE) $(MY_BIN2) >> $(DEPFILE)
-      @echo. >> $(DEPFILE)
-!endif
-!if "$(MY_BIN3)" != ""
-      @for %%i in ($(MY_BIN3)) do @echo %%~nxi: %%i >> $(DEPFILE) && @echo. >> $(DEPFILE)
-      @echo $(MY_BIN3): forcebuild $(MY_BIN3_USER_LIBS) $(MY_BIN3_GEN_DIRS) $(_LIB)\gracefullycrash.lib>> $(DEPFILE)
-      @echo.   cd $(MAKEDIR) ^&^& ^$(MAKE) $(MY_BIN3) >> $(DEPFILE)
-      @echo. >> $(DEPFILE)
-!endif
-!if "$(MY_BIN4)" != ""
-      @for %%i in ($(MY_BIN4)) do @echo %%~nxi: %%i >> $(DEPFILE) && @echo. >> $(DEPFILE)
-      @echo $(MY_BIN4): forcebuild $(MY_BIN4_USER_LIBS) $(MY_BIN4_GEN_DIRS) $(_LIB)\gracefullycrash.lib>> $(DEPFILE)
-      @echo.   cd $(MAKEDIR) ^&^& ^$(MAKE) $(MY_BIN4) >> $(DEPFILE)
-      @echo. >> $(DEPFILE)
-!endif
-!if "$(MY_BIN5)" != ""
-      @for %%i in ($(MY_BIN5)) do @echo %%~nxi: %%i >> $(DEPFILE) && @echo. >> $(DEPFILE)
-      @echo $(MY_BIN5): forcebuild $(MY_BIN5_USER_LIBS) $(MY_BIN5_GEN_DIRS) $(_LIB)\gracefullycrash.lib>> $(DEPFILE)
-      @echo.   cd $(MAKEDIR) ^&^& ^$(MAKE) $(MY_BIN5) >> $(DEPFILE)
-      @echo. >> $(DEPFILE)
-!endif
-!if "$(MY_BIN6)" != ""
-      @for %%i in ($(MY_BIN6)) do @echo %%~nxi: %%i >> $(DEPFILE) && @echo. >> $(DEPFILE)
-      @echo $(MY_BIN6): forcebuild $(MY_BIN6_USER_LIBS) $(MY_BIN6_GEN_DIRS) $(_LIB)\gracefullycrash.lib>> $(DEPFILE)
-      @echo.   cd $(MAKEDIR) ^&^& ^$(MAKE) $(MY_BIN6) >> $(DEPFILE)
-      @echo. >> $(DEPFILE)
-!endif
-!if "$(MY_BIN7)" != ""
-      @for %%i in ($(MY_BIN7)) do @echo %%~nxi: %%i >> $(DEPFILE) && @echo. >> $(DEPFILE)
-      @echo $(MY_BIN7): forcebuild $(MY_BIN7_USER_LIBS) $(MY_BIN7_GEN_DIRS) $(_LIB)\gracefullycrash.lib>> $(DEPFILE)
-      @echo.   cd $(MAKEDIR) ^&^& ^$(MAKE) $(MY_BIN7) >> $(DEPFILE)
-      @echo. >> $(DEPFILE)
-!endif
-!if "$(MY_BIN8)" != ""
-      @for %%i in ($(MY_BIN8)) do @echo %%~nxi: %%i >> $(DEPFILE) && @echo. >> $(DEPFILE)
-      @echo $(MY_BIN8): forcebuild $(MY_BIN8_USER_LIBS) $(MY_BIN8_GEN_DIRS) $(_LIB)\gracefullycrash.lib>> $(DEPFILE)
-      @echo.   cd $(MAKEDIR) ^&^& ^$(MAKE) $(MY_BIN8) >> $(DEPFILE)
-      @echo. >> $(DEPFILE)
-!endif
-!if "$(MY_BIN9)" != ""
-      @for %%i in ($(MY_BIN9)) do @echo %%~nxi: %%i >> $(DEPFILE) && @echo. >> $(DEPFILE)
-      @echo $(MY_BIN9): forcebuild $(MY_BIN9_USER_LIBS) $(MY_BIN9_GEN_DIRS) $(_LIB)\gracefullycrash.lib>> $(DEPFILE)
-      @echo.   cd $(MAKEDIR) ^&^& ^$(MAKE) $(MY_BIN9) >> $(DEPFILE)
-      @echo. >> $(DEPFILE)
-!endif
-!if "$(MY_BIN10)" != ""
-      @for %%i in ($(MY_BIN10)) do @echo %%~nxi: %%i >> $(DEPFILE) && @echo. >> $(DEPFILE)
-      @echo $(MY_BIN10): forcebuild $(MY_BIN10_USER_LIBS) $(MY_BIN10_GEN_DIRS) $(_LIB)\gracefullycrash.lib>> $(DEPFILE)
-      @echo.   cd $(MAKEDIR) ^&^& ^$(MAKE) $(MY_BIN10) >> $(DEPFILE)
-      @echo. >> $(DEPFILE)
-!endif
-!if "$(MY_BIN11)" != ""
-      @for %%i in ($(MY_BIN11)) do @echo %%~nxi: %%i >> $(DEPFILE) && @echo. >> $(DEPFILE)
-      @echo $(MY_BIN11): forcebuild $(MY_BIN11_USER_LIBS) $(MY_BIN11_GEN_DIRS) $(_LIB)\gracefullycrash.lib>> $(DEPFILE)
-      @echo.   cd $(MAKEDIR) ^&^& ^$(MAKE) $(MY_BIN11) >> $(DEPFILE)
-      @echo. >> $(DEPFILE)
-!endif
-!if "$(MY_BIN12)" != ""
-      @for %%i in ($(MY_BIN12)) do @echo %%~nxi: %%i >> $(DEPFILE) && @echo. >> $(DEPFILE)
-      @echo $(MY_BIN12): forcebuild $(MY_BIN12_USER_LIBS) $(MY_BIN12_GEN_DIRS) $(_LIB)\gracefullycrash.lib>> $(DEPFILE)
-      @echo.   cd $(MAKEDIR) ^&^& ^$(MAKE) $(MY_BIN12) >> $(DEPFILE)
-      @echo. >> $(DEPFILE)
-!endif
-!if "$(MY_BIN13)" != ""
-      @for %%i in ($(MY_BIN13)) do @echo %%~nxi: %%i >> $(DEPFILE) && @echo. >> $(DEPFILE)
-      @echo $(MY_BIN13): forcebuild $(MY_BIN13_USER_LIBS) $(MY_BIN13_GEN_DIRS) $(_LIB)\gracefullycrash.lib>> $(DEPFILE)
-      @echo.   cd $(MAKEDIR) ^&^& ^$(MAKE) $(MY_BIN13) >> $(DEPFILE)
-      @echo. >> $(DEPFILE)
-!endif
-!if "$(MY_BIN14)" != ""
-      @for %%i in ($(MY_BIN14)) do @echo %%~nxi: %%i >> $(DEPFILE) && @echo. >> $(DEPFILE)
-      @echo $(MY_BIN14): forcebuild $(MY_BIN14_USER_LIBS) $(MY_BIN14_GEN_DIRS) $(_LIB)\gracefullycrash.lib>> $(DEPFILE)
-      @echo.   cd $(MAKEDIR) ^&^& ^$(MAKE) $(MY_BIN14) >> $(DEPFILE)
-      @echo. >> $(DEPFILE)
-!endif
-!if "$(MY_BIN15)" != ""
-      @for %%i in ($(MY_BIN15)) do @echo %%~nxi: %%i >> $(DEPFILE) && @echo. >> $(DEPFILE)
-      @echo $(MY_BIN15): forcebuild $(MY_BIN15_USER_LIBS) $(MY_BIN15_GEN_DIRS) $(_LIB)\gracefullycrash.lib>> $(DEPFILE)
-      @echo.   cd $(MAKEDIR) ^&^& ^$(MAKE) $(MY_BIN15) >> $(DEPFILE)
-      @echo. >> $(DEPFILE)
-!endif
-
-
-
-######################################################################
-# out-directory
-######################################################################
-
-$(_DEP):
-     mkdir $@
-
-$(_OBJ):
-     mkdir $@
-     
-######################################################################
-# MY_LIBx
-######################################################################
-
-!if "$(MY_LIB1)" != ""
-
-$(MY_LIB1): $(_OBJ) $(MY_LIB1_OBJS) $(MY_LIB1_USER_LIBS)
-    @echo ------- Linking $@
-    @if exist $@ echo del $@ && del $@
-    $(LB) $(STDLIBFLAGS) $(MY_LBFLAGS) $(MY_LIB1_OBJS) $(MY_LIB1_USER_LIBS) $(MY_LIB1_LIBS) -out:$@
-    @echo ------- Linking done.
-
-
-$(MY_LIB1:.lib=.lib.lnt.txt): $(_OBJ) $(MY_LIB1_OBJS:.obj=.lob)
-    $(LINT) -os($@) $(STDLINTFLAGS) $(MY_LINTFLAGS) $(MY_LIB1_OBJS:.obj=.lob) 
-
-
-!endif
-
-!if "$(MY_LIB2)" != ""
-
-$(MY_LIB2): $(_OBJ) $(MY_LIB2_OBJS) $(MY_LIB2_USER_LIBS)
-    @echo ------- Linking $@
-    @if exist $@ echo del $@ && del $@
-    $(LB) $(STDLIBFLAGS) $(MY_LBFLAGS) $(MY_LIB2_OBJS) $(MY_LIB2_USER_LIBS) $(MY_LIB2_LIBS) -out:$@
-    @echo ------- Linking done.
-
-$(MY_LIB2:.lib=.lib.lnt.txt): $(_OBJ) $(MY_LIB2_OBJS:.obj=.lob)
-    $(LINT) -os($@) $(STDLINTFLAGS) $(MY_LINTFLAGS) $(MY_LIB2_OBJS:.obj=.lob) 
-
-!endif
-
-!if "$(MY_LIB3)" != ""
-
-$(MY_LIB3): $(_OBJ) $(MY_LIB3_OBJS) $(MY_LIB3_USER_LIBS)
-    @echo ------- Linking $@
-    @if exist $@ echo del $@ && del $@
-    $(LB) $(STDLIBFLAGS) $(MY_LBFLAGS) $(MY_LIB3_OBJS) $(MY_LIB3_USER_LIBS) $(MY_LIB3_LIBS) -out:$@
-    @echo ------- Linking done.
-
-$(MY_LIB3:.lib=.lib.lnt.txt): $(_OBJ) $(MY_LIB3_OBJS:.obj=.lob)
-    $(LINT) -os($@) $(STDLINTFLAGS) $(MY_LINTFLAGS) $(MY_LIB3_OBJS:.obj=.lob) 
-
-!endif
-
-######################################################################
-# MY_DLLx
-######################################################################
-
-!if "$(MY_DLL1)" != ""
-
-$(MY_DLL1): $(_OBJ) $(MY_DLL1_OBJS) $(MY_DLL1_RES) $(MY_DLL1_USER_LIBS)
-    @echo ------- Linking $@
-    @if exist $@ echo del $@ && del $@
-    $(LD) $(STDDLLFLAGS) $(MY_LDFLAGS) $(MY_DLL1_LDFLAGS) $(MY_DLL1_USER_LIBS) \
-        $(MY_DLL1_LINKLIBS) $(MY_DLL1_OBJS) $(MY_DLL1_RES) \
-        -implib:$(_LIB)\$(@B).lib \
-        -map:$(_DLL)\$(@B).map \
-        -pdb:$(_DLL)\$(@B).pdb \
-        -out:$@
-    @echo ------- Linking done.
-    
-$(MY_DLL1_LINT): $(_OBJ) $(MY_DLL1_OBJS:.obj=.lob)
-    $(LINT) -os($@) $(STDLINTFLAGS) $(MY_LINTFLAGS) $(MY_DLL1_OBJS:.obj=.lob) 
-
-!endif
-
-!if "$(MY_DLL2)" != ""
-
-$(MY_DLL2): $(_OBJ) $(MY_DLL2_OBJS) $(MY_DLL2_RES) $(MY_DLL2_USER_LIBS)
-    @echo ------- Linking $@
-    @if exist $@ echo del $@ && del $@
-    $(LD) $(STDDLLFLAGS) $(MY_LDFLAGS) $(MY_DLL2_LDFLAGS) $(MY_DLL2_USER_LIBS) \
-        $(MY_DLL2_LINKLIBS) $(MY_DLL2_OBJS) $(MY_DLL2_RES) \
-        -implib:$(_LIB)\$(@B).lib \
-        -map:$(_DLL)\$(@B).map \
-        -pdb:$(_DLL)\$(@B).pdb \
-        -out:$@
-    @echo ------- Linking done.
-
-$(MY_DLL2_LINT): $(_OBJ) $(MY_DLL2_OBJS:.obj=.lob)
-    $(LINT) -os($@) $(STDLINTFLAGS) $(MY_LINTFLAGS) $(MY_DLL2_OBJS:.obj=.lob) 
-    
-!endif
-
-######################################################################
-# MY_BINx
-######################################################################
-
-!if "$(MY_BIN1)" != ""
-
-$(MY_BIN1): \
-    $(MY_DLL1) $(MY_DLL2) $(MY_LIB1) $(MY_LIB2) $(MY_LIB3) \
-    $(_OBJ) $(MY_BIN1_OBJS) $(MY_BIN1_RES) $(MY_BIN1_USER_LIBS)
-    @echo ------- Linking $@
-    @if exist $@ echo del $@ && del $@
-    $(LD) $(STDBINFLAGS) $(MY_LDFLAGS) $(MY_BIN1_LDFLAGS) $(MY_BIN1_USER_LIBS) \
-        $(MY_BIN1_LINKLIBS) $(MY_BIN1_OBJS) $(MY_BIN1_RES) \
-        -implib:$(_OBJ)\$(@B).lib \
-        -out:$@
-    @echo ------- Linking done.
-
-
-$(MY_BIN1:.exe=.exe.lnt.txt): $(_OBJ) $(MY_BIN1_OBJS:.obj=.lob)
-    $(LINT) -os($@) $(STDLINTFLAGS) $(MY_LINTFLAGS) $(MY_BIN1_OBJS:.obj=.lob) 
-
-!endif
-
-!if "$(MY_BIN2)" != ""
-
-$(MY_BIN2): \
-    $(MY_DLL1) $(MY_DLL2) $(MY_LIB1) $(MY_LIB2) $(MY_LIB3) \
-    $(_OBJ) $(MY_BIN2_OBJS) $(MY_BIN2_RES) $(MY_BIN2_USER_LIBS)
-    @echo ------- Linking $@
-    @if exist $@ echo del $@ && del $@
-    $(LD) $(STDBINFLAGS) $(MY_LDFLAGS) $(MY_BIN2_LDFLAGS) $(MY_BIN2_USER_LIBS) \
-        $(MY_BIN2_LINKLIBS) $(MY_BIN2_OBJS) $(MY_BIN2_RES) \
-        -implib:$(_OBJ)\$(@B).lib \
-        -out:$(MY_BIN2)
-    @echo ------- Linking done.
-
-$(MY_BIN2:.exe=.exe.lnt.txt): $(_OBJ) $(MY_BIN2_OBJS:.obj=.lob)
-    $(LINT) -os($@) $(STDLINTFLAGS) $(MY_LINTFLAGS) $(MY_BIN2_OBJS:.obj=.lob) 
-
-!endif
-
-!if "$(MY_BIN3)" != ""
-
-$(MY_BIN3): \
-    $(MY_DLL1) $(MY_DLL2) $(MY_LIB1) $(MY_LIB2) $(MY_LIB3) \
-    $(_OBJ) $(MY_BIN3_OBJS) $(MY_BIN3_RES) $(MY_BIN3_USER_LIBS)
-    @echo ------- Linking $@
-    @if exist $@ echo del $@ && del $@
-    $(LD) $(STDBINFLAGS) $(MY_LDFLAGS) $(MY_BIN3_LDFLAGS) $(MY_BIN3_USER_LIBS) \
-        $(MY_BIN3_LINKLIBS) $(MY_BIN3_OBJS) $(MY_BIN3_RES) \
-        -implib:$(_OBJ)\$(@B).lib \
-        -out:$(MY_BIN3)
-    @echo ------- Linking done.
-
-$(MY_BIN3:.exe=.exe.lnt.txt): $(_OBJ) $(MY_BIN3_OBJS:.obj=.lob)
-    $(LINT) $(STDLINTFLAGS) $(MY_LINTFLAGS) $(MY_BIN3_OBJS:.obj=.lob) -os($@)
-
-!endif
-
-!if "$(MY_BIN4)" != ""
-
-$(MY_BIN4): \
-    $(MY_DLL1) $(MY_DLL2) $(MY_LIB1) $(MY_LIB2) $(MY_LIB3) \
-    $(_OBJ) $(MY_BIN4_OBJS) $(MY_BIN4_RES) $(MY_BIN4_USER_LIBS)
-    @echo ------- Linking $@
-    @if exist $@ echo del $@ && del $@
-    $(LD) $(STDBINFLAGS) $(MY_LDFLAGS) $(MY_BIN4_LDFLAGS) $(MY_BIN4_USER_LIBS) \
-        $(MY_BIN4_LINKLIBS) $(MY_BIN4_OBJS) $(MY_BIN4_RES) \
-        -implib:$(_OBJ)\$(@B).lib \
-        -out:$(MY_BIN4)
-    @echo ------- Linking done.
-
-$(MY_BIN4:.exe=.exe.lnt.txt): $(_OBJ) $(MY_BIN4_OBJS:.obj=.lob)
-    $(LINT) $(STDLINTFLAGS) $(MY_LINTFLAGS) $(MY_BIN4_OBJS:.obj=.lob) -os($@)
-
-!endif
-
-!if "$(MY_BIN5)" != ""
-
-$(MY_BIN5): \
-    $(MY_DLL1) $(MY_DLL2) $(MY_LIB1) $(MY_LIB2) $(MY_LIB3) \
-    $(_OBJ) $(MY_BIN5_OBJS) $(MY_BIN5_RES) $(MY_BIN5_USER_LIBS)
-    @echo ------- Linking $@
-    @if exist $@ echo del $@ && del $@
-    $(LD) $(STDBINFLAGS) $(MY_LDFLAGS) $(MY_BIN5_LDFLAGS) $(MY_BIN5_USER_LIBS) \
-        $(MY_BIN5_LINKLIBS) $(MY_BIN5_OBJS) $(MY_BIN5_RES) \
-        -implib:$(_OBJ)\$(@B).lib \
-        -out:$(MY_BIN5)
-    @echo ------- Linking done.
-
-$(MY_BIN5:.exe=.exe.lnt.txt): $(_OBJ) $(MY_BIN5_OBJS:.obj=.lob)
-    $(LINT) $(STDLINTFLAGS) $(MY_LINTFLAGS) $(MY_BIN5_OBJS:.obj=.lob) -os($@)
-
-!endif
-
-!if "$(MY_BIN6)" != ""
-
-$(MY_BIN6): \
-    $(MY_DLL1) $(MY_DLL2) $(MY_LIB1) $(MY_LIB2) $(MY_LIB3) \
-    $(_OBJ) $(MY_BIN6_OBJS) $(MY_BIN6_RES) $(MY_BIN6_USER_LIBS)
-    @echo ------- Linking $@
-    @if exist $@ echo del $@ && del $@
-    $(LD) $(STDBINFLAGS) $(MY_LDFLAGS) $(MY_BIN6_LDFLAGS) $(MY_BIN6_USER_LIBS) \
-        $(MY_BIN6_LINKLIBS) $(MY_BIN6_OBJS) $(MY_BIN6_RES) \
-        -implib:$(_OBJ)\$(@B).lib \
-        -out:$(MY_BIN6)
-    @echo ------- Linking done.
-
-$(MY_BIN6:.exe=.exe.lnt.txt): $(_OBJ) $(MY_BIN6_OBJS:.obj=.lob)
-    $(LINT) $(STDLINTFLAGS) $(MY_LINTFLAGS) $(MY_BIN6_OBJS:.obj=.lob) -os($@)
-
-!endif
-
-!if "$(MY_BIN7)" != ""
-
-$(MY_BIN7): \
-    $(MY_DLL1) $(MY_DLL2) $(MY_LIB1) $(MY_LIB2) $(MY_LIB3) \
-    $(_OBJ) $(MY_BIN7_OBJS) $(MY_BIN7_RES) $(MY_BIN7_USER_LIBS)
-    @echo ------- Linking $@
-    @if exist $@ echo del $@ && del $@
-    $(LD) $(STDBINFLAGS) $(MY_LDFLAGS) $(MY_BIN7_LDFLAGS) $(MY_BIN7_USER_LIBS) \
-        $(MY_BIN7_LINKLIBS) $(MY_BIN7_OBJS) $(MY_BIN7_RES) \
-        -implib:$(_OBJ)\$(@B).lib \
-        -out:$(MY_BIN7)
-    @echo ------- Linking done.
-
-$(MY_BIN7:.exe=.exe.lnt.txt): $(_OBJ) $(MY_BIN7_OBJS:.obj=.lob)
-    $(LINT) $(STDLINTFLAGS) $(MY_LINTFLAGS) $(MY_BIN7_OBJS:.obj=.lob) -os($@)
-
-!endif
-
-!if "$(MY_BIN8)" != ""
-
-$(MY_BIN8): \
-    $(MY_DLL1) $(MY_DLL2) $(MY_LIB1) $(MY_LIB2) $(MY_LIB3) \
-    $(_OBJ) $(MY_BIN8_OBJS) $(MY_BIN8_RES) $(MY_BIN8_USER_LIBS)
-    @echo ------- Linking $@
-    @if exist $@ echo del $@ && del $@
-    $(LD) $(STDBINFLAGS) $(MY_LDFLAGS) $(MY_BIN8_LDFLAGS) $(MY_BIN8_USER_LIBS) \
-        $(MY_BIN8_LINKLIBS) $(MY_BIN8_OBJS) $(MY_BIN8_RES) \
-        -implib:$(_OBJ)\$(@B).lib \
-        -out:$(MY_BIN8)
-    @echo ------- Linking done.
-
-$(MY_BIN8:.exe=.exe.lnt.txt): $(_OBJ) $(MY_BIN8_OBJS:.obj=.lob)
-    $(LINT) $(STDLINTFLAGS) $(MY_LINTFLAGS) $(MY_BIN8_OBJS:.obj=.lob) -os($@)
-
-!endif
-
-!if "$(MY_BIN9)" != ""
-
-$(MY_BIN9): \
-    $(MY_DLL1) $(MY_DLL2) $(MY_LIB1) $(MY_LIB2) $(MY_LIB3) \
-    $(_OBJ) $(MY_BIN9_OBJS) $(MY_BIN9_RES) $(MY_BIN9_USER_LIBS)
-    @echo ------- Linking $@
-    @if exist $@ echo del $@ && del $@
-    $(LD) $(STDBINFLAGS) $(MY_LDFLAGS) $(MY_BIN9_LDFLAGS) $(MY_BIN9_USER_LIBS) \
-        $(MY_BIN9_LINKLIBS) $(MY_BIN9_OBJS) $(MY_BIN9_RES) \
-        -implib:$(_OBJ)\$(@B).lib \
-        -out:$(MY_BIN9)
-    @echo ------- Linking done.
-
-$(MY_BIN9:.exe=.exe.lnt.txt): $(_OBJ) $(MY_BIN9_OBJS:.obj=.lob)
-    $(LINT) $(STDLINTFLAGS) $(MY_LINTFLAGS) $(MY_BIN9_OBJS:.obj=.lob) -os($@)
-
-!endif
-
-!if "$(MY_BIN10)" != ""
-
-$(MY_BIN10): \
-    $(MY_DLL1) $(MY_DLL2) $(MY_LIB1) $(MY_LIB2) $(MY_LIB3) \
-    $(_OBJ) $(MY_BIN10_OBJS) $(MY_BIN10_RES) $(MY_BIN10_USER_LIBS)
-    @echo ------- Linking $@
-    @if exist $@ echo del $@ && del $@
-    $(LD) $(STDBINFLAGS) $(MY_LDFLAGS) $(MY_BIN10_LDFLAGS) $(MY_BIN10_USER_LIBS) \
-        $(MY_BIN10_LINKLIBS) $(MY_BIN10_OBJS) $(MY_BIN10_RES) \
-        -implib:$(_OBJ)\$(@B).lib \
-        -out:$(MY_BIN10)
-    @echo ------- Linking done.
-
-$(MY_BIN10:.exe=.exe.lnt.txt): $(_OBJ) $(MY_BIN10_OBJS:.obj=.lob)
-    $(LINT) $(STDLINTFLAGS) $(MY_LINTFLAGS) $(MY_BIN10_OBJS:.obj=.lob) -os($@)
-
-!endif
-
-!if "$(MY_BIN11)" != ""
-
-$(MY_BIN11): \
-    $(MY_DLL1) $(MY_DLL2) $(MY_LIB1) $(MY_LIB2) $(MY_LIB3) \
-    $(_OBJ) $(MY_BIN11_OBJS) $(MY_BIN11_RES) $(MY_BIN11_USER_LIBS)
-    @echo ------- Linking $@
-    @if exist $@ echo del $@ && del $@
-    $(LD) $(STDBINFLAGS) $(MY_LDFLAGS) $(MY_BIN11_LDFLAGS) $(MY_BIN11_USER_LIBS) \
-        $(MY_BIN11_LINKLIBS) $(MY_BIN11_OBJS) $(MY_BIN11_RES) \
-        -implib:$(_OBJ)\$(@B).lib \
-        -out:$(MY_BIN11)
-    @echo ------- Linking done.
-
-$(MY_BIN11:.exe=.exe.lnt.txt): $(_OBJ) $(MY_BIN11_OBJS:.obj=.lob)
-    $(LINT) $(STDLINTFLAGS) $(MY_LINTFLAGS) $(MY_BIN11_OBJS:.obj=.lob) -os($@)
-
-!endif
-
-!if "$(MY_BIN12)" != ""
-
-$(MY_BIN12): \
-    $(MY_DLL1) $(MY_DLL2) $(MY_LIB1) $(MY_LIB2) $(MY_LIB3) \
-    $(_OBJ) $(MY_BIN12_OBJS) $(MY_BIN12_RES) $(MY_BIN12_USER_LIBS)
-    @echo ------- Linking $@
-    @if exist $@ echo del $@ && del $@
-    $(LD) $(STDBINFLAGS) $(MY_LDFLAGS) $(MY_BIN12_LDFLAGS) $(MY_BIN12_USER_LIBS) \
-        $(MY_BIN12_LINKLIBS) $(MY_BIN12_OBJS) $(MY_BIN12_RES) \
-        -implib:$(_OBJ)\$(@B).lib \
-        -out:$(MY_BIN12)
-    @echo ------- Linking done.
-
-$(MY_BIN12:.exe=.exe.lnt.txt): $(_OBJ) $(MY_BIN12_OBJS:.obj=.lob)
-    $(LINT) $(STDLINTFLAGS) $(MY_LINTFLAGS) $(MY_BIN12_OBJS:.obj=.lob) -os($@)
-
-!endif
-
-!if "$(MY_BIN13)" != ""
-
-$(MY_BIN13): \
-    $(MY_DLL1) $(MY_DLL2) $(MY_LIB1) $(MY_LIB2) $(MY_LIB3) \
-    $(_OBJ) $(MY_BIN13_OBJS) $(MY_BIN13_RES) $(MY_BIN13_USER_LIBS)
-    @echo ------- Linking $@
-    @if exist $@ echo del $@ && del $@
-    $(LD) $(STDBINFLAGS) $(MY_LDFLAGS) $(MY_BIN13_LDFLAGS) $(MY_BIN13_USER_LIBS) \
-        $(MY_BIN13_LINKLIBS) $(MY_BIN13_OBJS) $(MY_BIN13_RES) \
-        -implib:$(_OBJ)\$(@B).lib \
-        -out:$(MY_BIN13)
-    @echo ------- Linking done.
-
-$(MY_BIN13:.exe=.exe.lnt.txt): $(_OBJ) $(MY_BIN13_OBJS:.obj=.lob)
-    $(LINT) $(STDLINTFLAGS) $(MY_LINTFLAGS) $(MY_BIN13_OBJS:.obj=.lob) -os($@)
-
-!endif
-
-!if "$(MY_BIN14)" != ""
-
-$(MY_BIN14): \
-    $(MY_DLL1) $(MY_DLL2) $(MY_LIB1) $(MY_LIB2) $(MY_LIB3) \
-    $(_OBJ) $(MY_BIN14_OBJS) $(MY_BIN14_RES) $(MY_BIN14_USER_LIBS)
-    @echo ------- Linking $@
-    @if exist $@ echo del $@ && del $@
-    $(LD) $(STDBINFLAGS) $(MY_LDFLAGS) $(MY_BIN14_LDFLAGS) $(MY_BIN14_USER_LIBS) \
-        $(MY_BIN14_LINKLIBS) $(MY_BIN14_OBJS) $(MY_BIN14_RES) \
-        -implib:$(_OBJ)\$(@B).lib \
-        -out:$(MY_BIN14)
-    @echo ------- Linking done.
-
-$(MY_BIN14:.exe=.exe.lnt.txt): $(_OBJ) $(MY_BIN14_OBJS:.obj=.lob)
-    $(LINT) $(STDLINTFLAGS) $(MY_LINTFLAGS) $(MY_BIN14_OBJS:.obj=.lob) -os($@)
-
-!endif
-
-!if "$(MY_BIN15)" != ""
-
-$(MY_BIN15): \
-    $(MY_DLL1) $(MY_DLL2) $(MY_LIB1) $(MY_LIB2) $(MY_LIB3) \
-    $(_OBJ) $(MY_BIN15_OBJS) $(MY_BIN15_RES) $(MY_BIN15_USER_LIBS)
-    @echo ------- Linking $@
-    @if exist $@ echo del $@ && del $@
-    $(LD) $(STDBINFLAGS) $(MY_LDFLAGS) $(MY_BIN15_LDFLAGS) $(MY_BIN15_USER_LIBS) \
-        $(MY_BIN15_LINKLIBS) $(MY_BIN15_OBJS) $(MY_BIN15_RES) \
-        -implib:$(_OBJ)\$(@B).lib \
-        -out:$(MY_BIN15)
-    @echo ------- Linking done.
-
-$(MY_BIN15:.exe=.exe.lnt.txt): $(_OBJ) $(MY_BIN15_OBJS:.obj=.lob)
-    $(LINT) $(STDLINTFLAGS) $(MY_LINTFLAGS) $(MY_BIN15_OBJS:.obj=.lob) -os($@)
-
-!endif
-
-
-
-######################################################################
-# debug
-######################################################################
-
-debug:
-    @echo _GEN = ($(_GEN))
-    @echo _IDL = ($(_IDL))
-    @echo _INC = ($(_INC))
-    @echo _OBJ = ($(_OBJ))
-    @echo _SRC = ($(_SRC))
-
-######################################################################
-# clean
-######################################################################
-
-clean::
-    @for %%F in ( \
-        $(MY_LIB1) $(MY_LIB1_OBJS) \
-        $(MY_LIB2) $(MY_LIB2_OBJS) \
-        $(MY_LIB3) $(MY_LIB3_OBJS) \
-        $(MY_DLL1) $(MY_DLL1_OBJS) $(MY_DLL1_RES) \
-        $(MY_DLL2) $(MY_DLL2_OBJS) $(MY_DLL2_RES) \
-        DUMMY) do @if exist %%F echo %%F && del %%F
-    @for %%F in ( \
-        $(MY_BIN1) $(MY_BIN1_OBJS) $(MY_BIN1_RES) \
-        $(MY_BIN2) $(MY_BIN2_OBJS) $(MY_BIN2_RES) \
-        DUMMY) do @if exist %%F echo %%F && del %%F
-    @for %%F in ( \
-        $(MY_BIN3) $(MY_BIN3_OBJS) $(MY_BIN3_RES) \
-        $(MY_BIN4) $(MY_BIN4_OBJS) $(MY_BIN4_RES) \
-        DUMMY) do @if exist %%F echo %%F && del %%F
-    @for %%F in ( \
-        $(MY_BIN5) $(MY_BIN5_OBJS) $(MY_BIN5_RES) \
-        $(MY_BIN6) $(MY_BIN6_OBJS) $(MY_BIN6_RES) \
-        DUMMY) do @if exist %%F echo %%F && del %%F
-    @for %%F in ( \
-        $(MY_BIN7) $(MY_BIN7_OBJS) $(MY_BIN7_RES) \
-        $(MY_BIN8) $(MY_BIN8_OBJS) $(MY_BIN8_RES) \
-        DUMMY) do @if exist %%F echo %%F && del %%F
-    @for %%F in ( \
-        $(MY_BIN11) $(MY_BIN11_OBJS) $(MY_BIN11_RES) \
-        $(MY_BIN12) $(MY_BIN12_OBJS) $(MY_BIN12_RES) \
-        DUMMY) do @if exist %%F echo %%F && del %%F
-    @for %%F in ( \
-        $(MY_BIN13) $(MY_BIN13_OBJS) $(MY_BIN13_RES) \
-        $(MY_BIN14) $(MY_BIN14_OBJS) $(MY_BIN14_RES) \
-        $(MY_BIN15) $(MY_BIN15_OBJS) $(MY_BIN15_RES) \
-        DUMMY) do @if exist %%F echo %%F && del %%F
-    @for %%F in ( \
-        $(MY_BIN9) $(MY_BIN9_OBJS) $(MY_BIN9_RES) \
-        $(MY_BIN10) $(MY_BIN10_OBJS) $(MY_BIN10_RES) \
-        $(_OBJ)\*.lib $(_OBJ)\*.exp \
-        $(DEP_MAKEFILES) $(DEP_MAKEOFILES) $(DEP_MAKEDEP) \
-        vc60.idb vc60.pdb \
-        DUMMY) do @if exist %%F echo %%F && del %%F
-    @if exist $(_OBJ) echo $(_OBJ) && $(RMDIR) /s /q $(_OBJ)
-    @if exist $(_SOAPGEN) echo $(_SOAPGEN) && $(RMDIR) /s /q $(_SOAPGEN)
-
-
-clean-lint::
-    @for %%F in ( \
-        $(MY_LIB1:.lib=.lib.lnt.txt) $(MY_LIB1_OBJS:.obj=.lob)  $(MY_LIB1_OBJS:.obj=.lnt.txt) \
-        DUMMY) do @if exist %%F echo %%F && del %%F
-    @for %%F in ( \
-        $(MY_LIB2:.lib=.lib.lnt.txt) $(MY_LIB2_OBJS:.obj=.lob)  $(MY_LIB2_OBJS:.obj=.lnt.txt) \
-        DUMMY) do @if exist %%F echo %%F && del %%F
-    @for %%F in ( \
-        $(MY_LIB3:.lib=.lib.lnt.txt) $(MY_LIB3_OBJS:.obj=.lob)  $(MY_LIB3_OBJS:.obj=.lnt.txt) \
-        DUMMY) do @if exist %%F echo %%F && del %%F
-    @for %%F in ( \
-        $(MY_DLL1_LINT) $(MY_DLL1_OBJS:.obj=.lob)  $(MY_DLL1_OBJS:.obj=.lnt.txt) \
-        DUMMY) do @if exist %%F echo %%F && del %%F
-    @for %%F in ( \
-        $(MY_DLL2_LINT) $(MY_DLL2_OBJS:.obj=.lob)  $(MY_DLL2_OBJS:.obj=.lnt.txt) \
-        DUMMY) do @if exist %%F echo %%F && del %%F
-    @for %%F in ( \
-        $(MY_BIN1:.exe=.exe.lnt.txt) $(MY_BIN1_OBJS:.obj=.lob)  $(MY_BIN1_OBJS:.obj=.lnt.txt) \
-        DUMMY) do @if exist %%F echo %%F && del %%F
-    @for %%F in ( \
-        $(MY_BIN2:.exe=.exe.lnt.txt) $(MY_BIN2_OBJS:.obj=.lob)  $(MY_BIN2_OBJS:.obj=.lnt.txt) \
-        DUMMY) do @if exist %%F echo %%F && del %%F
-    @for %%F in ( \
-        $(MY_BIN3:.exe=.exe.lnt.txt) $(MY_BIN3_OBJS:.obj=.lob)  $(MY_BIN3_OBJS:.obj=.lnt.txt) \
-        DUMMY) do @if exist %%F echo %%F && del %%F
-    @for %%F in ( \
-        $(MY_BIN4:.exe=.exe.lnt.txt) $(MY_BIN4_OBJS:.obj=.lob)  $(MY_BIN4_OBJS:.obj=.lnt.txt) \
-        DUMMY) do @if exist %%F echo %%F && del %%F
-    @for %%F in ( \
-        $(MY_BIN5:.exe=.exe.lnt.txt) $(MY_BIN5_OBJS:.obj=.lob)  $(MY_BIN5_OBJS:.obj=.lnt.txt) \
-        DUMMY) do @if exist %%F echo %%F && del %%F
-    @for %%F in ( \
-        $(MY_BIN6:.exe=.exe.lnt.txt) $(MY_BIN6_OBJS:.obj=.lob)  $(MY_BIN6_OBJS:.obj=.lnt.txt) \
-        DUMMY) do @if exist %%F echo %%F && del %%F
-    @for %%F in ( \
-        $(MY_BIN7:.exe=.exe.lnt.txt) $(MY_BIN7_OBJS:.obj=.lob)  $(MY_BIN7_OBJS:.obj=.lnt.txt) \
-        DUMMY) do @if exist %%F echo %%F && del %%F
-    @for %%F in ( \
-        $(MY_BIN8:.exe=.exe.lnt.txt) $(MY_BIN8_OBJS:.obj=.lob)  $(MY_BIN8_OBJS:.obj=.lnt.txt) \
-        DUMMY) do @if exist %%F echo %%F && del %%F
-    @for %%F in ( \
-        $(MY_BIN11:.exe=.exe.lnt.txt) $(MY_BIN11_OBJS:.obj=.lob)  $(MY_BIN11_OBJS:.obj=.lnt.txt) \
-        DUMMY) do @if exist %%F echo %%F && del %%F
-    @for %%F in ( \
-        $(MY_BIN12:.exe=.exe.lnt.txt) $(MY_BIN12_OBJS:.obj=.lob)  $(MY_BIN12_OBJS:.obj=.lnt.txt) \
-        DUMMY) do @if exist %%F echo %%F && del %%F
-    @for %%F in ( \
-        $(MY_BIN13:.exe=.exe.lnt.txt) $(MY_BIN13_OBJS:.obj=.lob)  $(MY_BIN13_OBJS:.obj=.lnt.txt) \
-        DUMMY) do @if exist %%F echo %%F && del %%F
-    @for %%F in ( \
-        $(MY_BIN14:.exe=.exe.lnt.txt) $(MY_BIN14_OBJS:.obj=.lob)  $(MY_BIN14_OBJS:.obj=.lnt.txt) \
-        DUMMY) do @if exist %%F echo %%F && del %%F
-    @for %%F in ( \
-        $(MY_BIN15:.exe=.exe.lnt.txt) $(MY_BIN15_OBJS:.obj=.lob)  $(MY_BIN15_OBJS:.obj=.lnt.txt) \
-        DUMMY) do @if exist %%F echo %%F && del %%F
-    @for %%F in ( \
-        $(MY_BIN9:.exe=.exe.lnt.txt) $(MY_BIN9_OBJS:.obj=.lob)  $(MY_BIN9_OBJS:.obj=.lnt.txt) \
-        DUMMY) do @if exist %%F echo %%F && del %%F
-    @for %%F in ( \
-        $(MY_BIN10:.exe=.exe.lnt.txt) $(MY_BIN10_OBJS:.obj=.lob)  $(MY_BIN10_OBJS:.obj=.lnt.txt) \
-        DUMMY) do @if exist %%F echo %%F && del %%F
-
-!if "$(MY_GEN_CPPS)" != ""
-
-clean::
-    @for %%F in ( \
-        $(MY_GEN_CPPS) \
-        DUMMY) do @if exist %%F echo %%F && del %%F
-        
-!endif
-
-######################################################################
-# Dependencies
-######################################################################
-
-cleandep:
-    del $(DEP_MAKEFILES) $(DEP_MAKEOFILES) $(DEP_MAKEDEP)
-
-dep: $(DEP_MAKEDEP)
-
-$(DEP_MAKEDEP): $(DEP_MAKEFILES)
-    $(PERL) $(MKDEP) $(MKDEPFLAGS) -c $(STDCFLAGS) $(MY_CFLAGS)
-
-#    $(PERL) $(MKDEP) $(MKDEPFLAGS)
-
-
-
-$(DEP_MAKEFILES):
-    $(PERL) $(MKFILES) $(_SRC) $(_SOAPGEN) $(_RES) $(P_SRC) $(P_RES) $(P_SOAPGEN) $(PP_SRC) $(PP_RES) $(PP_SOAPGEN) 
-    
-!include <make.dep>
-
+######################################################################
+#
+# /vob/SelfServiceBuild/Build/cpp/makefile.rules.mak
+#
+######################################################################
+
+######################################################################
+# Suffixe
+######################################################################
+
+.SUFFIXES: .mak .rc .l .idl .cpp .c .obj .res .lib .dll .exe
+
+######################################################################
+# Spezielle Regeln
+######################################################################
+
+# Sonderregel fuer die Common-Interface-Dateien
+{$(COMMONROOT)\Interfaces\src}.cpp{$(_OBJ)}.obj:
+    $(CC) $(STDCFLAGS) $(MY_CFLAGS) $< -Fo$@
+
+{$(COMMONROOT)\Interfaces\src}.cpp{$(_OBJ)}.lob:
+    $(LINT) -os($(_OBJ)\$(@B).lnt.com.txt) -oo($@) $(STDLINTLOBFLAGS) $(MY_LINTFLAGS) -COMPILER_OPTIONS $(STDCFLAGS) $(MY_CFLAGS) -LINT_OPTIONS $<
+
+######################################################################
+# Allgemeine Regeln Common-Common-Source
+######################################################################
+
+# cpp => obj
+{$(PP_SRC)}.cpp{$(_OBJ)}.obj:
+    $(CC) $(STDCFLAGS) $(MY_CFLAGS) $< -Fo$@
+
+{$(PP_SRC)}.cpp{$(_OBJ)}.lob:
+    $(LINT) -os($(_OBJ)\$(@B).lnt.txt) -oo($@) $(STDLINTLOBFLAGS) $(MY_LINTFLAGS) -COMPILER_OPTIONS $(STDCFLAGS) $(MY_CFLAGS) -LINT_OPTIONS $<
+
+# gsoap-cpp => obj
+{$(PP_SOAPGEN)}.cpp{$(_OBJ)}.obj:
+    $(CC) $(STDCFLAGS) $(MY_CFLAGS) $< -Fo$@
+
+{$(PP_SOAPGEN)}.cpp{$(_OBJ)}.lob:
+    $(LINT) -os($(_OBJ)\$(@B).lnt.gen.txt) -oo($@) $(STDLINTLOBFLAGS) $(MY_LINTFLAGS) -COMPILER_OPTIONS $(STDCFLAGS) $(MY_CFLAGS) -LINT_OPTIONS $<
+
+# c => obj
+{$(PP_SRC)}.c{$(_OBJ)}.obj:
+    $(CC) $(STDCFLAGS) $(MY_CFLAGS) $< -Fo$@
+
+{$(PP_SRC)}.c{$(_OBJ)}.lob:
+    $(LINT) -os($(_OBJ)\$(@B).lnt.txt) -oo($@) $(STDLINTLOBFLAGS) $(MY_LINTFLAGS) -COMPILER_OPTIONS $(STDCFLAGS) $(MY_CFLAGS) -LINT_OPTIONS $<
+
+# rc => res
+{$(PP_RES)}.rc{$(_OBJ)}.res:
+    $(RC) $(STDRCFLAGS) $(MY_RCFLAGS) -fo$@ $<
+
+# lex => cpp => obj
+{$(PP_SRC)}.l{$(_OBJ)}.obj:
+    $(FLEX) $(MY_FLEXFLAGS) -o$(_OBJ)\$(@B).cpp $<
+    $(CC) $(STDCFLAGS) $(MY_CFLAGS) $(_OBJ)\$(@B).cpp -Fo$@
+
+{$(PP_SRC)}.l{$(_OBJ)}.lob:
+    $(FLEX) $(MY_FLEXFLAGS) -o$(_OBJ)\$(@B).cpp $<
+    $(LINT) -os($(_OBJ)\$(@B).lnt.gen.txt) -oo($@) $(STDLINTLOBFLAGS) $(MY_LINTFLAGS) -COMPILER_OPTIONS $(STDCFLAGS) $(MY_CFLAGS) -LINT_OPTIONS $(_OBJ)\$(@B).cpp
+
+######################################################################
+# Allgemeine Regeln Common-Source
+######################################################################
+
+# cpp => obj
+{$(P_SRC)}.cpp{$(_OBJ)}.obj:
+    $(CC) $(STDCFLAGS) $(MY_CFLAGS) $< -Fo$@
+
+{$(P_SRC)}.cpp{$(_OBJ)}.lob:
+    $(LINT) -os($(_OBJ)\$(@B).lnt.txt) -oo($@) $(STDLINTLOBFLAGS) $(MY_LINTFLAGS) -COMPILER_OPTIONS $(STDCFLAGS) $(MY_CFLAGS) -LINT_OPTIONS $<
+
+# gsoap-cpp => obj
+{$(P_SOAPGEN)}.cpp{$(_OBJ)}.obj:
+    $(CC) $(STDCFLAGS) $(MY_CFLAGS) $< -Fo$@
+
+{$(P_SOAPGEN)}.cpp{$(_OBJ)}.lob:
+    $(LINT) -os($(_OBJ)\$(@B).lnt.gen.txt) -oo($@) $(STDLINTLOBFLAGS) $(MY_LINTFLAGS) -COMPILER_OPTIONS $(STDCFLAGS) $(MY_CFLAGS) -LINT_OPTIONS $<
+
+# c => obj
+{$(P_SRC)}.c{$(_OBJ)}.obj:
+    $(CC) $(STDCFLAGS) $(MY_CFLAGS) $< -Fo$@
+
+{$(P_SRC)}.c{$(_OBJ)}.lob:
+    $(LINT) -os($(_OBJ)\$(@B).lnt.txt) -oo($@) $(STDLINTLOBFLAGS) $(MY_LINTFLAGS) -COMPILER_OPTIONS $(STDCFLAGS) $(MY_CFLAGS) -LINT_OPTIONS $<
+
+# rc => res
+{$(P_RES)}.rc{$(_OBJ)}.res:
+    $(RC) $(STDRCFLAGS) $(MY_RCFLAGS) -fo$@ $<
+
+# lex => cpp => obj
+{$(P_SRC)}.l{$(_OBJ)}.obj:
+    $(FLEX) $(MY_FLEXFLAGS) -o$(_OBJ)\$(@B).cpp $<
+    $(CC) $(STDCFLAGS) $(MY_CFLAGS) $(_OBJ)\$(@B).cpp -Fo$@
+
+{$(P_SRC)}.l{$(_OBJ)}.lob:
+    $(FLEX) $(MY_FLEXFLAGS) -o$(_OBJ)\$(@B).cpp $<
+    $(LINT) -os($(_OBJ)\$(@B).lnt.gen.txt) -oo($@) $(STDLINTLOBFLAGS) $(MY_LINTFLAGS) -COMPILER_OPTIONS $(STDCFLAGS) $(MY_CFLAGS) -LINT_OPTIONS $(_OBJ)\$(@B).cpp
+
+######################################################################
+# Allgemeine Regeln
+######################################################################
+
+# cpp => obj
+{$(_GEN)}.cpp{$(_OBJ)}.obj:
+    $(CC) $(STDCFLAGS) $(MY_CFLAGS) $< -Fo$@
+
+{$(_GEN)}.cpp{$(_OBJ)}.lob:
+    $(LINT) -os($(_OBJ)\$(@B).lnt.gen.txt) -oo($@) $(STDLINTLOBFLAGS) $(MY_LINTFLAGS) -COMPILER_OPTIONS $(STDCFLAGS) $(MY_CFLAGS) -LINT_OPTIONS $<
+
+# cpp => obj
+{$(_SRC)}.cpp{$(_OBJ)}.obj:
+    $(CC) $(STDCFLAGS) $(MY_CFLAGS) $< -Fo$@
+
+{$(_SRC)}.cpp{$(_OBJ)}.lob:
+    $(LINT) -os($(_OBJ)\$(@B).lnt.txt) -oo($@) $(STDLINTLOBFLAGS) $(MY_LINTFLAGS) -COMPILER_OPTIONS $(STDCFLAGS) $(MY_CFLAGS) -LINT_OPTIONS $<
+
+# gsoap-cpp => obj
+{$(_SOAPGEN)}.cpp{$(_OBJ)}.obj:
+    $(CC) $(STDCFLAGS) $(MY_CFLAGS) $< -Fo$@
+
+{$(_SOAPGEN)}.cpp{$(_OBJ)}.lob:
+    $(LINT) -os($(_OBJ)\$(@B).lnt.gen.txt) -oo($@) $(STDLINTLOBFLAGS) $(MY_LINTFLAGS) -COMPILER_OPTIONS $(STDCFLAGS) $(MY_CFLAGS) -LINT_OPTIONS $<
+
+# c => obj
+{$(_SRC)}.c{$(_OBJ)}.obj:
+    $(CC) $(STDCFLAGS) $(MY_CFLAGS) $< -Fo$@
+
+{$(_SRC)}.c{$(_OBJ)}.lob:
+    $(LINT) -os($(_OBJ)\$(@B).lnt.txt) -oo($@) $(STDLINTLOBFLAGS) $(MY_LINTFLAGS) -COMPILER_OPTIONS $(STDCFLAGS) $(MY_CFLAGS) -LINT_OPTIONS $<
+
+# idl => cpp
+.idl{$(_GEN)}.cpp:
+    $(IDLC) $(IDLFLAGS) $(MY_IDLFLAGS) $<
+
+# rc => res
+{$(_RES)}.rc{$(_OBJ)}.res:
+    $(RC) $(STDRCFLAGS) $(MY_RCFLAGS) -fo$@ $<
+
+# lex => cpp => obj
+{$(_SRC)}.l{$(_OBJ)}.obj:
+    $(FLEX) $(MY_FLEXFLAGS) -o$(_OBJ)\$(@B).cpp $<
+    $(CC) $(STDCFLAGS) $(MY_CFLAGS) $(_OBJ)\$(@B).cpp -Fo$@
+
+{$(_SRC)}.l{$(_OBJ)}.lob:
+    $(FLEX) $(MY_FLEXFLAGS) -o$(_OBJ)\$(@B).cpp $<
+    $(LINT) -os($(_OBJ)\$(@B).lnt.gen.txt) -oo($@) $(STDLINTLOBFLAGS) $(MY_LINTFLAGS) -COMPILER_OPTIONS $(STDCFLAGS) $(MY_CFLAGS) -LINT_OPTIONS $(_OBJ)\$(@B).cpp
+
+
+######################################################################
+# all
+######################################################################
+
+all: $(DEP_MAKEDEP) \
+     $(_OBJ) \
+     $(MY_GEN_CPPS) \
+     $(MY_LIB1)  $(MY_LIB2)  $(MY_LIB3)  $(MY_LIB4)  $(MY_LIB5) \
+     $(MY_DLL1)  $(MY_DLL2)  \
+     $(MY_BIN1)  $(MY_BIN2)  $(MY_BIN3)  $(MY_BIN4)  $(MY_BIN5)  \
+     $(MY_BIN6)  $(MY_BIN7)  $(MY_BIN8)  $(MY_BIN9)  $(MY_BIN10) \
+     $(MY_BIN11) $(MY_BIN12) $(MY_BIN13) $(MY_BIN14) $(MY_BIN15)
+
+
+######################################################################
+# lint
+######################################################################
+
+MY_DLL1_LINT= $(MY_DLL1)
+MY_DLL1_LINT= $(MY_DLL1_LINT:.dll=.dll.lnt.txt)
+MY_DLL1_LINT= $(MY_DLL1_LINT:.x32=.x32.lnt.txt)
+
+MY_DLL2_LINT= $(MY_DLL2)
+MY_DLL2_LINT= $(MY_DLL2_LINT:.dll=.dll.lnt.txt)
+MY_DLL2_LINT= $(MY_DLL2_LINT:.x32=.x32.lnt.txt)
+
+
+lint: $(DEP_MAKEDEP) \
+      $(_OBJ) \
+      $(MY_GEN_CPPS) \
+      $(MY_LIB1:.lib=.lib.lnt.txt)  $(MY_LIB2:.lib=.lib.lnt.txt)  $(MY_LIB3:.lib=.lib.lnt.txt)  $(MY_LIB4:.lib=.lib.lnt.txt)  $(MY_LIB5:.lib=.lib.lnt.txt) \
+      $(MY_DLL1_LINT)  $(MY_DLL2_LINT)  \
+      $(MY_BIN1:.exe=.exe.lnt.txt)  $(MY_BIN2:.exe=.exe.lnt.txt)  $(MY_BIN3:.exe=.exe.lnt.txt)  $(MY_BIN4:.exe=.exe.lnt.txt)  $(MY_BIN5:.exe=.exe.lnt.txt)  \
+      $(MY_BIN6:.exe=.exe.lnt.txt)  $(MY_BIN7:.exe=.exe.lnt.txt)  $(MY_BIN8:.exe=.exe.lnt.txt)  $(MY_BIN9:.exe=.exe.lnt.txt)  $(MY_BIN10:.exe=.exe.lnt.txt) \
+      $(MY_BIN11:.exe=.exe.lnt.txt) $(MY_BIN12:.exe=.exe.lnt.txt) $(MY_BIN13:.exe=.exe.lnt.txt) $(MY_BIN14:.exe=.exe.lnt.txt) $(MY_BIN15:.exe=.exe.lnt.txt)
+
+######################################################################
+# globaldep
+######################################################################
+
+DEPFILE= $(MAKEDIR)
+DEPFILE= $(DEPFILE:\=_)
+DEPFILE= $(DEPFILE::=_)
+DEPFILE= $(_DEP)\$(DEPFILE).dep
+
+globaldep: $(_DEP)
+      @echo # Automatically generated makefile, do not change > $(DEPFILE)
+      @echo !include $(DEPFILE) >> $(_DEP)\all.dep
+!if "$(MY_GEN_CPPS)" != ""
+      @for %%i in ($(MY_GEN_CPPS)) do @echo %%~nxi: %%i >> $(DEPFILE) && @echo. >> $(DEPFILE)
+      @echo $(MY_GEN_CPPS): forcebuild>> $(DEPFILE)
+      @echo.   cd $(MAKEDIR) ^&^& ^$(MAKE) ^$@ >> $(DEPFILE)
+      @echo. >> $(DEPFILE)
+      @echo $(MAKEDIR): forcebuild>> $(DEPFILE)
+      @echo.   cd $(MAKEDIR) ^&^& ^$(MAKE) >> $(DEPFILE)
+      @echo. >> $(DEPFILE)
+!endif
+!if "$(MY_LIB1)" != ""
+      @for %%i in ($(MY_LIB1)) do @echo %%~nxi: %%i >> $(DEPFILE) && @echo. >> $(DEPFILE)
+      @echo $(MY_LIB1): forcebuild $(MY_LIB1_USER_LIBS) $(MY_LIB1_GEN_DIRS)>> $(DEPFILE)
+      @echo.   cd $(MAKEDIR) ^&^& ^$(MAKE) $(MY_LIB1) >> $(DEPFILE)
+      @echo. >> $(DEPFILE)
+!endif
+!if "$(MY_LIB2)" != ""
+      @for %%i in ($(MY_LIB2)) do @echo %%~nxi: %%i >> $(DEPFILE) && @echo. >> $(DEPFILE)
+      @echo $(MY_LIB2): forcebuild $(MY_LIB2_USER_LIBS) $(MY_LIB2_GEN_DIRS) >> $(DEPFILE)
+      @echo.   cd $(MAKEDIR) ^&^& ^$(MAKE) $(MY_LIB2) >> $(DEPFILE)
+      @echo. >> $(DEPFILE)
+!endif
+!if "$(MY_LIB3)" != ""
+      @for %%i in ($(MY_LIB3)) do @echo %%~nxi: %%i >> $(DEPFILE) && @echo. >> $(DEPFILE)
+      @echo $(MY_LIB3): forcebuild $(MY_LIB3_USER_LIBS) (MY_LIB3_GEN_DIRS) >> $(DEPFILE)
+      @echo.   cd $(MAKEDIR) ^&^& ^$(MAKE) $(MY_LIB3) >> $(DEPFILE)
+      @echo. >> $(DEPFILE)
+!endif
+!if "$(MY_LIB4)" != ""
+      @for %%i in ($(MY_LIB4)) do @echo %%~nxi: %%i >> $(DEPFILE) && @echo. >> $(DEPFILE)
+      @echo $(MY_LIB4): forcebuild $(MY_LIB4_USER_LIBS) $(MY_LIB4_GEN_DIRS)>> $(DEPFILE)
+      @echo.   cd $(MAKEDIR) ^&^& ^$(MAKE) $(MY_LIB4) >> $(DEPFILE)
+      @echo. >> $(DEPFILE)
+!endif
+!if "$(MY_LIB5)" != ""
+      @for %%i in ($(MY_LIB5)) do @echo %%~nxi: %%i >> $(DEPFILE) && @echo. >> $(DEPFILE)
+      @echo $(MY_LIB5): forcebuild $(MY_LIB5_USER_LIBS) $(MY_LIB5_GEN_DIRS)>> $(DEPFILE)
+      @echo.   cd $(MAKEDIR) ^&^& ^$(MAKE) $(MY_LIB5) >> $(DEPFILE)
+      @echo. >> $(DEPFILE)
+!endif
+!if "$(MY_DLL1)" != ""
+      @for %%i in ($(MY_DLL1)) do @echo %%~nxi: %%i >> $(DEPFILE) && @echo. >> $(DEPFILE)
+      @echo $(MY_DLL1): forcebuild $(MY_DLL1_USER_LIBS) $(MY_DLL1_GEN_DIRS) >> $(DEPFILE)
+      @echo.   cd $(MAKEDIR) ^&^& ^$(MAKE) $(MY_DLL1) >> $(DEPFILE)
+      @echo. >> $(DEPFILE)
+      @for %%i in ($(MY_DLL1)) do @echo $(_LIB)\%%~ni.lib: $(MY_DLL1) >> $(DEPFILE)
+      @echo. >> $(DEPFILE)
+!endif
+!if "$(MY_DLL2)" != ""
+      @for %%i in ($(MY_DLL2)) do @echo %%~nxi: %%i >> $(DEPFILE) && @echo. >> $(DEPFILE)
+      @echo $(MY_DLL2): forcebuild $(MY_DLL2_USER_LIBS) $(MY_DLL2_GEN_DIRS) >> $(DEPFILE)
+      @echo.   cd $(MAKEDIR) ^&^& ^$(MAKE) $(MY_DLL2) >> $(DEPFILE)
+      @echo. >> $(DEPFILE)
+      @for %%i in ($(MY_DLL2)) do @echo $(_LIB)\%%~ni.lib: $(MY_DLL2) >> $(DEPFILE)
+      @echo. >> $(DEPFILE)
+!endif
+!if "$(MY_BIN1)" != ""
+      @for %%i in ($(MY_BIN1)) do @echo %%~nxi: %%i >> $(DEPFILE) && @echo. >> $(DEPFILE)
+      @echo $(MY_BIN1): forcebuild $(MY_BIN1_USER_LIBS) $(MY_BIN1_GEN_DIRS) $(_LIB)\gracefullycrash.lib>> $(DEPFILE)
+      @echo.   cd $(MAKEDIR) ^&^& ^$(MAKE) $(MY_BIN1) >> $(DEPFILE)
+      @echo. >> $(DEPFILE)
+!endif
+!if "$(MY_BIN2)" != ""
+      @for %%i in ($(MY_BIN2)) do @echo %%~nxi: %%i >> $(DEPFILE) && @echo. >> $(DEPFILE)
+      @echo $(MY_BIN2): forcebuild $(MY_BIN2_USER_LIBS) $(MY_BIN2_GEN_DIRS) $(_LIB)\gracefullycrash.lib>> $(DEPFILE)
+      @echo.   cd $(MAKEDIR) ^&^& ^$(MAKE) $(MY_BIN2) >> $(DEPFILE)
+      @echo. >> $(DEPFILE)
+!endif
+!if "$(MY_BIN3)" != ""
+      @for %%i in ($(MY_BIN3)) do @echo %%~nxi: %%i >> $(DEPFILE) && @echo. >> $(DEPFILE)
+      @echo $(MY_BIN3): forcebuild $(MY_BIN3_USER_LIBS) $(MY_BIN3_GEN_DIRS) $(_LIB)\gracefullycrash.lib>> $(DEPFILE)
+      @echo.   cd $(MAKEDIR) ^&^& ^$(MAKE) $(MY_BIN3) >> $(DEPFILE)
+      @echo. >> $(DEPFILE)
+!endif
+!if "$(MY_BIN4)" != ""
+      @for %%i in ($(MY_BIN4)) do @echo %%~nxi: %%i >> $(DEPFILE) && @echo. >> $(DEPFILE)
+      @echo $(MY_BIN4): forcebuild $(MY_BIN4_USER_LIBS) $(MY_BIN4_GEN_DIRS) $(_LIB)\gracefullycrash.lib>> $(DEPFILE)
+      @echo.   cd $(MAKEDIR) ^&^& ^$(MAKE) $(MY_BIN4) >> $(DEPFILE)
+      @echo. >> $(DEPFILE)
+!endif
+!if "$(MY_BIN5)" != ""
+      @for %%i in ($(MY_BIN5)) do @echo %%~nxi: %%i >> $(DEPFILE) && @echo. >> $(DEPFILE)
+      @echo $(MY_BIN5): forcebuild $(MY_BIN5_USER_LIBS) $(MY_BIN5_GEN_DIRS) $(_LIB)\gracefullycrash.lib>> $(DEPFILE)
+      @echo.   cd $(MAKEDIR) ^&^& ^$(MAKE) $(MY_BIN5) >> $(DEPFILE)
+      @echo. >> $(DEPFILE)
+!endif
+!if "$(MY_BIN6)" != ""
+      @for %%i in ($(MY_BIN6)) do @echo %%~nxi: %%i >> $(DEPFILE) && @echo. >> $(DEPFILE)
+      @echo $(MY_BIN6): forcebuild $(MY_BIN6_USER_LIBS) $(MY_BIN6_GEN_DIRS) $(_LIB)\gracefullycrash.lib>> $(DEPFILE)
+      @echo.   cd $(MAKEDIR) ^&^& ^$(MAKE) $(MY_BIN6) >> $(DEPFILE)
+      @echo. >> $(DEPFILE)
+!endif
+!if "$(MY_BIN7)" != ""
+      @for %%i in ($(MY_BIN7)) do @echo %%~nxi: %%i >> $(DEPFILE) && @echo. >> $(DEPFILE)
+      @echo $(MY_BIN7): forcebuild $(MY_BIN7_USER_LIBS) $(MY_BIN7_GEN_DIRS) $(_LIB)\gracefullycrash.lib>> $(DEPFILE)
+      @echo.   cd $(MAKEDIR) ^&^& ^$(MAKE) $(MY_BIN7) >> $(DEPFILE)
+      @echo. >> $(DEPFILE)
+!endif
+!if "$(MY_BIN8)" != ""
+      @for %%i in ($(MY_BIN8)) do @echo %%~nxi: %%i >> $(DEPFILE) && @echo. >> $(DEPFILE)
+      @echo $(MY_BIN8): forcebuild $(MY_BIN8_USER_LIBS) $(MY_BIN8_GEN_DIRS) $(_LIB)\gracefullycrash.lib>> $(DEPFILE)
+      @echo.   cd $(MAKEDIR) ^&^& ^$(MAKE) $(MY_BIN8) >> $(DEPFILE)
+      @echo. >> $(DEPFILE)
+!endif
+!if "$(MY_BIN9)" != ""
+      @for %%i in ($(MY_BIN9)) do @echo %%~nxi: %%i >> $(DEPFILE) && @echo. >> $(DEPFILE)
+      @echo $(MY_BIN9): forcebuild $(MY_BIN9_USER_LIBS) $(MY_BIN9_GEN_DIRS) $(_LIB)\gracefullycrash.lib>> $(DEPFILE)
+      @echo.   cd $(MAKEDIR) ^&^& ^$(MAKE) $(MY_BIN9) >> $(DEPFILE)
+      @echo. >> $(DEPFILE)
+!endif
+!if "$(MY_BIN10)" != ""
+      @for %%i in ($(MY_BIN10)) do @echo %%~nxi: %%i >> $(DEPFILE) && @echo. >> $(DEPFILE)
+      @echo $(MY_BIN10): forcebuild $(MY_BIN10_USER_LIBS) $(MY_BIN10_GEN_DIRS) $(_LIB)\gracefullycrash.lib>> $(DEPFILE)
+      @echo.   cd $(MAKEDIR) ^&^& ^$(MAKE) $(MY_BIN10) >> $(DEPFILE)
+      @echo. >> $(DEPFILE)
+!endif
+!if "$(MY_BIN11)" != ""
+      @for %%i in ($(MY_BIN11)) do @echo %%~nxi: %%i >> $(DEPFILE) && @echo. >> $(DEPFILE)
+      @echo $(MY_BIN11): forcebuild $(MY_BIN11_USER_LIBS) $(MY_BIN11_GEN_DIRS) $(_LIB)\gracefullycrash.lib>> $(DEPFILE)
+      @echo.   cd $(MAKEDIR) ^&^& ^$(MAKE) $(MY_BIN11) >> $(DEPFILE)
+      @echo. >> $(DEPFILE)
+!endif
+!if "$(MY_BIN12)" != ""
+      @for %%i in ($(MY_BIN12)) do @echo %%~nxi: %%i >> $(DEPFILE) && @echo. >> $(DEPFILE)
+      @echo $(MY_BIN12): forcebuild $(MY_BIN12_USER_LIBS) $(MY_BIN12_GEN_DIRS) $(_LIB)\gracefullycrash.lib>> $(DEPFILE)
+      @echo.   cd $(MAKEDIR) ^&^& ^$(MAKE) $(MY_BIN12) >> $(DEPFILE)
+      @echo. >> $(DEPFILE)
+!endif
+!if "$(MY_BIN13)" != ""
+      @for %%i in ($(MY_BIN13)) do @echo %%~nxi: %%i >> $(DEPFILE) && @echo. >> $(DEPFILE)
+      @echo $(MY_BIN13): forcebuild $(MY_BIN13_USER_LIBS) $(MY_BIN13_GEN_DIRS) $(_LIB)\gracefullycrash.lib>> $(DEPFILE)
+      @echo.   cd $(MAKEDIR) ^&^& ^$(MAKE) $(MY_BIN13) >> $(DEPFILE)
+      @echo. >> $(DEPFILE)
+!endif
+!if "$(MY_BIN14)" != ""
+      @for %%i in ($(MY_BIN14)) do @echo %%~nxi: %%i >> $(DEPFILE) && @echo. >> $(DEPFILE)
+      @echo $(MY_BIN14): forcebuild $(MY_BIN14_USER_LIBS) $(MY_BIN14_GEN_DIRS) $(_LIB)\gracefullycrash.lib>> $(DEPFILE)
+      @echo.   cd $(MAKEDIR) ^&^& ^$(MAKE) $(MY_BIN14) >> $(DEPFILE)
+      @echo. >> $(DEPFILE)
+!endif
+!if "$(MY_BIN15)" != ""
+      @for %%i in ($(MY_BIN15)) do @echo %%~nxi: %%i >> $(DEPFILE) && @echo. >> $(DEPFILE)
+      @echo $(MY_BIN15): forcebuild $(MY_BIN15_USER_LIBS) $(MY_BIN15_GEN_DIRS) $(_LIB)\gracefullycrash.lib>> $(DEPFILE)
+      @echo.   cd $(MAKEDIR) ^&^& ^$(MAKE) $(MY_BIN15) >> $(DEPFILE)
+      @echo. >> $(DEPFILE)
+!endif
+
+
+
+######################################################################
+# out-directory
+######################################################################
+
+$(_DEP):
+     mkdir $@
+
+$(_OBJ):
+     mkdir $@
+
+######################################################################
+# MY_LIBx
+######################################################################
+
+!if "$(MY_LIB1)" != ""
+
+$(MY_LIB1): $(_OBJ) $(MY_LIB1_OBJS) $(MY_LIB1_USER_LIBS)
+    @echo ------- Linking $@
+    @if exist $@ echo del $@ && del $@
+    $(LB) $(STDLIBFLAGS) $(MY_LBFLAGS) $(MY_LIB1_OBJS) $(MY_LIB1_USER_LIBS) $(MY_LIB1_LIBS) -out:$@
+    @echo ------- Linking done.
+
+
+$(MY_LIB1:.lib=.lib.lnt.txt): $(_OBJ) $(MY_LIB1_OBJS:.obj=.lob)
+    $(LINT) -os($@) $(STDLINTFLAGS) $(MY_LINTFLAGS) $(MY_LIB1_OBJS:.obj=.lob)
+
+
+!endif
+
+!if "$(MY_LIB2)" != ""
+
+$(MY_LIB2): $(_OBJ) $(MY_LIB2_OBJS) $(MY_LIB2_USER_LIBS)
+    @echo ------- Linking $@
+    @if exist $@ echo del $@ && del $@
+    $(LB) $(STDLIBFLAGS) $(MY_LBFLAGS) $(MY_LIB2_OBJS) $(MY_LIB2_USER_LIBS) $(MY_LIB2_LIBS) -out:$@
+    @echo ------- Linking done.
+
+$(MY_LIB2:.lib=.lib.lnt.txt): $(_OBJ) $(MY_LIB2_OBJS:.obj=.lob)
+    $(LINT) -os($@) $(STDLINTFLAGS) $(MY_LINTFLAGS) $(MY_LIB2_OBJS:.obj=.lob)
+
+!endif
+
+!if "$(MY_LIB3)" != ""
+
+$(MY_LIB3): $(_OBJ) $(MY_LIB3_OBJS) $(MY_LIB3_USER_LIBS)
+    @echo ------- Linking $@
+    @if exist $@ echo del $@ && del $@
+    $(LB) $(STDLIBFLAGS) $(MY_LBFLAGS) $(MY_LIB3_OBJS) $(MY_LIB3_USER_LIBS) $(MY_LIB3_LIBS) -out:$@
+    @echo ------- Linking done.
+
+$(MY_LIB3:.lib=.lib.lnt.txt): $(_OBJ) $(MY_LIB3_OBJS:.obj=.lob)
+    $(LINT) -os($@) $(STDLINTFLAGS) $(MY_LINTFLAGS) $(MY_LIB3_OBJS:.obj=.lob)
+
+!endif
+
+!if "$(MY_LIB4)" != ""
+
+$(MY_LIB4): $(_OBJ) $(MY_LIB4_OBJS) $(MY_LIB4_USER_LIBS)
+    @echo ------- Linking $@
+    @if exist $@ echo del $@ && del $@
+    $(LB) $(STDLIBFLAGS) $(MY_LBFLAGS) $(MY_LIB4_OBJS) $(MY_LIB4_USER_LIBS) $(MY_LIB4_LIBS) -out:$@
+    @echo ------- Linking done.
+
+
+$(MY_LIB4:.lib=.lib.lnt.txt): $(_OBJ) $(MY_LIB4_OBJS:.obj=.lob)
+    $(LINT) -os($@) $(STDLINTFLAGS) $(MY_LINTFLAGS) $(MY_LIB4_OBJS:.obj=.lob)
+
+
+!endif
+
+!if "$(MY_LIB5)" != ""
+
+$(MY_LIB5): $(_OBJ) $(MY_LIB5_OBJS) $(MY_LIB5_USER_LIBS)
+    @echo ------- Linking $@
+    @if exist $@ echo del $@ && del $@
+    $(LB) $(STDLIBFLAGS) $(MY_LBFLAGS) $(MY_LIB5_OBJS) $(MY_LIB5_USER_LIBS) $(MY_LIB5_LIBS) -out:$@
+    @echo ------- Linking done.
+
+
+$(MY_LIB5:.lib=.lib.lnt.txt): $(_OBJ) $(MY_LIB5_OBJS:.obj=.lob)
+    $(LINT) -os($@) $(STDLINTFLAGS) $(MY_LINTFLAGS) $(MY_LIB5_OBJS:.obj=.lob)
+
+
+!endif
+
+######################################################################
+# MY_DLLx
+######################################################################
+
+!if "$(MY_DLL1)" != ""
+
+$(MY_DLL1): $(_OBJ) $(MY_DLL1_OBJS) $(MY_DLL1_RES) $(MY_DLL1_USER_LIBS)
+    @echo ------- Linking $@
+    @if exist $@ echo del $@ && del $@
+    $(LD) $(STDDLLFLAGS) $(MY_LDFLAGS) $(MY_DLL1_LDFLAGS) $(MY_DLL1_USER_LIBS) \
+        $(MY_DLL1_LINKLIBS) $(MY_DLL1_OBJS) $(MY_DLL1_RES) \
+        -implib:$(_LIB)\$(@B).lib \
+        -map:$(_DLL)\$(@B).map \
+        -pdb:$(_DLL)\$(@B).pdb \
+        -out:$@
+    @echo ------- Linking done.
+
+$(MY_DLL1_LINT): $(_OBJ) $(MY_DLL1_OBJS:.obj=.lob)
+    $(LINT) -os($@) $(STDLINTFLAGS) $(MY_LINTFLAGS) $(MY_DLL1_OBJS:.obj=.lob)
+
+!endif
+
+!if "$(MY_DLL2)" != ""
+
+$(MY_DLL2): $(_OBJ) $(MY_DLL2_OBJS) $(MY_DLL2_RES) $(MY_DLL2_USER_LIBS)
+    @echo ------- Linking $@
+    @if exist $@ echo del $@ && del $@
+    $(LD) $(STDDLLFLAGS) $(MY_LDFLAGS) $(MY_DLL2_LDFLAGS) $(MY_DLL2_USER_LIBS) \
+        $(MY_DLL2_LINKLIBS) $(MY_DLL2_OBJS) $(MY_DLL2_RES) \
+        -implib:$(_LIB)\$(@B).lib \
+        -map:$(_DLL)\$(@B).map \
+        -pdb:$(_DLL)\$(@B).pdb \
+        -out:$@
+    @echo ------- Linking done.
+
+$(MY_DLL2_LINT): $(_OBJ) $(MY_DLL2_OBJS:.obj=.lob)
+    $(LINT) -os($@) $(STDLINTFLAGS) $(MY_LINTFLAGS) $(MY_DLL2_OBJS:.obj=.lob)
+
+!endif
+
+######################################################################
+# MY_BINx
+######################################################################
+
+!if "$(MY_BIN1)" != ""
+
+$(MY_BIN1): \
+    $(MY_DLL1) $(MY_DLL2) $(MY_LIB1) $(MY_LIB2) $(MY_LIB3) $(MY_LIB4) $(MY_LIB5) \
+    $(_OBJ) $(MY_BIN1_OBJS) $(MY_BIN1_RES) $(MY_BIN1_USER_LIBS)
+    @echo ------- Linking $@
+    @if exist $@ echo del $@ && del $@
+    $(LD) $(STDBINFLAGS) $(MY_LDFLAGS) $(MY_BIN1_LDFLAGS) $(MY_BIN1_USER_LIBS) \
+        $(MY_BIN1_LINKLIBS) $(MY_BIN1_OBJS) $(MY_BIN1_RES) \
+        -implib:$(_OBJ)\$(@B).lib \
+        -out:$@
+    @echo ------- Linking done.
+
+
+$(MY_BIN1:.exe=.exe.lnt.txt): $(_OBJ) $(MY_BIN1_OBJS:.obj=.lob)
+    $(LINT) -os($@) $(STDLINTFLAGS) $(MY_LINTFLAGS) $(MY_BIN1_OBJS:.obj=.lob)
+
+!endif
+
+!if "$(MY_BIN2)" != ""
+
+$(MY_BIN2): \
+    $(MY_DLL1) $(MY_DLL2) $(MY_LIB1) $(MY_LIB2) $(MY_LIB3) $(MY_LIB4) $(MY_LIB5) \
+    $(_OBJ) $(MY_BIN2_OBJS) $(MY_BIN2_RES) $(MY_BIN2_USER_LIBS)
+    @echo ------- Linking $@
+    @if exist $@ echo del $@ && del $@
+    $(LD) $(STDBINFLAGS) $(MY_LDFLAGS) $(MY_BIN2_LDFLAGS) $(MY_BIN2_USER_LIBS) \
+        $(MY_BIN2_LINKLIBS) $(MY_BIN2_OBJS) $(MY_BIN2_RES) \
+        -implib:$(_OBJ)\$(@B).lib \
+        -out:$(MY_BIN2)
+    @echo ------- Linking done.
+
+$(MY_BIN2:.exe=.exe.lnt.txt): $(_OBJ) $(MY_BIN2_OBJS:.obj=.lob)
+    $(LINT) -os($@) $(STDLINTFLAGS) $(MY_LINTFLAGS) $(MY_BIN2_OBJS:.obj=.lob)
+
+!endif
+
+!if "$(MY_BIN3)" != ""
+
+$(MY_BIN3): \
+    $(MY_DLL1) $(MY_DLL2) $(MY_LIB1) $(MY_LIB2) $(MY_LIB3) $(MY_LIB4) $(MY_LIB5) \
+    $(_OBJ) $(MY_BIN3_OBJS) $(MY_BIN3_RES) $(MY_BIN3_USER_LIBS)
+    @echo ------- Linking $@
+    @if exist $@ echo del $@ && del $@
+    $(LD) $(STDBINFLAGS) $(MY_LDFLAGS) $(MY_BIN3_LDFLAGS) $(MY_BIN3_USER_LIBS) \
+        $(MY_BIN3_LINKLIBS) $(MY_BIN3_OBJS) $(MY_BIN3_RES) \
+        -implib:$(_OBJ)\$(@B).lib \
+        -out:$(MY_BIN3)
+    @echo ------- Linking done.
+
+$(MY_BIN3:.exe=.exe.lnt.txt): $(_OBJ) $(MY_BIN3_OBJS:.obj=.lob)
+    $(LINT) $(STDLINTFLAGS) $(MY_LINTFLAGS) $(MY_BIN3_OBJS:.obj=.lob) -os($@)
+
+!endif
+
+!if "$(MY_BIN4)" != ""
+
+$(MY_BIN4): \
+    $(MY_DLL1) $(MY_DLL2) $(MY_LIB1) $(MY_LIB2) $(MY_LIB3) $(MY_LIB4) $(MY_LIB5) \
+    $(_OBJ) $(MY_BIN4_OBJS) $(MY_BIN4_RES) $(MY_BIN4_USER_LIBS)
+    @echo ------- Linking $@
+    @if exist $@ echo del $@ && del $@
+    $(LD) $(STDBINFLAGS) $(MY_LDFLAGS) $(MY_BIN4_LDFLAGS) $(MY_BIN4_USER_LIBS) \
+        $(MY_BIN4_LINKLIBS) $(MY_BIN4_OBJS) $(MY_BIN4_RES) \
+        -implib:$(_OBJ)\$(@B).lib \
+        -out:$(MY_BIN4)
+    @echo ------- Linking done.
+
+$(MY_BIN4:.exe=.exe.lnt.txt): $(_OBJ) $(MY_BIN4_OBJS:.obj=.lob)
+    $(LINT) $(STDLINTFLAGS) $(MY_LINTFLAGS) $(MY_BIN4_OBJS:.obj=.lob) -os($@)
+
+!endif
+
+!if "$(MY_BIN5)" != ""
+
+$(MY_BIN5): \
+    $(MY_DLL1) $(MY_DLL2) $(MY_LIB1) $(MY_LIB2) $(MY_LIB3) $(MY_LIB4) $(MY_LIB5) \
+    $(_OBJ) $(MY_BIN5_OBJS) $(MY_BIN5_RES) $(MY_BIN5_USER_LIBS)
+    @echo ------- Linking $@
+    @if exist $@ echo del $@ && del $@
+    $(LD) $(STDBINFLAGS) $(MY_LDFLAGS) $(MY_BIN5_LDFLAGS) $(MY_BIN5_USER_LIBS) \
+        $(MY_BIN5_LINKLIBS) $(MY_BIN5_OBJS) $(MY_BIN5_RES) \
+        -implib:$(_OBJ)\$(@B).lib \
+        -out:$(MY_BIN5)
+    @echo ------- Linking done.
+
+$(MY_BIN5:.exe=.exe.lnt.txt): $(_OBJ) $(MY_BIN5_OBJS:.obj=.lob)
+    $(LINT) $(STDLINTFLAGS) $(MY_LINTFLAGS) $(MY_BIN5_OBJS:.obj=.lob) -os($@)
+
+!endif
+
+!if "$(MY_BIN6)" != ""
+
+$(MY_BIN6): \
+    $(MY_DLL1) $(MY_DLL2) $(MY_LIB1) $(MY_LIB2) $(MY_LIB3) $(MY_LIB4) $(MY_LIB5) \
+    $(_OBJ) $(MY_BIN6_OBJS) $(MY_BIN6_RES) $(MY_BIN6_USER_LIBS)
+    @echo ------- Linking $@
+    @if exist $@ echo del $@ && del $@
+    $(LD) $(STDBINFLAGS) $(MY_LDFLAGS) $(MY_BIN6_LDFLAGS) $(MY_BIN6_USER_LIBS) \
+        $(MY_BIN6_LINKLIBS) $(MY_BIN6_OBJS) $(MY_BIN6_RES) \
+        -implib:$(_OBJ)\$(@B).lib \
+        -out:$(MY_BIN6)
+    @echo ------- Linking done.
+
+$(MY_BIN6:.exe=.exe.lnt.txt): $(_OBJ) $(MY_BIN6_OBJS:.obj=.lob)
+    $(LINT) $(STDLINTFLAGS) $(MY_LINTFLAGS) $(MY_BIN6_OBJS:.obj=.lob) -os($@)
+
+!endif
+
+!if "$(MY_BIN7)" != ""
+
+$(MY_BIN7): \
+    $(MY_DLL1) $(MY_DLL2) $(MY_LIB1) $(MY_LIB2) $(MY_LIB3) $(MY_LIB4) $(MY_LIB5) \
+    $(_OBJ) $(MY_BIN7_OBJS) $(MY_BIN7_RES) $(MY_BIN7_USER_LIBS)
+    @echo ------- Linking $@
+    @if exist $@ echo del $@ && del $@
+    $(LD) $(STDBINFLAGS) $(MY_LDFLAGS) $(MY_BIN7_LDFLAGS) $(MY_BIN7_USER_LIBS) \
+        $(MY_BIN7_LINKLIBS) $(MY_BIN7_OBJS) $(MY_BIN7_RES) \
+        -implib:$(_OBJ)\$(@B).lib \
+        -out:$(MY_BIN7)
+    @echo ------- Linking done.
+
+$(MY_BIN7:.exe=.exe.lnt.txt): $(_OBJ) $(MY_BIN7_OBJS:.obj=.lob)
+    $(LINT) $(STDLINTFLAGS) $(MY_LINTFLAGS) $(MY_BIN7_OBJS:.obj=.lob) -os($@)
+
+!endif
+
+!if "$(MY_BIN8)" != ""
+
+$(MY_BIN8): \
+    $(MY_DLL1) $(MY_DLL2) $(MY_LIB1) $(MY_LIB2) $(MY_LIB3) $(MY_LIB4) $(MY_LIB5) \
+    $(_OBJ) $(MY_BIN8_OBJS) $(MY_BIN8_RES) $(MY_BIN8_USER_LIBS)
+    @echo ------- Linking $@
+    @if exist $@ echo del $@ && del $@
+    $(LD) $(STDBINFLAGS) $(MY_LDFLAGS) $(MY_BIN8_LDFLAGS) $(MY_BIN8_USER_LIBS) \
+        $(MY_BIN8_LINKLIBS) $(MY_BIN8_OBJS) $(MY_BIN8_RES) \
+        -implib:$(_OBJ)\$(@B).lib \
+        -out:$(MY_BIN8)
+    @echo ------- Linking done.
+
+$(MY_BIN8:.exe=.exe.lnt.txt): $(_OBJ) $(MY_BIN8_OBJS:.obj=.lob)
+    $(LINT) $(STDLINTFLAGS) $(MY_LINTFLAGS) $(MY_BIN8_OBJS:.obj=.lob) -os($@)
+
+!endif
+
+!if "$(MY_BIN9)" != ""
+
+$(MY_BIN9): \
+    $(MY_DLL1) $(MY_DLL2) $(MY_LIB1) $(MY_LIB2) $(MY_LIB3) $(MY_LIB4) $(MY_LIB5) \
+    $(_OBJ) $(MY_BIN9_OBJS) $(MY_BIN9_RES) $(MY_BIN9_USER_LIBS)
+    @echo ------- Linking $@
+    @if exist $@ echo del $@ && del $@
+    $(LD) $(STDBINFLAGS) $(MY_LDFLAGS) $(MY_BIN9_LDFLAGS) $(MY_BIN9_USER_LIBS) \
+        $(MY_BIN9_LINKLIBS) $(MY_BIN9_OBJS) $(MY_BIN9_RES) \
+        -implib:$(_OBJ)\$(@B).lib \
+        -out:$(MY_BIN9)
+    @echo ------- Linking done.
+
+$(MY_BIN9:.exe=.exe.lnt.txt): $(_OBJ) $(MY_BIN9_OBJS:.obj=.lob)
+    $(LINT) $(STDLINTFLAGS) $(MY_LINTFLAGS) $(MY_BIN9_OBJS:.obj=.lob) -os($@)
+
+!endif
+
+!if "$(MY_BIN10)" != ""
+
+$(MY_BIN10): \
+    $(MY_DLL1) $(MY_DLL2) $(MY_LIB1) $(MY_LIB2) $(MY_LIB3) $(MY_LIB4) $(MY_LIB5) \
+    $(_OBJ) $(MY_BIN10_OBJS) $(MY_BIN10_RES) $(MY_BIN10_USER_LIBS)
+    @echo ------- Linking $@
+    @if exist $@ echo del $@ && del $@
+    $(LD) $(STDBINFLAGS) $(MY_LDFLAGS) $(MY_BIN10_LDFLAGS) $(MY_BIN10_USER_LIBS) \
+        $(MY_BIN10_LINKLIBS) $(MY_BIN10_OBJS) $(MY_BIN10_RES) \
+        -implib:$(_OBJ)\$(@B).lib \
+        -out:$(MY_BIN10)
+    @echo ------- Linking done.
+
+$(MY_BIN10:.exe=.exe.lnt.txt): $(_OBJ) $(MY_BIN10_OBJS:.obj=.lob)
+    $(LINT) $(STDLINTFLAGS) $(MY_LINTFLAGS) $(MY_BIN10_OBJS:.obj=.lob) -os($@)
+
+!endif
+
+!if "$(MY_BIN11)" != ""
+
+$(MY_BIN11): \
+    $(MY_DLL1) $(MY_DLL2) $(MY_LIB1) $(MY_LIB2) $(MY_LIB3) $(MY_LIB4) $(MY_LIB5) \
+    $(_OBJ) $(MY_BIN11_OBJS) $(MY_BIN11_RES) $(MY_BIN11_USER_LIBS)
+    @echo ------- Linking $@
+    @if exist $@ echo del $@ && del $@
+    $(LD) $(STDBINFLAGS) $(MY_LDFLAGS) $(MY_BIN11_LDFLAGS) $(MY_BIN11_USER_LIBS) \
+        $(MY_BIN11_LINKLIBS) $(MY_BIN11_OBJS) $(MY_BIN11_RES) \
+        -implib:$(_OBJ)\$(@B).lib \
+        -out:$(MY_BIN11)
+    @echo ------- Linking done.
+
+$(MY_BIN11:.exe=.exe.lnt.txt): $(_OBJ) $(MY_BIN11_OBJS:.obj=.lob)
+    $(LINT) $(STDLINTFLAGS) $(MY_LINTFLAGS) $(MY_BIN11_OBJS:.obj=.lob) -os($@)
+
+!endif
+
+!if "$(MY_BIN12)" != ""
+
+$(MY_BIN12): \
+    $(MY_DLL1) $(MY_DLL2) $(MY_LIB1) $(MY_LIB2) $(MY_LIB3) $(MY_LIB4) $(MY_LIB5) \
+    $(_OBJ) $(MY_BIN12_OBJS) $(MY_BIN12_RES) $(MY_BIN12_USER_LIBS)
+    @echo ------- Linking $@
+    @if exist $@ echo del $@ && del $@
+    $(LD) $(STDBINFLAGS) $(MY_LDFLAGS) $(MY_BIN12_LDFLAGS) $(MY_BIN12_USER_LIBS) \
+        $(MY_BIN12_LINKLIBS) $(MY_BIN12_OBJS) $(MY_BIN12_RES) \
+        -implib:$(_OBJ)\$(@B).lib \
+        -out:$(MY_BIN12)
+    @echo ------- Linking done.
+
+$(MY_BIN12:.exe=.exe.lnt.txt): $(_OBJ) $(MY_BIN12_OBJS:.obj=.lob)
+    $(LINT) $(STDLINTFLAGS) $(MY_LINTFLAGS) $(MY_BIN12_OBJS:.obj=.lob) -os($@)
+
+!endif
+
+!if "$(MY_BIN13)" != ""
+
+$(MY_BIN13): \
+    $(MY_DLL1) $(MY_DLL2) $(MY_LIB1) $(MY_LIB2) $(MY_LIB3) $(MY_LIB4) $(MY_LIB5) \
+    $(_OBJ) $(MY_BIN13_OBJS) $(MY_BIN13_RES) $(MY_BIN13_USER_LIBS)
+    @echo ------- Linking $@
+    @if exist $@ echo del $@ && del $@
+    $(LD) $(STDBINFLAGS) $(MY_LDFLAGS) $(MY_BIN13_LDFLAGS) $(MY_BIN13_USER_LIBS) \
+        $(MY_BIN13_LINKLIBS) $(MY_BIN13_OBJS) $(MY_BIN13_RES) \
+        -implib:$(_OBJ)\$(@B).lib \
+        -out:$(MY_BIN13)
+    @echo ------- Linking done.
+
+$(MY_BIN13:.exe=.exe.lnt.txt): $(_OBJ) $(MY_BIN13_OBJS:.obj=.lob)
+    $(LINT) $(STDLINTFLAGS) $(MY_LINTFLAGS) $(MY_BIN13_OBJS:.obj=.lob) -os($@)
+
+!endif
+
+!if "$(MY_BIN14)" != ""
+
+$(MY_BIN14): \
+    $(MY_DLL1) $(MY_DLL2) $(MY_LIB1) $(MY_LIB2) $(MY_LIB3) $(MY_LIB4) $(MY_LIB5) \
+    $(_OBJ) $(MY_BIN14_OBJS) $(MY_BIN14_RES) $(MY_BIN14_USER_LIBS)
+    @echo ------- Linking $@
+    @if exist $@ echo del $@ && del $@
+    $(LD) $(STDBINFLAGS) $(MY_LDFLAGS) $(MY_BIN14_LDFLAGS) $(MY_BIN14_USER_LIBS) \
+        $(MY_BIN14_LINKLIBS) $(MY_BIN14_OBJS) $(MY_BIN14_RES) \
+        -implib:$(_OBJ)\$(@B).lib \
+        -out:$(MY_BIN14)
+    @echo ------- Linking done.
+
+$(MY_BIN14:.exe=.exe.lnt.txt): $(_OBJ) $(MY_BIN14_OBJS:.obj=.lob)
+    $(LINT) $(STDLINTFLAGS) $(MY_LINTFLAGS) $(MY_BIN14_OBJS:.obj=.lob) -os($@)
+
+!endif
+
+!if "$(MY_BIN15)" != ""
+
+$(MY_BIN15): \
+    $(MY_DLL1) $(MY_DLL2) $(MY_LIB1) $(MY_LIB2) $(MY_LIB3) $(MY_LIB4) $(MY_LIB5) \
+    $(_OBJ) $(MY_BIN15_OBJS) $(MY_BIN15_RES) $(MY_BIN15_USER_LIBS)
+    @echo ------- Linking $@
+    @if exist $@ echo del $@ && del $@
+    $(LD) $(STDBINFLAGS) $(MY_LDFLAGS) $(MY_BIN15_LDFLAGS) $(MY_BIN15_USER_LIBS) \
+        $(MY_BIN15_LINKLIBS) $(MY_BIN15_OBJS) $(MY_BIN15_RES) \
+        -implib:$(_OBJ)\$(@B).lib \
+        -out:$(MY_BIN15)
+    @echo ------- Linking done.
+
+$(MY_BIN15:.exe=.exe.lnt.txt): $(_OBJ) $(MY_BIN15_OBJS:.obj=.lob)
+    $(LINT) $(STDLINTFLAGS) $(MY_LINTFLAGS) $(MY_BIN15_OBJS:.obj=.lob) -os($@)
+
+!endif
+
+
+
+######################################################################
+# debug
+######################################################################
+
+debug:
+    @echo _GEN = ($(_GEN))
+    @echo _IDL = ($(_IDL))
+    @echo _INC = ($(_INC))
+    @echo _OBJ = ($(_OBJ))
+    @echo _SRC = ($(_SRC))
+
+######################################################################
+# clean
+######################################################################
+
+clean::
+    @for %%F in ( \
+        $(MY_LIB1) $(MY_LIB1_OBJS) \
+        $(MY_LIB2) $(MY_LIB2_OBJS) \
+        $(MY_LIB3) $(MY_LIB3_OBJS) \
+        $(MY_LIB4) $(MY_LIB4_OBJS) \
+        $(MY_LIB5) $(MY_LIB5_OBJS) \
+        $(MY_DLL1) $(MY_DLL1_OBJS) $(MY_DLL1_RES) \
+        $(MY_DLL2) $(MY_DLL2_OBJS) $(MY_DLL2_RES) \
+        DUMMY) do @if exist %%F echo %%F && del %%F
+    @for %%F in ( \
+        $(MY_BIN1) $(MY_BIN1_OBJS) $(MY_BIN1_RES) \
+        $(MY_BIN2) $(MY_BIN2_OBJS) $(MY_BIN2_RES) \
+        DUMMY) do @if exist %%F echo %%F && del %%F
+    @for %%F in ( \
+        $(MY_BIN3) $(MY_BIN3_OBJS) $(MY_BIN3_RES) \
+        $(MY_BIN4) $(MY_BIN4_OBJS) $(MY_BIN4_RES) \
+        DUMMY) do @if exist %%F echo %%F && del %%F
+    @for %%F in ( \
+        $(MY_BIN5) $(MY_BIN5_OBJS) $(MY_BIN5_RES) \
+        $(MY_BIN6) $(MY_BIN6_OBJS) $(MY_BIN6_RES) \
+        DUMMY) do @if exist %%F echo %%F && del %%F
+    @for %%F in ( \
+        $(MY_BIN7) $(MY_BIN7_OBJS) $(MY_BIN7_RES) \
+        $(MY_BIN8) $(MY_BIN8_OBJS) $(MY_BIN8_RES) \
+        DUMMY) do @if exist %%F echo %%F && del %%F
+    @for %%F in ( \
+        $(MY_BIN11) $(MY_BIN11_OBJS) $(MY_BIN11_RES) \
+        $(MY_BIN12) $(MY_BIN12_OBJS) $(MY_BIN12_RES) \
+        DUMMY) do @if exist %%F echo %%F && del %%F
+    @for %%F in ( \
+        $(MY_BIN13) $(MY_BIN13_OBJS) $(MY_BIN13_RES) \
+        $(MY_BIN14) $(MY_BIN14_OBJS) $(MY_BIN14_RES) \
+        $(MY_BIN15) $(MY_BIN15_OBJS) $(MY_BIN15_RES) \
+        DUMMY) do @if exist %%F echo %%F && del %%F
+    @for %%F in ( \
+        $(MY_BIN9) $(MY_BIN9_OBJS) $(MY_BIN9_RES) \
+        $(MY_BIN10) $(MY_BIN10_OBJS) $(MY_BIN10_RES) \
+        $(_OBJ)\*.lib $(_OBJ)\*.exp \
+        $(DEP_MAKEFILES) $(DEP_MAKEOFILES) $(DEP_MAKEDEP) \
+        vc60.idb vc60.pdb \
+        DUMMY) do @if exist %%F echo %%F && del %%F
+    @if exist $(_OBJ) echo $(_OBJ) && $(RMDIR) /s /q $(_OBJ)
+    @if exist $(_SOAPGEN) echo $(_SOAPGEN) && $(RMDIR) /s /q $(_SOAPGEN)
+
+
+clean-lint::
+    @for %%F in ( \
+        $(MY_LIB1:.lib=.lib.lnt.txt) $(MY_LIB1_OBJS:.obj=.lob)  $(MY_LIB1_OBJS:.obj=.lnt.txt) \
+        DUMMY) do @if exist %%F echo %%F && del %%F
+    @for %%F in ( \
+        $(MY_LIB2:.lib=.lib.lnt.txt) $(MY_LIB2_OBJS:.obj=.lob)  $(MY_LIB2_OBJS:.obj=.lnt.txt) \
+        DUMMY) do @if exist %%F echo %%F && del %%F
+    @for %%F in ( \
+        $(MY_LIB3:.lib=.lib.lnt.txt) $(MY_LIB3_OBJS:.obj=.lob)  $(MY_LIB3_OBJS:.obj=.lnt.txt) \
+        DUMMY) do @if exist %%F echo %%F && del %%F
+    @for %%F in ( \
+        $(MY_LIB4:.lib=.lib.lnt.txt) $(MY_LIB4_OBJS:.obj=.lob)  $(MY_LIB4_OBJS:.obj=.lnt.txt) \
+        DUMMY) do @if exist %%F echo %%F && del %%F
+    @for %%F in ( \
+        $(MY_LIB5:.lib=.lib.lnt.txt) $(MY_LIB5_OBJS:.obj=.lob)  $(MY_LIB5_OBJS:.obj=.lnt.txt) \
+        DUMMY) do @if exist %%F echo %%F && del %%F
+    @for %%F in ( \
+        $(MY_DLL1_LINT) $(MY_DLL1_OBJS:.obj=.lob)  $(MY_DLL1_OBJS:.obj=.lnt.txt) \
+        DUMMY) do @if exist %%F echo %%F && del %%F
+    @for %%F in ( \
+        $(MY_DLL2_LINT) $(MY_DLL2_OBJS:.obj=.lob)  $(MY_DLL2_OBJS:.obj=.lnt.txt) \
+        DUMMY) do @if exist %%F echo %%F && del %%F
+    @for %%F in ( \
+        $(MY_BIN1:.exe=.exe.lnt.txt) $(MY_BIN1_OBJS:.obj=.lob)  $(MY_BIN1_OBJS:.obj=.lnt.txt) \
+        DUMMY) do @if exist %%F echo %%F && del %%F
+    @for %%F in ( \
+        $(MY_BIN2:.exe=.exe.lnt.txt) $(MY_BIN2_OBJS:.obj=.lob)  $(MY_BIN2_OBJS:.obj=.lnt.txt) \
+        DUMMY) do @if exist %%F echo %%F && del %%F
+    @for %%F in ( \
+        $(MY_BIN3:.exe=.exe.lnt.txt) $(MY_BIN3_OBJS:.obj=.lob)  $(MY_BIN3_OBJS:.obj=.lnt.txt) \
+        DUMMY) do @if exist %%F echo %%F && del %%F
+    @for %%F in ( \
+        $(MY_BIN4:.exe=.exe.lnt.txt) $(MY_BIN4_OBJS:.obj=.lob)  $(MY_BIN4_OBJS:.obj=.lnt.txt) \
+        DUMMY) do @if exist %%F echo %%F && del %%F
+    @for %%F in ( \
+        $(MY_BIN5:.exe=.exe.lnt.txt) $(MY_BIN5_OBJS:.obj=.lob)  $(MY_BIN5_OBJS:.obj=.lnt.txt) \
+        DUMMY) do @if exist %%F echo %%F && del %%F
+    @for %%F in ( \
+        $(MY_BIN6:.exe=.exe.lnt.txt) $(MY_BIN6_OBJS:.obj=.lob)  $(MY_BIN6_OBJS:.obj=.lnt.txt) \
+        DUMMY) do @if exist %%F echo %%F && del %%F
+    @for %%F in ( \
+        $(MY_BIN7:.exe=.exe.lnt.txt) $(MY_BIN7_OBJS:.obj=.lob)  $(MY_BIN7_OBJS:.obj=.lnt.txt) \
+        DUMMY) do @if exist %%F echo %%F && del %%F
+    @for %%F in ( \
+        $(MY_BIN8:.exe=.exe.lnt.txt) $(MY_BIN8_OBJS:.obj=.lob)  $(MY_BIN8_OBJS:.obj=.lnt.txt) \
+        DUMMY) do @if exist %%F echo %%F && del %%F
+    @for %%F in ( \
+        $(MY_BIN11:.exe=.exe.lnt.txt) $(MY_BIN11_OBJS:.obj=.lob)  $(MY_BIN11_OBJS:.obj=.lnt.txt) \
+        DUMMY) do @if exist %%F echo %%F && del %%F
+    @for %%F in ( \
+        $(MY_BIN12:.exe=.exe.lnt.txt) $(MY_BIN12_OBJS:.obj=.lob)  $(MY_BIN12_OBJS:.obj=.lnt.txt) \
+        DUMMY) do @if exist %%F echo %%F && del %%F
+    @for %%F in ( \
+        $(MY_BIN13:.exe=.exe.lnt.txt) $(MY_BIN13_OBJS:.obj=.lob)  $(MY_BIN13_OBJS:.obj=.lnt.txt) \
+        DUMMY) do @if exist %%F echo %%F && del %%F
+    @for %%F in ( \
+        $(MY_BIN14:.exe=.exe.lnt.txt) $(MY_BIN14_OBJS:.obj=.lob)  $(MY_BIN14_OBJS:.obj=.lnt.txt) \
+        DUMMY) do @if exist %%F echo %%F && del %%F
+    @for %%F in ( \
+        $(MY_BIN15:.exe=.exe.lnt.txt) $(MY_BIN15_OBJS:.obj=.lob)  $(MY_BIN15_OBJS:.obj=.lnt.txt) \
+        DUMMY) do @if exist %%F echo %%F && del %%F
+    @for %%F in ( \
+        $(MY_BIN9:.exe=.exe.lnt.txt) $(MY_BIN9_OBJS:.obj=.lob)  $(MY_BIN9_OBJS:.obj=.lnt.txt) \
+        DUMMY) do @if exist %%F echo %%F && del %%F
+    @for %%F in ( \
+        $(MY_BIN10:.exe=.exe.lnt.txt) $(MY_BIN10_OBJS:.obj=.lob)  $(MY_BIN10_OBJS:.obj=.lnt.txt) \
+        DUMMY) do @if exist %%F echo %%F && del %%F
+
+!if "$(MY_GEN_CPPS)" != ""
+
+clean::
+    @for %%F in ( \
+        $(MY_GEN_CPPS) \
+        DUMMY) do @if exist %%F echo %%F && del %%F
+
+!endif
+
+######################################################################
+# Dependencies
+######################################################################
+
+cleandep:
+    del $(DEP_MAKEFILES) $(DEP_MAKEOFILES) $(DEP_MAKEDEP)
+
+dep: $(DEP_MAKEDEP)
+
+$(DEP_MAKEDEP): $(DEP_MAKEFILES)
+    $(PERL) $(MKDEP) $(MKDEPFLAGS) -c $(STDCFLAGS) $(MY_CFLAGS)
+
+#    $(PERL) $(MKDEP) $(MKDEPFLAGS)
+
+
+
+$(DEP_MAKEFILES):
+    $(PERL) $(MKFILES) $(_SRC) $(_SOAPGEN) $(_RES) $(P_SRC) $(P_RES) $(P_SOAPGEN) $(PP_SRC) $(PP_RES) $(PP_SOAPGEN)
+
+!include <make.dep>
+
-- 
2.41.0.windows.1

