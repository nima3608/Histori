From 8faef3d64af7ca7c02c554bbab9426865bd88118 Mon Sep 17 00:00:00 2001
From: tstegema <tstegema@90b65887-3827-0410-9a23-83215b262276>
Date: Tue, 10 Feb 2015 17:47:20 +0000
Subject: [PATCH 0645/1076] MANTIS 0035513 BTP-Component: switch power off
 (OPTION45) on ERR9, out of memory

textidl.lib
V1.0.0.11

- added text constants for atb2dev.idl



git-svn-id: svn://localhost/SelfServiceCommon/trunk@822 90b65887-3827-0410-9a23-83215b262276
---
 .../Interfaces/inc/textIDL/textatb2dev.h      |  46 ++++
 .../Massai/cpp/textIDL/makefile.mak           |   1 +
 .../Massai/cpp/textIDL/src/local_def.cpp      |   9 +-
 .../Massai/cpp/textIDL/src/textatb2dev.cpp    | 212 ++++++++++++++++++
 .../Massai/cpp/textIDL/src/textgppdev.cpp     |  20 +-
 .../Massai/cpp/textIDL/src/texttypes.cpp      |  86 ++++++-
 6 files changed, 369 insertions(+), 5 deletions(-)
 create mode 100644 SelfServiceCommon/Interfaces/inc/textIDL/textatb2dev.h
 create mode 100644 SelfServiceCommon/Massai/cpp/textIDL/src/textatb2dev.cpp

diff --git a/SelfServiceCommon/Interfaces/inc/textIDL/textatb2dev.h b/SelfServiceCommon/Interfaces/inc/textIDL/textatb2dev.h
new file mode 100644
index 00000000..5514279f
--- /dev/null
+++ b/SelfServiceCommon/Interfaces/inc/textIDL/textatb2dev.h
@@ -0,0 +1,46 @@
+// convert enums/structs from atb2dev.idl to text
+#ifndef TEXTATB2DEV_H_INCLUDED
+#define TEXTATB2DEV_H_INCLUDED
+#ifdef SHOW_INCLUDE_FILES
+#pragma message("including: " __FILE__)
+#endif
+
+#include "atb2dev.h"
+#include <string>
+#include <ostream>
+
+namespace MASSAI
+{
+  namespace atb2dev_text
+  {
+    std::string completionTypeText (const atb2dev::completionType& code);
+    std::string errorTypeText      (const atb2dev::errorType& code);
+    std::string mediaStatusTypeText(const atb2dev::mediaStatusType& code);
+    std::string commandTypeText    (const atb2dev::commandType& code);
+    std::string indicationTypeText (const atb2dev::indicationType& code);
+
+    std::string stockTypeText      (const atb2dev::stockType& data);
+    std::string stockListText      (const atb2dev::stockList& data);
+    std::string statusText         (const atb2dev::status& data);
+    std::string contexts           (const atb2dev::contexts& data);
+    std::string nameListText       (const atb2dev::nameList& data);
+  }
+}
+
+std::ostream& operator<<(std::ostream& out, const atb2dev::completionType& code);
+std::ostream& operator<<(std::ostream& out, const atb2dev::errorType& code);
+std::ostream& operator<<(std::ostream& out, const atb2dev::mediaStatusType& code);
+std::ostream& operator<<(std::ostream& out, const atb2dev::commandType& code);
+std::ostream& operator<<(std::ostream& out, const atb2dev::indicationType& code);
+
+std::ostream& operator<<(std::ostream& out, const atb2dev::stockType& data);
+std::ostream& operator<<(std::ostream& out, const atb2dev::stockList& data);
+std::ostream& operator<<(std::ostream& out, const atb2dev::status& data);
+std::ostream& operator<<(std::ostream& out, const atb2dev::contexts& data);
+std::ostream& operator<<(std::ostream& out, const atb2dev::nameList& data);
+
+#endif
+
+
+
+
diff --git a/SelfServiceCommon/Massai/cpp/textIDL/makefile.mak b/SelfServiceCommon/Massai/cpp/textIDL/makefile.mak
index 28fada6f..93e54b2a 100644
--- a/SelfServiceCommon/Massai/cpp/textIDL/makefile.mak
+++ b/SelfServiceCommon/Massai/cpp/textIDL/makefile.mak
@@ -16,6 +16,7 @@ MY_LIB1 = $(LIB_DST_TEXTIDL)
 
 MY_LIB1_OBJS = \
     $(_OBJ)\textgppdev.obj \
+    $(_OBJ)\textatb2dev.obj \
     $(_OBJ)\textidl.obj \
     $(_OBJ)\textmdci.obj \
     $(_OBJ)\textcodes.obj \
diff --git a/SelfServiceCommon/Massai/cpp/textIDL/src/local_def.cpp b/SelfServiceCommon/Massai/cpp/textIDL/src/local_def.cpp
index 3edd1af4..a6aad6a5 100644
--- a/SelfServiceCommon/Massai/cpp/textIDL/src/local_def.cpp
+++ b/SelfServiceCommon/Massai/cpp/textIDL/src/local_def.cpp
@@ -1,6 +1,6 @@
 #include "tools/versionlib.h"
 
-VERSION_ID_DT(textIDL, 1, 0, 0, 10);
+VERSION_ID_DT(textIDL, 1, 0, 0, 11);
 
 /*!
 \file
@@ -8,12 +8,17 @@ VERSION_ID_DT(textIDL, 1, 0, 0, 10);
 
 \page textidl.lib Release Notes - textidl.lib
 
-@version 1.0.0.10
+\version 1.0.0.11
 
 \section changehistory Change history
 
 textidl.lib
 
+\version 1.0.0.11
+\li 10.02.2015
+\li Mantis 0035513: BTP-Component: switch power off (OPTION45) on ERR9, out of memory
+- added text constants for atb2dev.idl
+
 \version 1.0.0.10
 \li 28.10.20014
 \li Mantis 0034299: switch resolution; start application with default resolution
diff --git a/SelfServiceCommon/Massai/cpp/textIDL/src/textatb2dev.cpp b/SelfServiceCommon/Massai/cpp/textIDL/src/textatb2dev.cpp
new file mode 100644
index 00000000..4cbb983e
--- /dev/null
+++ b/SelfServiceCommon/Massai/cpp/textIDL/src/textatb2dev.cpp
@@ -0,0 +1,212 @@
+// convert enums/structs from atb2dev.idl to text
+#include "textIDL/textatb2dev.h"
+#include "textIDL/textmdci.h"
+#include "textidl.h"
+#include "corbasrvr.h"
+#include <sstream>
+
+using MASSAI::idl_text::unknown;
+using namespace MASSAI::atb2dev_text;
+
+namespace MASSAI
+{
+  namespace atb2dev_text
+  {
+    std::string completionTypeText(const atb2dev::completionType& code)
+    {
+      switch(code)
+      {
+        case atb2dev::CMPL_COMPLETED:      return "COMPLETED";
+        case atb2dev::CMPL_CANCELLED:      return "CANCELLED";
+        case atb2dev::CMPL_CANCEL_FAILED:  return "CANCEL_FAILED";
+        case atb2dev::CMPL_TIMEOUT:        return "TIMEOUT";
+        case atb2dev::CMPL_ILLOGICAL:      return "ILLOGICAL";
+        case atb2dev::CMPL_ABORTED:        return "ABORTED";
+        case atb2dev::CMPL_WRONG_FORMAT:   return "WRONG_FORMAT";
+        case atb2dev::CMPL_MEDIA_OUT:      return "MEDIA_OUT";
+        case atb2dev::CMPL_MEDIA_UNKNOWN:  return "MEDIA_UNKNOWN";
+        case atb2dev::CMPL_FAILED:         return "FAILED";
+        default:                           return unknown("completionType", code);
+      }
+    }
+
+    std::string errorTypeText(const atb2dev::errorType& code)
+    {
+      switch(code)
+      {
+        case atb2dev::ERR_NONE:         return "NONE";
+        case atb2dev::ERR_BUSY:         return "BUSY";
+        case atb2dev::ERR_DISCONNECTED: return "DISCONNECTED";
+        case atb2dev::ERR_HARDWARE:     return "HARDWARE";
+        case atb2dev::ERR_MEDIA_JAMMED: return "MEDIA_JAMMED";
+        case atb2dev::ERR_RIBBON_OUT:   return "RIBBON_OUT";
+        case atb2dev::ERR_OFFLINE:      return "OFFLINE";
+        default:                        return unknown("errorType", code);
+      }
+    }
+
+    std::string mediaStatusTypeText(const atb2dev::mediaStatusType& code)
+    {
+      switch(code)
+      {
+        case atb2dev::MEDIA_ABSENT:  return "MEDIA_ABSENT";
+        case atb2dev::MEDIA_PRESENT: return "MEDIA_PRESENT";
+        case atb2dev::MEDIA_HIGH:    return "MEDIA_HIGH";
+        case atb2dev::MEDIA_LOW:     return "MEDIA_LOW";
+        default:                     return unknown("mediaStatusType", code);
+      }
+    }
+
+    std::string commandTypeText(const atb2dev::commandType& code)
+    {
+      switch(code)
+      {
+        case atb2dev::CMD_CANCEL:         return "CANCEL";
+        case atb2dev::CMD_CONTEXT_SWITCH: return "CONTEXT_SWITCH";
+        case atb2dev::CMD_EJECT:          return "EJECT";
+        case atb2dev::CMD_ESCROW_OPEN:    return "ESCROW_OPEN";
+        case atb2dev::CMD_ESCROW_RETRACT: return "ESCROW_RETRACT";
+        case atb2dev::CMD_PRINT:          return "PRINT";
+        case atb2dev::CMD_RESET:          return "RESET";
+        case atb2dev::CMD_SHUTTER_CLOSE:  return "SHUTTER_CLOSE";
+        case atb2dev::CMD_SHUTTER_OPEN:   return "SHUTTER_OPEN";
+        case atb2dev::CMD_STATUS_QUERY:   return "STATUS_QUERY";
+        case atb2dev::CMD_STOCK_REFILLED: return "STOCK_REFILLED";
+        case atb2dev::CMD_CONTEXT_DELETE: return "CONTEXT_DELETE";
+        case atb2dev::CMD_CONTEXT_QUERY:  return "CONTEXT_QUERY";
+        default:                          return unknown("commandType", code);
+      }
+    }
+
+    std::string indicationTypeText(const atb2dev::indicationType& code)
+    {
+      switch(code)
+      {
+        case atb2dev::IND_CONTEXT_SWITCH_DONE: return "CONTEXT_SWITCH_DONE";
+        case atb2dev::IND_COUPON_INSERTED:     return "COUPON_INSERTED";
+        case atb2dev::IND_COUPON_REMOVED:      return "COUPON_REMOVED";
+        case atb2dev::IND_EJECT_DONE:          return "EJECT_DONE";
+        case atb2dev::IND_ESCROW_OPEN:         return "ESCROW_OPEN";
+        case atb2dev::IND_ESCROW_RETRACT_DONE: return "ESCROW_RETRACT_DONE";
+        case atb2dev::IND_PRINT_DONE:          return "PRINT_DONE";
+        case atb2dev::IND_RESET_DONE:          return "RESET_DONE";
+        case atb2dev::IND_SHUTTER_CLOSE_DONE:  return "SHUTTER_CLOSE_DONE";
+        case atb2dev::IND_SHUTTER_OPEN_DONE:   return "SHUTTER_OPEN_DONE";
+        case atb2dev::IND_STATUS_INFO:         return "STATUS_INFO";
+        case atb2dev::IND_STOCK_REFILLED_DONE: return "STOCK_REFILLED_DONE";
+        case atb2dev::IND_POWER_SWITCH_REQUEST:return "POWER_SWITCH_REQUEST";
+        case atb2dev::IND_CONTEXT_DELETE_DONE: return "CONTEXT_DELETE_DONE";
+        case atb2dev::IND_CONTEXT_INFO:        return "CONTEXT_INFO";
+        default:                               return unknown("indicationType", code);
+      }
+    }
+
+    std::string stockTypeText(const atb2dev::stockType& data)
+    {
+      std::ostringstream out;
+      out << "couponsProduced: (" << data.couponsProduced << "), "
+          << "couponStatus: ("    << data.couponStatus << ")";
+      return out.str();
+    }
+
+    std::string stockListText(const atb2dev::stockList& data)
+    {
+      std::ostringstream out;
+      for(unsigned int i= 0; i < data.length(); i++)
+      {
+        out << "Feeder: (" << i << "): (" << data[i] << ")\n";
+      }
+      return out.str();
+    }
+
+    std::string statusText(const atb2dev::status& data)
+    {
+      std::ostringstream out;
+      out << "completion: ("   << data.completionCode << "),\n"
+          << "error: ("        << data.errorStatus << "),\n"
+          << "media status: (" << data.printerMediaStatus << "),\n"
+          << "voided: ("       << data.voidedCoupons << "),\n"
+          << "stock status:\n" << data.stockStatus;
+      return out.str();
+    }
+
+    std::string contextsText(const atb2dev::contexts& data)
+    {
+      std::ostringstream out;
+      out << "ContextList: (" << data.names << ")\n";
+      return out.str();
+    }
+
+
+    std::string nameListText(const atb2dev::nameList& data)
+    {
+      std::ostringstream out;
+      for(unsigned int i= 0; i < data.length(); i++)
+      {
+        out << "(" << data[i] << ")\n";
+      }
+      return out.str();
+    }
+  }
+}
+
+
+std::ostream& operator<<(std::ostream& out, const atb2dev::completionType& code)
+{
+  out << completionTypeText(code);
+  return out;
+}
+
+std::ostream& operator<<(std::ostream& out, const atb2dev::errorType& code)
+{
+  out << errorTypeText(code);
+  return out;
+}
+
+std::ostream& operator<<(std::ostream& out, const atb2dev::mediaStatusType& code)
+{
+  out << mediaStatusTypeText(code);
+  return out;
+}
+
+std::ostream& operator<<(std::ostream& out, const atb2dev::commandType& code)
+{
+  out << commandTypeText(code);
+  return out;
+}
+
+std::ostream& operator<<(std::ostream& out, const atb2dev::indicationType& code)
+{
+  out << indicationTypeText(code);
+  return out;
+}
+
+std::ostream& operator<<(std::ostream& out, const atb2dev::stockType& data)
+{
+  out << stockTypeText(data);
+  return out;
+}
+
+std::ostream& operator<<(std::ostream& out, const atb2dev::stockList& data)
+{
+  out << stockListText(data);
+  return out;
+}
+
+std::ostream& operator<<(std::ostream& out, const atb2dev::status& data)
+{
+  out << statusText(data);
+  return out;
+}
+
+std::ostream& operator<<(std::ostream& out, const atb2dev::contexts& data)
+{
+  out << contextsText(data);
+  return out;
+}
+
+std::ostream& operator<<(std::ostream& out, const atb2dev::nameList& data)
+{
+  out << nameListText(data);
+  return out;
+}
diff --git a/SelfServiceCommon/Massai/cpp/textIDL/src/textgppdev.cpp b/SelfServiceCommon/Massai/cpp/textIDL/src/textgppdev.cpp
index 33f8b2f6..598aa077 100644
--- a/SelfServiceCommon/Massai/cpp/textIDL/src/textgppdev.cpp
+++ b/SelfServiceCommon/Massai/cpp/textIDL/src/textgppdev.cpp
@@ -26,6 +26,7 @@ namespace MASSAI
         default:                           return unknown("mediaType", code);
       }
     }
+
     std::string completionTypeText(const gppdev::completionType& code)
     {
       switch(code)
@@ -96,6 +97,7 @@ namespace MASSAI
         default:                           return unknown("printOrientation", code);
       }
     }
+
     std::string indicationTypeText(const gppdev::indicationType& code)
     {
       switch(code)
@@ -112,6 +114,7 @@ namespace MASSAI
         default:                               return unknown("indicationType", code);
       }
     }
+
     std::string stockTypeText(const gppdev::stockType& data)
     {
       std::ostringstream out;
@@ -119,15 +122,17 @@ namespace MASSAI
           << "couponStatus: ("    << data.couponStatus << ")";
       return out.str();
     }
+
     std::string stockListText(const gppdev::stockList& data)
     {
       std::ostringstream out;
-      for(int i= 0; i < data.length(); i++)
+      for(unsigned int i= 0; i < data.length(); i++)
       {
         out << "Feeder: (" << i << "): (" << data[i] << ")\n";
       }
       return out.str();
     }
+
     std::string statusOfMultipleStockPrinterText(const gppdev::statusOfMultipleStockPrinter& data)
     {
       std::ostringstream out;
@@ -138,6 +143,7 @@ namespace MASSAI
           << "stock status:\n" << data.stockStatus;
       return out.str();
     }
+
     std::string extendendPrintDataText(const gppdev::extendendPrintData& data)
     {
       std::ostringstream out;
@@ -176,6 +182,7 @@ namespace MASSAI
       }
       return out.str();
     }
+
     std::string gppCommandDataText(const gppdev::gppCommandData& data)
     {
       std::ostringstream out;
@@ -236,31 +243,37 @@ std::ostream& operator<<(std::ostream& out, const gppdev::mediaType& code)
   out << mediaTypeText(code);
   return out;
 }
+
 std::ostream& operator<<(std::ostream& out, const gppdev::completionType& code)
 {
   out << completionTypeText(code);
   return out;
 }
+
 std::ostream& operator<<(std::ostream& out, const gppdev::errorType& code)
 {
   out << errorTypeText(code);
   return out;
 }
+
 std::ostream& operator<<(std::ostream& out, const gppdev::mediaStatusType& code)
 {
   out << mediaStatusTypeText(code);
   return out;
 }
+
 std::ostream& operator<<(std::ostream& out, const gppdev::commandType& code)
 {
   out << commandTypeText(code);
   return out;
 }
+
 std::ostream& operator<<(std::ostream& out, const gppdev::printOrientation& code)
 {
   out << printOrientationText(code);
   return out;
 }
+
 std::ostream& operator<<(std::ostream& out, const gppdev::indicationType& code)
 {
   out << indicationTypeText(code);
@@ -272,24 +285,27 @@ std::ostream& operator<<(std::ostream& out, const gppdev::stockType& data)
   out << stockTypeText(data);
   return out;
 }
+
 std::ostream& operator<<(std::ostream& out, const gppdev::stockList& data)
 {
   out << stockListText(data);
   return out;
 }
+
 std::ostream& operator<<(std::ostream& out, const gppdev::statusOfMultipleStockPrinter& data)
 {
   out << statusOfMultipleStockPrinterText(data);
   return out;
 }
+
 std::ostream& operator<<(std::ostream& out, const gppdev::extendendPrintData& data)
 {
   out << extendendPrintDataText(data);
   return out;
 }
+
 std::ostream& operator<<(std::ostream& out, const gppdev::gppCommandData& data)
 {
   out << gppCommandDataText(data);
   return out;
 }
-
diff --git a/SelfServiceCommon/Massai/cpp/textIDL/src/texttypes.cpp b/SelfServiceCommon/Massai/cpp/textIDL/src/texttypes.cpp
index 7b88dcd1..09eba6df 100644
--- a/SelfServiceCommon/Massai/cpp/textIDL/src/texttypes.cpp
+++ b/SelfServiceCommon/Massai/cpp/textIDL/src/texttypes.cpp
@@ -30,6 +30,7 @@ namespace MASSAI
         default:                return unknown("Orientation", orientation);
       }
     }
+
     std::string actionText(types::action action)
     {
       switch(action)
@@ -39,6 +40,7 @@ namespace MASSAI
         default:                return unknown("Action", action);
       }
     }
+
     std::string evtCategoryText(types::evtCategory evtCategory)
     {
       switch(evtCategory)
@@ -49,6 +51,7 @@ namespace MASSAI
         default:             return unknown("EvtCategory", evtCategory);
       }
     }
+
     std::string evtTypeText(types::evtType evtType)
     {
       switch(evtType)
@@ -60,6 +63,7 @@ namespace MASSAI
         default:               return unknown("EvtType", evtType);
       }
     }
+
     std::string evtModeText(types::evtMode evtMode)
     {
       switch(evtMode)
@@ -69,6 +73,7 @@ namespace MASSAI
         default:                  return unknown("EvtMode", evtMode);
       }
     }
+
     std::string evtFilterTypeText(types::evtFilterType evtFilterType)
     {
       switch(evtFilterType)
@@ -82,228 +87,267 @@ namespace MASSAI
         default:                return unknown("EvtFilterType", evtFilterType);
       }
     }
+
     std::string dataStatusText(types::dataStatus dataStatus)
     {
       return MASSAI::codes_text::dataStatusText(dataStatus);
     }
+
     std::string evtCodeText(types::evtCode evtCode)
     {
       return MASSAI::codes_text::eventCodesText(evtCode);
     }
+
     std::string evtStatusCodeText(types::evtStatusCode evtStatusCode)
     {
       return MASSAI::codes_text::statusCodesText(evtStatusCode);
     }
+
     std::string akIDText(const types::akID& akID)
     {
       std::ostringstream out;
       out << akID;
       return out.str();
     }
+
     std::string locationText(const types::location& location)
     {
       std::ostringstream out;
       out << location;
       return out.str();
     }
+
     std::string coordinateText(const types::coordinate& coordinate)
     {
       std::ostringstream out;
       out << coordinate;
       return out.str();
     }
+
     std::string gpsText(const types::gps& gps)
     {
       std::ostringstream out;
       out << gps;
       return out.str();
     }
+
     std::string environmentLevelText(const types::EnvironmentLevel& environmentLevel)
     {
       std::ostringstream out;
       out << environmentLevel;
       return out.str();
     }
+
     std::string environmentComponentText(const types::EnvironmentComponent& environmentComponent)
     {
       std::ostringstream out;
       out << environmentComponent;
       return out.str();
     }
+
     std::string dataRecordText(const types::dataRecord& dataRecord)
     {
       std::ostringstream out;
       out << dataRecord;
       return out.str();
     }
+
     std::string msgDataTypeText(const types::msgDataType& msgDataType)
     {
       std::ostringstream out;
       out << msgDataType;
       return out.str();
     }
+
     std::string evtCodeFilterElemText(const types::evtCodeFilterElem& evtCodeFilterElem)
     {
       std::ostringstream out;
       out << evtCodeFilterElem;
       return out.str();
     }
+
     std::string evtTypeFilterElemText(const types::evtTypeFilterElem& evtTypeFilterElem)
     {
       std::ostringstream out;
       out << evtTypeFilterElem;
       return out.str();
     }
+
     std::string evtComponentFilterElemText(const types::evtComponentFilterElem& evtComponentFilterElem)
     {
       std::ostringstream out;
       out << evtComponentFilterElem;
       return out.str();
     }
+
     std::string evtDescrText(const types::evtDescr& evtDescr)
     {
       std::ostringstream out;
       out << evtDescr;
       return out.str();
     }
+
     std::string evtDescrANY_CODE_TYPEText(const types::evtDescrANY_CODE_TYPE& evtDescrANY_CODE_TYPE)
     {
       std::ostringstream out;
       out << evtDescrANY_CODE_TYPE;
       return out.str();
     }
+
     std::string evtDescrCOMPONENTText(const types::evtDescrCOMPONENT& evtDescrCOMPONENT)
     {
       std::ostringstream out;
       out << evtDescrCOMPONENT;
       return out.str();
     }
+
     std::string eventText(const types::Event& event)
     {
       std::ostringstream out;
       out << event;
       return out.str();
     }
+
     std::string evtCodeFilterUnionText(const types::evtCodeFilterUnion& evtCodeFilterUnion)
     {
       std::ostringstream out;
       out << evtCodeFilterUnion;
       return out.str();
     }
+
     std::string evtTypeFilterUnionText(const types::evtTypeFilterUnion& evtTypeFilterUnion)
     {
       std::ostringstream out;
       out << evtTypeFilterUnion;
       return out.str();
     }
+
     std::string evtComponentFilterUnionText(const types::evtComponentFilterUnion& evtComponentFilterUnion)
     {
       std::ostringstream out;
       out << evtComponentFilterUnion;
       return out.str();
     }
+
     std::string evtFilterText(const types::evtFilter& evtFilter)
     {
       std::ostringstream out;
       out << evtFilter;
       return out.str();
     }
+
     std::string evtAcquireFilterText(const types::evtAcquireFilter& evtAcquireFilter)
     {
       std::ostringstream out;
       out << evtAcquireFilter;
       return out.str();
     }
+
     std::string evtDescriptionText(const types::evtDescription& evtDescription)
     {
       std::ostringstream out;
       out << evtDescription;
       return out.str();
     }
+
     std::string namelistText(const types::namelist& namelist)
     {
       std::ostringstream out;
       out << namelist;
       return out.str();
     }
+
     std::string indexListText(const types::indexList& indexList)
     {
       std::ostringstream out;
       out << indexList;
       return out.str();
     }
+
     std::string iorlistText(const types::iorlist& iorlist)
     {
       std::ostringstream out;
       out << iorlist;
       return out.str();
     }
+
     std::string environmentComponentsText(const types::EnvironmentComponents& environmentComponents)
     {
       std::ostringstream out;
       out << environmentComponents;
       return out.str();
     }
+
     std::string evtCodeFilterText(const types::evtCodeFilter& evtCodeFilter)
     {
       std::ostringstream out;
       out << evtCodeFilter;
       return out.str();
     }
+
     std::string evtTypeFilterText(const types::evtTypeFilter& evtTypeFilter)
     {
       std::ostringstream out;
       out << evtTypeFilter;
       return out.str();
     }
+
     std::string evtComponentFilterText(const types::evtComponentFilter& evtComponentFilter)
     {
       std::ostringstream out;
       out << evtComponentFilter;
       return out.str();
     }
+
     std::string msgDataTypeRecordsSeqText(const types::msgDataType::_records_seq& records)
     {
       std::ostringstream out;
       out << records;
       return out.str();
     }
+
     std::string evtDescrEventTypesSeq(const types::evtDescr::_eventTypes_seq& eventTypes)
     {
       std::ostringstream out;
       out << eventTypes;
       return out.str();
     }
+
     std::string evtDescrCOMPONENTEventDescrSeq(const types::evtDescrCOMPONENT::_eventDescr_seq& eventDescr)
     {
       std::ostringstream out;
       out << eventDescr;
       return out.str();
     }
+
     std::string evtComponentFilterUnionFilterCODESeq(const types::evtComponentFilterUnion::_filterCODE_seq& filterCODE)
     {
       std::ostringstream out;
       out << filterCODE;
       return out.str();
     }
+
     std::string evtComponentFilterUnionFilterTYPESeq(const types::evtComponentFilterUnion::_filterTYPE_seq& filterTYPE)
     {
       std::ostringstream out;
       out << filterTYPE;
       return out.str();
     }
+
     std::string evtAcquireFilterFilterCODESeq(const types::evtAcquireFilter::_filterCODE_seq& filterCODE)
     {
       std::ostringstream out;
       out << filterCODE;
       return out.str();
     }
+
     std::string evtAcquireFilterFilterTYPESeq(const types::evtAcquireFilter::_filterTYPE_seq& filterTYPE)
     {
       std::ostringstream out;
       out << filterTYPE;
       return out.str();
     }
+
     std::string timestampText(types::TimeT timestamp)
     {
       std::ostringstream out;
@@ -317,7 +361,7 @@ namespace MASSAI
       secondsl-= gregoriandiff;
       time_t seconds = secondsl;
       milliseconds%= 1000;
-      int millis= milliseconds;
+      int millis= static_cast<int>(milliseconds);
 
       struct tm* timestruct;
       timestruct = gmtime(&seconds);
@@ -346,6 +390,7 @@ namespace MASSAI
       }
       return out.str();
     }
+
     std::string eventDataText(const CORBA::Any& eventData)
     {
       std::ostringstream out;
@@ -423,6 +468,7 @@ namespace MASSAI
       }
       return out.str();
     }
+
     std::string bytestreamText(const types::bytestream& bytestream)
     {
       std::string data(reinterpret_cast<const char*>(bytestream.get_buffer()), bytestream.length());
@@ -443,26 +489,31 @@ std::ostream& operator<<(std::ostream& out, types::orientation orientation)
   out << orientationText(orientation);
   return out;
 }
+
 std::ostream& operator<<(std::ostream& out, types::action action)
 {
   out << actionText(action);
   return out;
 }
+
 std::ostream& operator<<(std::ostream& out, types::evtCategory evtCategory)
 {
   out << evtCategoryText(evtCategory);
   return out;
 }
+
 std::ostream& operator<<(std::ostream& out, types::evtType evtType)
 {
   out << evtTypeText(evtType);
   return out;
 }
+
 std::ostream& operator<<(std::ostream& out, types::evtMode evtMode)
 {
   out << evtModeText(evtMode);
   return out;
 }
+
 std::ostream& operator<<(std::ostream& out, types::evtFilterType evtFilterType)
 {
   out << evtFilterTypeText(evtFilterType);
@@ -477,6 +528,7 @@ std::ostream& operator<<(std::ostream& out, const types::akID& akID)
   out << "kioskName: ("       << akID.kioskName.in()        << ")\n";
   return out;
 }
+
 std::ostream& operator<<(std::ostream& out, const types::location& location)
 {
   out << "airportCode: (" << location.airportCode.in() << ")\n";
@@ -485,6 +537,7 @@ std::ostream& operator<<(std::ostream& out, const types::location& location)
   out << "address: ("     << location.address.in()     << ")\n";
   return out;
 }
+
 std::ostream& operator<<(std::ostream& out, const types::coordinate& coordinate)
 {
   out << "coordinate: (" << coordinate.direction << " ";
@@ -494,6 +547,7 @@ std::ostream& operator<<(std::ostream& out, const types::coordinate& coordinate)
   out << coordinate.hundreths          << ")";
   return out;
 }
+
 std::ostream& operator<<(std::ostream& out, const types::gps& gps)
 {
   out << "longitude: (" << gps.longitude << ")\n";
@@ -501,6 +555,7 @@ std::ostream& operator<<(std::ostream& out, const types::gps& gps)
   out << "altitude: ("  << gps.altitude  << " m)\n";
   return out;
 }
+
 std::ostream& operator<<(std::ostream& out, const types::EnvironmentLevel& environmentLevel)
 {
   out << "sessionTimeout: ("          << environmentLevel.sessionTimeout               << " ms)\n";
@@ -520,6 +575,7 @@ std::ostream& operator<<(std::ostream& out, const types::EnvironmentLevel& envir
   out << "applicationToken: ("        << environmentLevel.applicationToken.in()        << ")\n";
   return out;
 }
+
 std::ostream& operator<<(std::ostream& out, const types::EnvironmentComponent& environmentComponent)
 {
   out << "virtualComponentName: (" << environmentComponent.virtualComponentName.in() << ")\n";
@@ -528,17 +584,20 @@ std::ostream& operator<<(std::ostream& out, const types::EnvironmentComponent& e
   out << "linkedComponents: ("     << environmentComponent.linkedComponents          << ")\n";
   return out;
 }
+
 std::ostream& operator<<(std::ostream& out, const types::dataRecord& dataRecord)
 {
   out << "status: ("  << dataStatusText(dataRecord.status)  << ")\n";
   out << "message: (" << bytestreamText(dataRecord.message) << ")\n";
   return out;
 }
+
 std::ostream& operator<<(std::ostream& out, const types::msgDataType& msgDataType)
 {
   out << msgDataType.records;
   return out;
 }
+
 std::ostream& operator<<(std::ostream& out, const types::evtCodeFilterElem& evtCodeFilterElem)
 {
   out << "eventCode: ("   << evtCodeText(evtCodeFilterElem.eventCode)        << ")\n";
@@ -546,18 +605,21 @@ std::ostream& operator<<(std::ostream& out, const types::evtCodeFilterElem& evtC
   out << "eventFilter: (" << evtCodeFilterElem.eventFilter                   << ")\n";
   return out;
 }
+
 std::ostream& operator<<(std::ostream& out, const types::evtTypeFilterElem& evtTypeFilterElem)
 {
   out << "eventType: ("   << evtTypeFilterElem.eventType   << ")\n";
   out << "eventFilter: (" << evtTypeFilterElem.eventFilter << ")\n";
   return out;
 }
+
 std::ostream& operator<<(std::ostream& out, const types::evtComponentFilterElem& evtComponentFilterElem)
 {
   out << "componentName: (" << evtComponentFilterElem.componentName.in() << ")\n";
   out << "eventFilter: ("   << evtComponentFilterElem.eventFilter        << ")\n";
   return out;
 }
+
 std::ostream& operator<<(std::ostream& out, const types::evtDescr& evtDescr)
 {
   out << "eventCode: ("        << evtCodeText(evtDescr.eventCode)        << ")\n";
@@ -566,18 +628,21 @@ std::ostream& operator<<(std::ostream& out, const types::evtDescr& evtDescr)
   out << "eventDescription: (" << evtDescr.eventDescription.in()         << ")\n";
   return out;
 }
+
 std::ostream& operator<<(std::ostream& out, const types::evtDescrANY_CODE_TYPE& evtDescrANY_CODE_TYPE)
 {
   out << "eventDescr: ("    << evtDescrANY_CODE_TYPE.eventDescr    << ")\n";
   out << "componentList: (" << evtDescrANY_CODE_TYPE.componentList << ")\n";
   return out;
 }
+
 std::ostream& operator<<(std::ostream& out, const types::evtDescrCOMPONENT& evtDescrCOMPONENT)
 {
   out << "componentName: (" << evtDescrCOMPONENT.componentName.in() << ")\n";
   out << "eventDescr: ("    << evtDescrCOMPONENT.eventDescr         << ")\n";
   return out;
 }
+
 std::ostream& operator<<(std::ostream& out, const types::Event& event)
 {
   out << "timeStamp: ("       << timestampText(event.timeStamp)      << ")\n";
@@ -606,6 +671,7 @@ std::ostream& operator<<(std::ostream& out, const types::evtComponentFilterUnion
   out << ")\n";
   return out;
 }
+
 std::ostream& operator<<(std::ostream& out, const types::evtComponentFilterUnion::_filterTYPE_seq& filterTYPE)
 {
   out << "filterTYPE: (\n";
@@ -616,6 +682,7 @@ std::ostream& operator<<(std::ostream& out, const types::evtComponentFilterUnion
   out << ")\n";
   return out;
 }
+
 std::ostream& operator<<(std::ostream& out, const types::evtAcquireFilter::_filterCODE_seq& filterCODE)
 {
   out << "filterCODE: (\n";
@@ -626,6 +693,7 @@ std::ostream& operator<<(std::ostream& out, const types::evtAcquireFilter::_filt
   out << ")\n";
   return out;
 }
+
 std::ostream& operator<<(std::ostream& out, const types::evtAcquireFilter::_filterTYPE_seq& filterTYPE)
 {
   out << "filterTYPE: (\n";
@@ -636,6 +704,7 @@ std::ostream& operator<<(std::ostream& out, const types::evtAcquireFilter::_filt
   out << ")\n";
   return out;
 }
+
 std::ostream& operator<<(std::ostream& out, const types::evtDescrCOMPONENT::_eventDescr_seq& eventDescr)
 {
   out << "eventDescr: (\n";
@@ -646,6 +715,7 @@ std::ostream& operator<<(std::ostream& out, const types::evtDescrCOMPONENT::_eve
   out << ")\n";
   return out;
 }
+
 std::ostream& operator<<(std::ostream& out, const types::evtDescr::_eventTypes_seq& eventTypes)
 {
   out << "eventTypes: (\n";
@@ -656,6 +726,7 @@ std::ostream& operator<<(std::ostream& out, const types::evtDescr::_eventTypes_s
   out << ")\n";
   return out;
 }
+
 std::ostream& operator<<(std::ostream& out, const types::msgDataType::_records_seq& records)
 {
   out << "records: (\n";
@@ -666,6 +737,7 @@ std::ostream& operator<<(std::ostream& out, const types::msgDataType::_records_s
   out << ")\n";
   return out;
 }
+
 std::ostream& operator<<(std::ostream& out, const types::namelist& namelist)
 {
   out << "namelist: (\n";
@@ -676,6 +748,7 @@ std::ostream& operator<<(std::ostream& out, const types::namelist& namelist)
   out << ")\n";
   return out;
 }
+
 std::ostream& operator<<(std::ostream& out, const types::indexList& indexList)
 {
   out << "indexList: (\n";
@@ -686,6 +759,7 @@ std::ostream& operator<<(std::ostream& out, const types::indexList& indexList)
   out << ")\n";
   return out;
 }
+
 std::ostream& operator<<(std::ostream& out, const types::iorlist& iorlist)
 {
   out << "iorlist: (\n";
@@ -696,6 +770,7 @@ std::ostream& operator<<(std::ostream& out, const types::iorlist& iorlist)
   out << ")\n";
   return out;
 }
+
 std::ostream& operator<<(std::ostream& out, const types::EnvironmentComponents& environmentComponents)
 {
   out << "EnvironmentComponents: (\n";
@@ -706,6 +781,7 @@ std::ostream& operator<<(std::ostream& out, const types::EnvironmentComponents&
   out << ")\n";
   return out;
 }
+
 std::ostream& operator<<(std::ostream& out, const types::evtCodeFilter& evtCodeFilter)
 {
   out << "EvtCodeFilter: (\n";
@@ -716,6 +792,7 @@ std::ostream& operator<<(std::ostream& out, const types::evtCodeFilter& evtCodeF
   out << ")\n";
   return out;
 }
+
 std::ostream& operator<<(std::ostream& out, const types::evtTypeFilter& evtTypeFilter)
 {
   out << "EvtTypeFilter: (\n";
@@ -726,6 +803,7 @@ std::ostream& operator<<(std::ostream& out, const types::evtTypeFilter& evtTypeF
   out << ")\n";
   return out;
 }
+
 std::ostream& operator<<(std::ostream& out, const types::evtComponentFilter& evtComponentFilter)
 {
   out << "EvtComponentFilter: (\n";
@@ -752,6 +830,7 @@ std::ostream& operator<<(std::ostream& out, const types::evtCodeFilterUnion& evt
   out << ")\n";
   return out;
 }
+
 std::ostream& operator<<(std::ostream& out, const types::evtTypeFilterUnion& evtTypeFilterUnion)
 {
   out << "EvtTypeFilterUnion: (\n";
@@ -767,6 +846,7 @@ std::ostream& operator<<(std::ostream& out, const types::evtTypeFilterUnion& evt
   out << ")\n";
   return out;
 }
+
 std::ostream& operator<<(std::ostream& out, const types::evtComponentFilterUnion& evtComponentFilterUnion)
 {
   out << "EvtComponentFilterUnion: (\n";
@@ -787,6 +867,7 @@ std::ostream& operator<<(std::ostream& out, const types::evtComponentFilterUnion
   out << ")\n";
   return out;
 }
+
 std::ostream& operator<<(std::ostream& out, const types::evtFilter& evtFilter)
 {
   out << "EvtFilter: (\n";
@@ -812,6 +893,7 @@ std::ostream& operator<<(std::ostream& out, const types::evtFilter& evtFilter)
   out << ")\n";
   return out;
 }
+
 std::ostream& operator<<(std::ostream& out, const types::evtAcquireFilter& evtAcquireFilter)
 {
   out << "EvtAcquireFilter: (\n";
@@ -832,6 +914,7 @@ std::ostream& operator<<(std::ostream& out, const types::evtAcquireFilter& evtAc
   out << ")\n";
   return out;
 }
+
 std::ostream& operator<<(std::ostream& out, const types::evtDescription& evtDescription)
 {
   out << "EvtDescription: (\n";
@@ -852,6 +935,7 @@ std::ostream& operator<<(std::ostream& out, const types::evtDescription& evtDesc
   out << ")\n";
   return out;
 }
+
 std::ostream& operator<<(std::ostream& out, const types::bytestream& bytestream)
 {
   out << bytestreamText(bytestream);
-- 
2.41.0.windows.1

