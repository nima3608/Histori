From 2fdb29e7eb28a844990ebfc59dc0f38740746927 Mon Sep 17 00:00:00 2001
From: tstegema <tstegema@90b65887-3827-0410-9a23-83215b262276>
Date: Fri, 18 Jul 2014 17:03:49 +0000
Subject: [PATCH 0558/1077] MANTIS 0032748 extension SEL extension for Conrad
 USB 4 channel relay

massai_systools.lib
V1.0.0.19

- added DeviceInfoRegistry in mSysUSBDeviceW32.h/mSysUSBDeviceW32.cpp to access software keys of device
- added mSysFindComPort.h/msysFindComPortW32.cpp to find COM port by deviceId / instance id
- added TestSysCOMPort.exe to test mSysFindComPort


git-svn-id: svn://localhost/SelfServiceCommon/trunk@700 90b65887-3827-0410-9a23-83215b262276
---
 .../Interfaces/inc/systools/mSysFindComPort.h |  3 ++-
 .../cpp/Systools/src/TestSysCOMPort.cpp       |  6 ++---
 .../cpp/Systools/src/mSysFindComPortW32.cpp   | 23 +++++++++++--------
 3 files changed, 18 insertions(+), 14 deletions(-)

diff --git a/SelfServiceCommon/Interfaces/inc/systools/mSysFindComPort.h b/SelfServiceCommon/Interfaces/inc/systools/mSysFindComPort.h
index 69f83a68..9a9cfbab 100644
--- a/SelfServiceCommon/Interfaces/inc/systools/mSysFindComPort.h
+++ b/SelfServiceCommon/Interfaces/inc/systools/mSysFindComPort.h
@@ -12,9 +12,10 @@
 
 namespace mSysCOMPort
 {
+  // deviceType: example: "USB"
   // deviceId:   example: "VID_10C4&PID_EA60"
   // instanceId: example: "006311BE"
-  std::string getCOMPort(const std::string& deviceIdPrefix, const std::string& instanceIdPrefix,
+  std::string getCOMPort(const std::string& deviceTypePrefix, const std::string& deviceIdPrefix, const std::string& instanceIdPrefix,
     mSysUSBDevice::Search search, MASSAI::trace::TraceInterface& trc);
 }
 
diff --git a/SelfServiceCommon/Massai/cpp/Systools/src/TestSysCOMPort.cpp b/SelfServiceCommon/Massai/cpp/Systools/src/TestSysCOMPort.cpp
index 7736ec1e..958f8138 100644
--- a/SelfServiceCommon/Massai/cpp/Systools/src/TestSysCOMPort.cpp
+++ b/SelfServiceCommon/Massai/cpp/Systools/src/TestSysCOMPort.cpp
@@ -11,13 +11,13 @@ int main(int argc, char **argv)
   TraceLocal trc("TestSysCOMPort");
   try
   {
-    if(argc == 3)
+    if(argc == 4)
     {
-      std::cout << mSysCOMPort::getCOMPort(argv[1], argv[2], mSysUSBDevice::SEARCH_PRESENT, trc);
+      std::cout << mSysCOMPort::getCOMPort(argv[1], argv[2], argv[3], mSysUSBDevice::SEARCH_PRESENT, trc);
     }
     else
     {
-      std::cout << "Usage: TestSysCOMPort.exe <deviceIdPrefix> <instanceIdPrefix>" << std::endl;
+      std::cout << "Usage: TestSysCOMPort.exe <deviceTypePrefix> <deviceIdPrefix> <instanceIdPrefix>" << std::endl;
       std::cout << "  find COM port for device" << std::endl;
     }
   }
diff --git a/SelfServiceCommon/Massai/cpp/Systools/src/mSysFindComPortW32.cpp b/SelfServiceCommon/Massai/cpp/Systools/src/mSysFindComPortW32.cpp
index 5145b9a5..855f2eee 100644
--- a/SelfServiceCommon/Massai/cpp/Systools/src/mSysFindComPortW32.cpp
+++ b/SelfServiceCommon/Massai/cpp/Systools/src/mSysFindComPortW32.cpp
@@ -1,6 +1,6 @@
-// USB; HID helper functions
+// COM PORT helper functions
 
-#include "systools/mSysUSBHID.h"
+#include "systools/mSysFindComPort.h"
 #include "mSysErrorW32.h"
 #include "mSysUSBDeviceW32.h"
 #include "text/textTools.h"
@@ -23,8 +23,8 @@ namespace
   class FindCOMPort
   {
     public:
-      FindCOMPort(const std::string& deviceIdPrefix, const std::string& instanceIdPrefix,
-        Search search, TraceInterface& trc);
+      FindCOMPort(const std::string& deviceTypePrefix, const std::string& deviceIdPrefix,
+        const std::string& instanceIdPrefix, Search search, TraceInterface& trc);
 
       ~FindCOMPort();
 
@@ -33,6 +33,7 @@ namespace
     private:
       bool match(const std::string& deviceInstanceId);
 
+      std::string m_deviceTypePrefix;
       std::string m_deviceIdPrefix;
       std::string m_instanceIdPrefix;
       Search m_search;
@@ -42,8 +43,9 @@ namespace
 
 namespace
 {
-  FindCOMPort::FindCOMPort(const std::string& deviceIdPrefix, const std::string& instanceIdPrefix,
-    Search search, TraceInterface& trc):
+  FindCOMPort::FindCOMPort(const std::string& deviceTypePrefix, const std::string& deviceIdPrefix,
+    const std::string& instanceIdPrefix, Search search, TraceInterface& trc):
+    m_deviceTypePrefix(deviceTypePrefix),
     m_deviceIdPrefix(deviceIdPrefix),
     m_instanceIdPrefix(instanceIdPrefix),
     m_search(search),
@@ -87,10 +89,11 @@ namespace
     if(parts.size() > 2)
     {
       TextList::const_iterator it = parts.begin();
-      const std::string& hid = *(it++);
+      const std::string& type = *(it++);
       const std::string& deviceId = *(it++);
       const std::string& instanceId = *(it++);
-      if(MASSAI::text::startsWith(deviceId, m_deviceIdPrefix)
+      if(MASSAI::text::startsWith(type, m_deviceTypePrefix)
+        && MASSAI::text::startsWith(deviceId, m_deviceIdPrefix)
         && MASSAI::text::startsWith(instanceId, m_instanceIdPrefix))
       {
         result = true;
@@ -102,10 +105,10 @@ namespace
 
 namespace mSysCOMPort
 {
-  std::string getCOMPort(const std::string& deviceIdPrefix, const std::string& instanceIdPrefix,
+  std::string getCOMPort(const std::string& deviceTypePrefix, const std::string& deviceIdPrefix, const std::string& instanceIdPrefix,
     Search search, MASSAI::trace::TraceInterface& trc)
   {
-    FindCOMPort find(deviceIdPrefix, instanceIdPrefix, search, trc);
+    FindCOMPort find(deviceTypePrefix, deviceIdPrefix, instanceIdPrefix, search, trc);
     return find.getPort();
   }
 }
-- 
2.41.0.windows.1

