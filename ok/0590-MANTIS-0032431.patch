From 9ae2cf05221aca1914927a1dd094ca46c288e6af Mon Sep 17 00:00:00 2001
From: motten <motten@90b65887-3827-0410-9a23-83215b262276>
Date: Tue, 21 Oct 2014 15:14:57 +0000
Subject: [PATCH 0590/1076] MANTIS 0032431 new config parameter

git-svn-id: svn://localhost/SelfServiceCommon/trunk@741 90b65887-3827-0410-9a23-83215b262276
---
 .../Massai/cpp/mControl/inc/mControl_config.h | 22 +++++++------------
 .../cpp/mControl/src/mControl_config.cpp      | 16 ++++++--------
 2 files changed, 15 insertions(+), 23 deletions(-)

diff --git a/SelfServiceCommon/Massai/cpp/mControl/inc/mControl_config.h b/SelfServiceCommon/Massai/cpp/mControl/inc/mControl_config.h
index b0f477fc..93d15374 100644
--- a/SelfServiceCommon/Massai/cpp/mControl/inc/mControl_config.h
+++ b/SelfServiceCommon/Massai/cpp/mControl/inc/mControl_config.h
@@ -33,7 +33,7 @@
 
 namespace mControl
 {
-    class MControlConfig
+    class MControlProcessConfig
     {
     private:
         bool        m_serverMode;
@@ -42,15 +42,12 @@ namespace mControl
         bool        m_portableMCC;
         bool        m_isRunningAsUserShell;
 
-        HINSTANCE   m_hInstance;
-
-        HWND        m_hwnd;
         CEnvSubst   m_EnvS;
 
     public:
-        MControlConfig(HINSTANCE hInst);
-        MControlConfig();
-        ~MControlConfig();
+        MControlProcessConfig(HINSTANCE hInst);
+        MControlProcessConfig();
+        ~MControlProcessConfig();
 
 
 
@@ -62,8 +59,6 @@ namespace mControl
         bool noSNMPActive(){ return m_noSNMP; }
         bool noPortableMCCActive(){ return m_portableMCC; }
         bool isRunningAsUserShell(){ return m_isRunningAsUserShell; }
-        HINSTANCE& getInstance(){ return m_hInstance; }
-        HWND& getHwnd(){ return m_hwnd; }
         CEnvSubst& getEnvS(){ return m_EnvS; }
 
 
@@ -75,14 +70,13 @@ namespace mControl
         void setNoLog(bool flag){ m_noLog = flag; }
         void setNoSNMP(bool flag){ m_noSNMP = flag; }
         void setPortableMCC(bool flag){ m_portableMCC = flag; }
-        void setRunningAsUserShell(bool flag){ m_isRunningAsUserShell = flag; }
-        void setInstance(HINSTANCE hInst){ m_hInstance = hInst; }        
+        void setRunningAsUserShell(bool flag){ m_isRunningAsUserShell = flag; }     
     };
 
 	class MControlWindowConfig
     {
     private:
-        MControlConfig& m_config;
+        MControlProcessConfig& m_config;
 
         WNDCLASSEX      m_Wcex;
 
@@ -138,7 +132,7 @@ namespace mControl
 
 
         //Constructor
-        MControlWindowConfig(HINSTANCE hInst, MControlConfig& config);
+        MControlWindowConfig(HINSTANCE hInst, MControlProcessConfig& config);
 
 
 
@@ -154,7 +148,7 @@ namespace mControl
         HWND getHwndInfo2(){ return m_hWndInfo_2; }
         HINSTANCE getInstance(){ return m_Wcex.hInstance; }
         LPCTSTR getClassName() const;
-        MControlConfig& getConfig(){ return m_config; }
+        MControlProcessConfig& getConfig(){ return m_config; }
         WNDCLASSEX& getWndClassex(){ return m_Wcex; }
 
         /**
diff --git a/SelfServiceCommon/Massai/cpp/mControl/src/mControl_config.cpp b/SelfServiceCommon/Massai/cpp/mControl/src/mControl_config.cpp
index 4c94d62a..41c93ab4 100644
--- a/SelfServiceCommon/Massai/cpp/mControl/src/mControl_config.cpp
+++ b/SelfServiceCommon/Massai/cpp/mControl/src/mControl_config.cpp
@@ -9,11 +9,13 @@
 //  author:     Materna Information & Communications (MOt)
 //
 //---------------------------------------------------------------------------
+#include "..\inc\mControl_tools.h"
+
 #include <Windows.h>
 
 #include "..\inc\mControl_config.h"
 #include "..\inc\mControl_dialog.h"
-#include "..\inc\mControl_tools.h"
+
 
 #include <Commctrl.h>
 #include <iostream>
@@ -27,31 +29,27 @@ namespace mControl
 /*******************************************************************************************************
 * MConrolConfig implementation
 */
-    MControlConfig::MControlConfig(HINSTANCE hInst) : 
+    MControlProcessConfig::MControlProcessConfig(HINSTANCE hInst) : 
         m_serverMode(false),
         m_noLog(false),
         m_noSNMP(false),
         m_portableMCC(false),
         m_isRunningAsUserShell(false),
-        m_hInstance(hInst),
-        m_hwnd(0),
         m_EnvS()
     {
     }
 
-    MControlConfig::MControlConfig() : 
+    MControlProcessConfig::MControlProcessConfig() : 
         m_serverMode(false),
         m_noLog(false),
         m_noSNMP(false),
         m_portableMCC(false),
         m_isRunningAsUserShell(false),
-        m_hInstance(0),
-        m_hwnd(0),
         m_EnvS()
     {
     }
 
-    MControlConfig::~MControlConfig()
+    MControlProcessConfig::~MControlProcessConfig()
     {
     }
 
@@ -59,7 +57,7 @@ namespace mControl
 /*******************************************************************************************************
 * MConrolWindowConfig implementation
 */
-    MControlWindowConfig::MControlWindowConfig(HINSTANCE hInst, MControlConfig& config) :
+    MControlWindowConfig::MControlWindowConfig(HINSTANCE hInst, MControlProcessConfig& config) :
         m_config(config),
         m_Wcex(),
         m_title(szAppName),
-- 
2.41.0.windows.1

