From 1dae57691dfe72286be7ff53429385888a9c0d50 Mon Sep 17 00:00:00 2001
From: tstegema <tstegema@90b65887-3827-0410-9a23-83215b262276>
Date: Mon, 3 Jan 2011 15:05:21 +0000
Subject: [PATCH 0078/1076] TrcServ: writeTraceCooked added

git-svn-id: svn://localhost/SelfServiceCommon/trunk@99 90b65887-3827-0410-9a23-83215b262276
---
 .../Interfaces/inc/trc/TraceClt.h             |  41 +-
 .../Interfaces/inc/trc/TrcHdlClt.h            |  41 +-
 .../Massai/cpp/Tools/src/TrcStr.cpp           |  13 +-
 .../Services/cpp/TrcServ/inc/CltData.h        |   4 +
 .../Services/cpp/TrcServ/inc/TraceClt.h       | 343 ----------------
 .../Services/cpp/TrcServ/inc/TrcClt.h         |   2 +
 .../Services/cpp/TrcServ/inc/TrcData.h        |   1 +
 .../Services/cpp/TrcServ/inc/TrcExp.h         |  41 +-
 .../Services/cpp/TrcServ/inc/TrcHdlClt.h      | 367 ------------------
 .../Services/cpp/TrcServ/inc/TrcHdlExp.h      |  42 +-
 .../Services/cpp/TrcServ/inc/TrcPrtcl.h       |   3 +
 .../Services/cpp/TrcServ/inc/TrcServ_def.h    |   8 +-
 .../Services/cpp/TrcServ/makefile.mak         |  22 +-
 .../Services/cpp/TrcServ/src/CltData.cpp      | 176 +++++++++
 .../Services/cpp/TrcServ/src/Tracedll.cpp     |  87 +++--
 .../Services/cpp/TrcServ/src/TrcClt.cpp       |  61 +++
 .../Services/cpp/TrcServ/src/TrcHdlClt.cpp    |  88 +++--
 .../Services/cpp/TrcServ/src/TrcPrtcl.cpp     | 114 ++++++
 .../Services/cpp/TrcServ/src/TrcServ.cpp      |   7 +
 .../Services/cpp/TrcServ/src/tracetest.cpp    |   7 +-
 20 files changed, 625 insertions(+), 843 deletions(-)
 delete mode 100644 SelfServiceCommon/Services/cpp/TrcServ/inc/TraceClt.h
 delete mode 100644 SelfServiceCommon/Services/cpp/TrcServ/inc/TrcHdlClt.h

diff --git a/SelfServiceCommon/Interfaces/inc/trc/TraceClt.h b/SelfServiceCommon/Interfaces/inc/trc/TraceClt.h
index 2a87ac97..d516a79a 100644
--- a/SelfServiceCommon/Interfaces/inc/trc/TraceClt.h
+++ b/SelfServiceCommon/Interfaces/inc/trc/TraceClt.h
@@ -105,7 +105,7 @@ void _stdcall   closeTrace();
 
 ---------------------------------------------------------------------------
 */
-long _stdcall   writeTraceText
+void _stdcall   writeTraceText
                 (
                    long lTraceLevel,
                    CX_CONSTSTR pszFile,
@@ -122,7 +122,7 @@ long _stdcall   writeTraceText
    deprecated (wrong calling convention) use wrtTrace
 ---------------------------------------------------------------------------
 */
-long _stdcall   writeTrace(
+void _stdcall   writeTrace(
                    long lTraceLevel,
                    CX_CONSTSTR pszFile,
                    short  sLine,
@@ -135,7 +135,7 @@ long _stdcall   writeTrace(
    resulting string must be smaller than 4096 byte
 ---------------------------------------------------------------------------
 */
-long _cdecl   wrtTrace(
+void _cdecl   wrtTrace(
                    long lTraceLevel,
                    CX_CONSTSTR pszFile,
                    short  sLine,
@@ -147,7 +147,7 @@ long _cdecl   wrtTrace(
    Trace Dump
 ---------------------------------------------------------------------------
 */
-long _stdcall   dumpTrace
+void _stdcall   dumpTrace
                 (
                    long lTraceLevel,
                    CX_CONSTSTR pszFile,
@@ -163,7 +163,7 @@ long _stdcall   dumpTrace
 
 ---------------------------------------------------------------------------
 */
-long _stdcall startNewTraceFile(long lTraceLevel);
+void _stdcall startNewTraceFile(long lTraceLevel);
 
 
 /*
@@ -172,7 +172,7 @@ long _stdcall startNewTraceFile(long lTraceLevel);
 
 ---------------------------------------------------------------------------
 */
-long _stdcall   writeTraceTextForTopic
+void _stdcall   writeTraceTextForTopic
                 (
                    CX_CONSTSTR pszTopic,
                    CX_CONSTSTR pszFile,
@@ -188,7 +188,7 @@ long _stdcall   writeTraceTextForTopic
    deprecated (wrong calling convention) use wrtTraceForTopic
 ---------------------------------------------------------------------------
 */
-long _stdcall   writeTraceForTopic(
+void _stdcall   writeTraceForTopic(
                    CX_CONSTSTR pszTopic,
                    CX_CONSTSTR pszFile,
                    short  sLine,
@@ -201,7 +201,7 @@ long _stdcall   writeTraceForTopic(
    resulting string must be smaller than 4096 byte
 ---------------------------------------------------------------------------
 */
-long _cdecl    wrtTraceForTopic(
+void _cdecl    wrtTraceForTopic(
                    CX_CONSTSTR pszTopic,
                    CX_CONSTSTR pszFile,
                    short  sLine,
@@ -213,7 +213,7 @@ long _cdecl    wrtTraceForTopic(
    Trace Dump
 ---------------------------------------------------------------------------
 */
-long _stdcall   dumpTraceForTopic
+void _stdcall   dumpTraceForTopic
                 (
                    CX_CONSTSTR pszTopic,
                    CX_CONSTSTR pszFile,
@@ -229,7 +229,7 @@ long _stdcall   dumpTraceForTopic
 
 ---------------------------------------------------------------------------
 */
-long _stdcall startNewTraceFileForTopic(CX_CONSTSTR pszTopic);
+void _stdcall startNewTraceFileForTopic(CX_CONSTSTR pszTopic);
 
 
 /*
@@ -237,7 +237,7 @@ long _stdcall startNewTraceFileForTopic(CX_CONSTSTR pszTopic);
    Trace encypted
 ---------------------------------------------------------------------------
 */
-long _stdcall   cryptTrace
+void _stdcall   cryptTrace
                 (
                    long lTraceLevel,
                    CX_CONSTSTR pszFile,
@@ -253,7 +253,7 @@ long _stdcall   cryptTrace
    Trace encypted
 ---------------------------------------------------------------------------
 */
-long _stdcall   cryptTraceForTopic
+void _stdcall   cryptTraceForTopic
                 (
                    CX_CONSTSTR pszTopic,
                    CX_CONSTSTR pszFile,
@@ -269,7 +269,7 @@ long _stdcall   cryptTraceForTopic
    move file
 ---------------------------------------------------------------------------
 */
-long _stdcall   moveTrace
+void _stdcall   moveTrace
                 (
                    CX_CONSTSTR pszPath
                 );
@@ -279,7 +279,7 @@ long _stdcall   moveTrace
    Trace credit card track
 ---------------------------------------------------------------------------
 */
-long _stdcall   traceTrack
+void _stdcall   traceTrack
                 (
                    long lTraceLevel,
                    CX_CONSTSTR pszFile,
@@ -295,7 +295,7 @@ long _stdcall   traceTrack
    Trace credit card track
 ---------------------------------------------------------------------------
 */
-long _stdcall   traceTrackForTopic
+void _stdcall   traceTrackForTopic
                 (
                    CX_CONSTSTR pszTopic,
                    CX_CONSTSTR pszFile,
@@ -306,6 +306,17 @@ long _stdcall   traceTrackForTopic
                 );
 
 
+/*
+---------------------------------------------------------------------------
+   write prepared trace (do not format, do not filter)
+---------------------------------------------------------------------------
+*/
+void _stdcall   writeTraceCooked
+                (
+                   CX_CONSTSTR pszText
+                );
+
+
 #ifdef __cplusplus
 }
 #endif
diff --git a/SelfServiceCommon/Interfaces/inc/trc/TrcHdlClt.h b/SelfServiceCommon/Interfaces/inc/trc/TrcHdlClt.h
index 14fd5797..ee7ce232 100644
--- a/SelfServiceCommon/Interfaces/inc/trc/TrcHdlClt.h
+++ b/SelfServiceCommon/Interfaces/inc/trc/TrcHdlClt.h
@@ -111,7 +111,7 @@ void _stdcall   closeTrace(trcHandle hdl);
 
 ---------------------------------------------------------------------------
 */
-long _stdcall   writeTraceText
+void _stdcall   writeTraceText
                 (
                    trcHandle hdl,
                    long lTraceLevel,
@@ -129,7 +129,7 @@ long _stdcall   writeTraceText
    deprecated (wrong calling convention) use wrtTrace
 ---------------------------------------------------------------------------
 */
-long _stdcall   writeTrace(
+void _stdcall   writeTrace(
                    trcHandle hdl,
                    long lTraceLevel,
                    CX_CONSTSTR pszFile,
@@ -143,7 +143,7 @@ long _stdcall   writeTrace(
    resulting string must be smaller than 4096 byte
 ---------------------------------------------------------------------------
 */
-long _cdecl   wrtTrace(
+void _cdecl   wrtTrace(
                    trcHandle hdl,
                    long lTraceLevel,
                    CX_CONSTSTR pszFile,
@@ -156,7 +156,7 @@ long _cdecl   wrtTrace(
    Trace Dump
 ---------------------------------------------------------------------------
 */
-long _stdcall   dumpTrace
+void _stdcall   dumpTrace
                 (
                    trcHandle hdl,
                    long lTraceLevel,
@@ -173,7 +173,7 @@ long _stdcall   dumpTrace
 
 ---------------------------------------------------------------------------
 */
-long _stdcall startNewTraceFile(trcHandle hdl, long lTraceLevel);
+void _stdcall startNewTraceFile(trcHandle hdl, long lTraceLevel);
 
 
 /*
@@ -182,7 +182,7 @@ long _stdcall startNewTraceFile(trcHandle hdl, long lTraceLevel);
 
 ---------------------------------------------------------------------------
 */
-long _stdcall   writeTraceTextForTopic
+void _stdcall   writeTraceTextForTopic
                 (
                    trcHandle hdl,
                    CX_CONSTSTR pszTopic,
@@ -200,7 +200,7 @@ long _stdcall   writeTraceTextForTopic
    deprecated (wrong calling convention) use wrtTrace
 ---------------------------------------------------------------------------
 */
-long _stdcall   writeTraceForTopic(
+void _stdcall   writeTraceForTopic(
                    trcHandle hdl,
                    CX_CONSTSTR pszTopic,
                    CX_CONSTSTR pszFile,
@@ -214,7 +214,7 @@ long _stdcall   writeTraceForTopic(
    resulting string must be smaller than 4096 byte
 ---------------------------------------------------------------------------
 */
-long _cdecl   wrtTraceForTopic(
+void _cdecl   wrtTraceForTopic(
                    trcHandle hdl,
                    CX_CONSTSTR pszTopic,
                    CX_CONSTSTR pszFile,
@@ -228,7 +228,7 @@ long _cdecl   wrtTraceForTopic(
    Trace Dump
 ---------------------------------------------------------------------------
 */
-long _stdcall   dumpTraceForTopic
+void _stdcall   dumpTraceForTopic
                 (
                    trcHandle hdl,
                    CX_CONSTSTR pszTopic,
@@ -245,7 +245,7 @@ long _stdcall   dumpTraceForTopic
 
 ---------------------------------------------------------------------------
 */
-long _stdcall startNewTraceFileForTopic(trcHandle hdl, CX_CONSTSTR pszTopic);
+void _stdcall startNewTraceFileForTopic(trcHandle hdl, CX_CONSTSTR pszTopic);
 
 
 
@@ -254,7 +254,7 @@ long _stdcall startNewTraceFileForTopic(trcHandle hdl, CX_CONSTSTR pszTopic);
    Trace encypted
 ---------------------------------------------------------------------------
 */
-long _stdcall   cryptTrace
+void _stdcall   cryptTrace
                 (
                    trcHandle hdl,
                    long lTraceLevel,
@@ -271,7 +271,7 @@ long _stdcall   cryptTrace
    Trace encypted
 ---------------------------------------------------------------------------
 */
-long _stdcall   cryptTraceForTopic
+void _stdcall   cryptTraceForTopic
                 (
                    trcHandle hdl,
                    CX_CONSTSTR pszTopic,
@@ -289,7 +289,7 @@ long _stdcall   cryptTraceForTopic
 ---------------------------------------------------------------------------
 */
 
-long _stdcall   moveTrace
+void _stdcall   moveTrace
                 (
                    trcHandle hdl,
                    CX_CONSTSTR pszPath
@@ -303,7 +303,7 @@ long _stdcall   moveTrace
    Trace credit card track
 ---------------------------------------------------------------------------
 */
-long _stdcall   traceTrack
+void _stdcall   traceTrack
                 (
                    trcHandle hdl,
                    long lTraceLevel,
@@ -320,7 +320,7 @@ long _stdcall   traceTrack
    Trace credit card track
 ---------------------------------------------------------------------------
 */
-long _stdcall   traceTrackForTopic
+void _stdcall   traceTrackForTopic
                 (
                    trcHandle hdl,
                    CX_CONSTSTR pszTopic,
@@ -332,6 +332,17 @@ long _stdcall   traceTrackForTopic
                 );
 
 
+/*
+---------------------------------------------------------------------------
+   write prepared trace (do not format, do not filter)
+---------------------------------------------------------------------------
+*/
+void _stdcall   writeTraceCooked
+                (
+                   trcHandle hdl,
+                   CX_CONSTSTR pszText
+                );
+
 #ifdef __cplusplus
 }
 #endif
diff --git a/SelfServiceCommon/Massai/cpp/Tools/src/TrcStr.cpp b/SelfServiceCommon/Massai/cpp/Tools/src/TrcStr.cpp
index bb85cd5b..1659313b 100644
--- a/SelfServiceCommon/Massai/cpp/Tools/src/TrcStr.cpp
+++ b/SelfServiceCommon/Massai/cpp/Tools/src/TrcStr.cpp
@@ -36,7 +36,7 @@ using namespace std;
 */
 void trcstream::writeTrace()
 {
-    long result = 0;
+    //long result = 0;
     long lSize;
     if (!iDump)
     {
@@ -46,7 +46,7 @@ void trcstream::writeTrace()
         {
           if (iTopic)
           {
-            result= writeTraceTextForTopic
+            /*result= */writeTraceTextForTopic
                         (
                           m_handle,
                           m_topic.c_str(), m_file.c_str(), sLine,
@@ -55,7 +55,7 @@ void trcstream::writeTrace()
           }
           else
           {
-            result= writeTraceText
+            /*result= */writeTraceText
                         (
                           m_handle,
                           lTraceLevel, m_file.c_str(), sLine,
@@ -71,14 +71,14 @@ void trcstream::writeTrace()
         if (lSize > 0)
         {
           if (iTopic)
-            result= dumpTraceForTopic
+            /*result= */dumpTraceForTopic
                         (
                           m_handle,
                           m_topic.c_str(), m_file.c_str(), sLine,
                           m_function.c_str(), lSize, str().c_str()
                         );
           else
-            result= dumpTrace
+            /*result= */dumpTrace
                         (
                           m_handle,
                           lTraceLevel, m_file.c_str(), sLine,
@@ -91,7 +91,8 @@ void trcstream::writeTrace()
 
 long trcstream::move( const string& path )
 {
-    return moveTrace( m_handle, path.c_str() );
+    /*return*/ moveTrace( m_handle, path.c_str() );
+    return 0;
 }
 
 /**
diff --git a/SelfServiceCommon/Services/cpp/TrcServ/inc/CltData.h b/SelfServiceCommon/Services/cpp/TrcServ/inc/CltData.h
index 49a990e6..706218ab 100644
--- a/SelfServiceCommon/Services/cpp/TrcServ/inc/CltData.h
+++ b/SelfServiceCommon/Services/cpp/TrcServ/inc/CltData.h
@@ -59,6 +59,9 @@ class BasicTraceFile
               const char* pszText,
               const char* pszModule,
               const char* pszTopic= 0)=0;
+    virtual void Cooked(const char* pszApplication, long lInstance, long lFileInstance,
+              const char* pszText,
+              const char* pszModule)=0;
     virtual void Dump(long lDay, long lMonth, long lYear, long lHours, long lMinutes, long lSeconds, long lHundredths,
               const char* pszApplication, long lInstance, long lFileInstance,
               const char* pszFile, long lLine, const char* pszFunction,
@@ -137,6 +140,7 @@ class ApplicationData
     void MoveFile01(long ClientApp, long lInstance, aMap& Data, const char* pszPath);
     void Track01(long ClientApp, long lInstance, aMap& Data);
     void Track02(long ClientApp, long lInstance, aMap& Data);
+    void Cooked01(long ClientApp, long lInstance, aMap& Data);
     void writeTrace(long lTraceLevel,
                     const char* pszFile, short sLine, const char* pszFunction,
                     const char* pszText, const char* pszModule, const char* pApplication, long lInstance);
diff --git a/SelfServiceCommon/Services/cpp/TrcServ/inc/TraceClt.h b/SelfServiceCommon/Services/cpp/TrcServ/inc/TraceClt.h
deleted file mode 100644
index b9aab822..00000000
--- a/SelfServiceCommon/Services/cpp/TrcServ/inc/TraceClt.h
+++ /dev/null
@@ -1,343 +0,0 @@
-
-/****************************************************************************
-
- FILE:      TraceClt.h
-
- PURPOSE:   Interface definition for Traceing
-
- DATE:      20.09.99
-
- AUTHOR:    Dr. Materna GmbH   (TS)
-
-****************************************************************************/
-
-#ifndef TRACECLT_H
-#define TRACECLT_H
-#if defined(SHOW_INCLUDE_FILES)
-#pragma message("including: " __FILE__)
-#endif
-
-
-/***************************************************************************
-
-  Defines
-
-***************************************************************************/
-
-
-
-
-#ifdef __cplusplus
-#define CX_CONSTSTR const char *
-extern "C"
-{
-#else
-#define CX_CONSTSTR char *
-#endif
-
-/*
-   Returncodes
-*/
-#define TRC_OK                    0
-#define TRC_ERROR                 1
-
-/*
-  TraceLevel
-
-*/
-#define      No                   0
-#define      MajorError           1
-#define      MinorError           2
-#define      MajorWarning         3
-#define      MinorWarning         4
-#define      BasicRuntime         5
-#define      BasicProcess         6
-#define      SecondaryRuntime     7
-#define      SecondaryFrequent    8
-#define      All                  9
-
-
-#define TOPIC_HERE              __FILE__,__LINE__,__FUNCTION__
-#define MajorError_HERE         1,__FILE__,__LINE__,__FUNCTION__
-#define MinorError_HERE         2,__FILE__,__LINE__,__FUNCTION__
-#define MajorWarning_HERE       3,__FILE__,__LINE__,__FUNCTION__
-#define MinorWarning_HERE       4,__FILE__,__LINE__,__FUNCTION__
-#define BasicRuntime_HERE       5,__FILE__,__LINE__,__FUNCTION__
-#define BasicProcess_HERE       6,__FILE__,__LINE__,__FUNCTION__
-#define SecondaryRuntime_HERE   7,__FILE__,__LINE__,__FUNCTION__
-#define SecondaryFrequent_HERE  8,__FILE__,__LINE__,__FUNCTION__
-
-
-/*
-   For pszTopic do not use:
-
-        "AppendTrace"
-        "Extended"
-        "Generations"
-        "MaxFileSize"
-        "MaxLineSize"
-        "TraceFile"
-        "TraceLevel"
-*/
-
-
-
-/***************************************************************************
-
-  Exported Functions
-
-***************************************************************************/
-
-
-/*
----------------------------------------------------------------------------
-   init Trace
-
----------------------------------------------------------------------------
-*/
-void _stdcall   openTrace
-                (
-                   CX_CONSTSTR pszApplication
-                );
-
-
-/*
----------------------------------------------------------------------------
-   init Trace
-
-   for processes with short life time
----------------------------------------------------------------------------
-*/
-void _stdcall   openTraceSLT
-                (
-                   CX_CONSTSTR pszApplication
-                );
-
-
-
-
-/*
----------------------------------------------------------------------------
-   cleanup Trace
-
----------------------------------------------------------------------------
-*/
-void _stdcall   closeTrace();
-
-/*
----------------------------------------------------------------------------
-   Trace Text
-
----------------------------------------------------------------------------
-*/
-long _stdcall   writeTraceText
-                (
-                   long lTraceLevel,
-                   CX_CONSTSTR pszFile,
-                   short  sLine,
-                   CX_CONSTSTR pszFunction,
-                   CX_CONSTSTR pszText
-                );
-
-
-/*
----------------------------------------------------------------------------
-   Trace Text
-   resulting string must be smaller than 4096 byte
-   deprecated (wrong calling convention) use wrtTrace
----------------------------------------------------------------------------
-*/
-long _stdcall   writeTrace(
-                   long lTraceLevel,
-                   CX_CONSTSTR pszFile,
-                   short  sLine,
-                   CX_CONSTSTR pszFunction,
-                   CX_CONSTSTR pszFormat,
-                   ...);
-/*
----------------------------------------------------------------------------
-   Trace Text
-   resulting string must be smaller than 4096 byte
----------------------------------------------------------------------------
-*/
-long _cdecl   wrtTrace(
-                   long lTraceLevel,
-                   CX_CONSTSTR pszFile,
-                   short  sLine,
-                   CX_CONSTSTR pszFunction,
-                   CX_CONSTSTR pszFormat,
-                   ...);
-/*
----------------------------------------------------------------------------
-   Trace Dump
----------------------------------------------------------------------------
-*/
-long _stdcall   dumpTrace
-                (
-                   long lTraceLevel,
-                   CX_CONSTSTR pszFile,
-                   short  sLine,
-                   CX_CONSTSTR pszFunction,
-                   long lDumpSize,
-                   CX_CONSTSTR pDump
-                );
-
-/*
----------------------------------------------------------------------------
-  Start new files
-
----------------------------------------------------------------------------
-*/
-long _stdcall startNewTraceFile(long lTraceLevel);
-
-
-/*
----------------------------------------------------------------------------
-   Trace Text
-
----------------------------------------------------------------------------
-*/
-long _stdcall   writeTraceTextForTopic
-                (
-                   CX_CONSTSTR pszTopic,
-                   CX_CONSTSTR pszFile,
-                   short  sLine,
-                   CX_CONSTSTR pszFunction,
-                   CX_CONSTSTR pszText
-                );
-
-/*
----------------------------------------------------------------------------
-   Trace Text
-   resulting string must be smaller than 4096 byte
-   deprecated (wrong calling convention) use wrtTraceForTopic
----------------------------------------------------------------------------
-*/
-long _stdcall   writeTraceForTopic(
-                   CX_CONSTSTR pszTopic,
-                   CX_CONSTSTR pszFile,
-                   short  sLine,
-                   CX_CONSTSTR pszFunction,
-                   CX_CONSTSTR pszFormat,
-                   ...);
-/*
----------------------------------------------------------------------------
-   Trace Text
-   resulting string must be smaller than 4096 byte
----------------------------------------------------------------------------
-*/
-long _cdecl    wrtTraceForTopic(
-                   CX_CONSTSTR pszTopic,
-                   CX_CONSTSTR pszFile,
-                   short  sLine,
-                   CX_CONSTSTR pszFunction,
-                   CX_CONSTSTR pszFormat,
-                   ...);
-/*
----------------------------------------------------------------------------
-   Trace Dump
----------------------------------------------------------------------------
-*/
-long _stdcall   dumpTraceForTopic
-                (
-                   CX_CONSTSTR pszTopic,
-                   CX_CONSTSTR pszFile,
-                   short  sLine,
-                   CX_CONSTSTR pszFunction,
-                   long lDumpSize,
-                   CX_CONSTSTR pDump
-                );
-
-/*
----------------------------------------------------------------------------
-  Start new files
-
----------------------------------------------------------------------------
-*/
-long _stdcall startNewTraceFileForTopic(CX_CONSTSTR pszTopic);
-
-
-/*
----------------------------------------------------------------------------
-   Trace encypted
----------------------------------------------------------------------------
-*/
-long _stdcall   cryptTrace
-                (
-                   long lTraceLevel,
-                   CX_CONSTSTR pszFile,
-                   short  sLine,
-                   CX_CONSTSTR pszFunction,
-                   long lDumpSize,
-                   CX_CONSTSTR pDump
-                );
-
-
-/*
----------------------------------------------------------------------------
-   Trace encypted
----------------------------------------------------------------------------
-*/
-long _stdcall   cryptTraceForTopic
-                (
-                   CX_CONSTSTR pszTopic,
-                   CX_CONSTSTR pszFile,
-                   short  sLine,
-                   CX_CONSTSTR pszFunction,
-                   long lDumpSize,
-                   CX_CONSTSTR pDump
-                );
-
-
-/*
----------------------------------------------------------------------------
-   move file
----------------------------------------------------------------------------
-*/
-long _stdcall   moveTrace
-                (
-                   CX_CONSTSTR pszPath
-                );
-
-/*
----------------------------------------------------------------------------
-   Trace credit card track
----------------------------------------------------------------------------
-*/
-long _stdcall   traceTrack
-                (
-                   long lTraceLevel,
-                   CX_CONSTSTR pszFile,
-                   short  sLine,
-                   CX_CONSTSTR pszFunction,
-                   long trackid,
-                   CX_CONSTSTR pszTrack
-                );
-
-
-/*
----------------------------------------------------------------------------
-   Trace credit card track
----------------------------------------------------------------------------
-*/
-long _stdcall   traceTrackForTopic
-                (
-                   CX_CONSTSTR pszTopic,
-                   CX_CONSTSTR pszFile,
-                   short  sLine,
-                   CX_CONSTSTR pszFunction,
-                   long trackid,
-                   CX_CONSTSTR pszTrack
-                );
-
-
-#ifdef __cplusplus
-}
-#endif
-
-
-#endif
-/*************************************************************************************************
-      End Of File  TraceClt.h
-************************************************************************************************/
-
diff --git a/SelfServiceCommon/Services/cpp/TrcServ/inc/TrcClt.h b/SelfServiceCommon/Services/cpp/TrcServ/inc/TrcClt.h
index b0f02e5f..3ad44b8b 100644
--- a/SelfServiceCommon/Services/cpp/TrcServ/inc/TrcClt.h
+++ b/SelfServiceCommon/Services/cpp/TrcServ/inc/TrcClt.h
@@ -121,6 +121,8 @@ class TraceClient
 
     long traceTrack(long lTraceLevel, const char *pszFile, short  sLine, const char *pszFunction, long trackid, const char *pszTrack);
     long traceTrack(const char *pszTopic, const char *pszFile, short  sLine, const char *pszFunction, long trackid, const char *pszTrack);
+
+    long traceCooked(const char* pszText);
 };
 
 #endif
diff --git a/SelfServiceCommon/Services/cpp/TrcServ/inc/TrcData.h b/SelfServiceCommon/Services/cpp/TrcServ/inc/TrcData.h
index 935d55aa..1e78e9b5 100644
--- a/SelfServiceCommon/Services/cpp/TrcServ/inc/TrcData.h
+++ b/SelfServiceCommon/Services/cpp/TrcServ/inc/TrcData.h
@@ -47,6 +47,7 @@ enum DataName
   DN_LTYPE,
   DN_SPATH,
   DN_LTRACKID,
+  DN_SCOOKED,
 };
 
 
diff --git a/SelfServiceCommon/Services/cpp/TrcServ/inc/TrcExp.h b/SelfServiceCommon/Services/cpp/TrcServ/inc/TrcExp.h
index 13991922..7d708eed 100644
--- a/SelfServiceCommon/Services/cpp/TrcServ/inc/TrcExp.h
+++ b/SelfServiceCommon/Services/cpp/TrcServ/inc/TrcExp.h
@@ -107,7 +107,7 @@ DllExport void _stdcall   closeTrace
 
 ---------------------------------------------------------------------------
 */
-DllExport long _stdcall   writeTraceText
+DllExport void _stdcall   writeTraceText
                 (
                    long lTraceLevel,
                    CX_CONSTSTR pszFile,
@@ -123,7 +123,7 @@ DllExport long _stdcall   writeTraceText
    resulting string must be smaller than 4096 byte
 ---------------------------------------------------------------------------
 */
-DllExport long _stdcall   writeTrace(
+DllExport void _stdcall   writeTrace(
                    long lTraceLevel,
                    CX_CONSTSTR pszFile,
                    short  sLine,
@@ -136,7 +136,7 @@ DllExport long _stdcall   writeTrace(
    resulting string must be smaller than 4096 byte
 ---------------------------------------------------------------------------
 */
-DllExport long _cdecl   wrtTrace(
+DllExport void _cdecl   wrtTrace(
                    long lTraceLevel,
                    CX_CONSTSTR pszFile,
                    short  sLine,
@@ -148,7 +148,7 @@ DllExport long _cdecl   wrtTrace(
    Trace Dump
 ---------------------------------------------------------------------------
 */
-DllExport long _stdcall   dumpTrace
+DllExport void _stdcall   dumpTrace
                 (
                    long lTraceLevel,
                    CX_CONSTSTR pszFile,
@@ -164,7 +164,7 @@ DllExport long _stdcall   dumpTrace
 
 ---------------------------------------------------------------------------
 */
-DllExport long _stdcall   startNewTraceFile(long lTraceLevel);
+DllExport void _stdcall   startNewTraceFile(long lTraceLevel);
 
 /*
 ---------------------------------------------------------------------------
@@ -172,7 +172,7 @@ DllExport long _stdcall   startNewTraceFile(long lTraceLevel);
 
 ---------------------------------------------------------------------------
 */
-DllExport long _stdcall   writeTraceTextForTopic
+DllExport void _stdcall   writeTraceTextForTopic
                 (
                    CX_CONSTSTR pszTopic,
                    CX_CONSTSTR pszFile,
@@ -188,7 +188,7 @@ DllExport long _stdcall   writeTraceTextForTopic
    resulting string must be smaller than 4096 byte
 ---------------------------------------------------------------------------
 */
-DllExport long _stdcall   writeTraceForTopic(
+DllExport void _stdcall   writeTraceForTopic(
                    CX_CONSTSTR pszTopic,
                    CX_CONSTSTR pszFile,
                    short  sLine,
@@ -201,7 +201,7 @@ DllExport long _stdcall   writeTraceForTopic(
    resulting string must be smaller than 4096 byte
 ---------------------------------------------------------------------------
 */
-DllExport long _cdecl   wrtTraceForTopic(
+DllExport void _cdecl   wrtTraceForTopic(
                    CX_CONSTSTR pszTopic,
                    CX_CONSTSTR pszFile,
                    short  sLine,
@@ -213,7 +213,7 @@ DllExport long _cdecl   wrtTraceForTopic(
    Trace Dump
 ---------------------------------------------------------------------------
 */
-DllExport long _stdcall dumpTraceForTopic
+DllExport void _stdcall dumpTraceForTopic
                 (
                    CX_CONSTSTR pszTopic,
                    CX_CONSTSTR pszFile,
@@ -229,7 +229,7 @@ DllExport long _stdcall dumpTraceForTopic
 
 ---------------------------------------------------------------------------
 */
-DllExport long _stdcall startNewTraceFileForTopic(CX_CONSTSTR pszTopic);
+DllExport void _stdcall startNewTraceFileForTopic(CX_CONSTSTR pszTopic);
 
 
 /*
@@ -237,7 +237,7 @@ DllExport long _stdcall startNewTraceFileForTopic(CX_CONSTSTR pszTopic);
    Trace encypted
 ---------------------------------------------------------------------------
 */
-long _stdcall   cryptTrace
+DllExport void _stdcall   cryptTrace
                 (
                    long lTraceLevel,
                    CX_CONSTSTR pszFile,
@@ -253,7 +253,7 @@ long _stdcall   cryptTrace
    Trace encypted
 ---------------------------------------------------------------------------
 */
-long _stdcall   cryptTraceForTopic
+DllExport void _stdcall   cryptTraceForTopic
                 (
                    CX_CONSTSTR pszTopic,
                    CX_CONSTSTR pszFile,
@@ -270,7 +270,7 @@ long _stdcall   cryptTraceForTopic
 ---------------------------------------------------------------------------
 */
 
-long _stdcall   moveTrace
+DllExport void _stdcall   moveTrace
                 (
                    CX_CONSTSTR pszPath
                 );
@@ -281,7 +281,7 @@ long _stdcall   moveTrace
    Trace credit card track
 ---------------------------------------------------------------------------
 */
-long _stdcall   traceTrack
+DllExport void _stdcall   traceTrack
                 (
                    long lTraceLevel,
                    CX_CONSTSTR pszFile,
@@ -297,7 +297,7 @@ long _stdcall   traceTrack
    Trace credit card track
 ---------------------------------------------------------------------------
 */
-long _stdcall   traceTrackForTopic
+DllExport void _stdcall   traceTrackForTopic
                 (
                    CX_CONSTSTR pszTopic,
                    CX_CONSTSTR pszFile,
@@ -308,6 +308,17 @@ long _stdcall   traceTrackForTopic
                 );
 
 
+/*
+---------------------------------------------------------------------------
+   write prepared trace (do not format, do not filter)
+---------------------------------------------------------------------------
+*/
+DllExport void _stdcall   writeTraceCooked
+                (
+                   CX_CONSTSTR pszText
+                );
+
+
 #ifdef __cplusplus
 }
 #endif
diff --git a/SelfServiceCommon/Services/cpp/TrcServ/inc/TrcHdlClt.h b/SelfServiceCommon/Services/cpp/TrcServ/inc/TrcHdlClt.h
deleted file mode 100644
index 9d32d047..00000000
--- a/SelfServiceCommon/Services/cpp/TrcServ/inc/TrcHdlClt.h
+++ /dev/null
@@ -1,367 +0,0 @@
-
-/****************************************************************************
-
- FILE:      TrcHdlClt.h
-
- PURPOSE:   Interface definition for Traceing
-
- DATE:      20.09.99
-
- AUTHOR:    Dr. Materna GmbH   (TS)
-
-****************************************************************************/
-
-#ifndef TRCHDLCLT_H
-#define TRCHDLCLT_H
-#if defined(SHOW_INCLUDE_FILES)
-#pragma message("including: " __FILE__)
-#endif
-
-
-/***************************************************************************
-
-  Defines
-
-***************************************************************************/
-
-
-
-
-#ifdef __cplusplus
-#define CX_CONSTSTR const char *
-extern "C"
-{
-#else
-#define CX_CONSTSTR char *
-#endif
-
-/*
-   Returncodes
-*/
-#define TRC_OK                    0
-#define TRC_ERROR                 1
-
-
-#define INVALIDHANDLE_INIT -1
-#define INVALIDHANDLE_FULL -2
-typedef int trcHandle;
-
-/*
-  TraceLevel
-
-*/
-#define      No                   0
-#define      MajorError           1
-#define      MinorError           2
-#define      MajorWarning         3
-#define      MinorWarning         4
-#define      BasicRuntime         5
-#define      BasicProcess         6
-#define      SecondaryRuntime     7
-#define      SecondaryFrequent    8
-#define      All                  9
-
-
-#define TOPIC_HERE              __FILE__,__LINE__,__FUNCTION__
-#define MajorError_HERE         1,__FILE__,__LINE__,__FUNCTION__
-#define MinorError_HERE         2,__FILE__,__LINE__,__FUNCTION__
-#define MajorWarning_HERE       3,__FILE__,__LINE__,__FUNCTION__
-#define MinorWarning_HERE       4,__FILE__,__LINE__,__FUNCTION__
-#define BasicRuntime_HERE       5,__FILE__,__LINE__,__FUNCTION__
-#define BasicProcess_HERE       6,__FILE__,__LINE__,__FUNCTION__
-#define SecondaryRuntime_HERE   7,__FILE__,__LINE__,__FUNCTION__
-#define SecondaryFrequent_HERE  8,__FILE__,__LINE__,__FUNCTION__
-
-
-/*
-   For pszTopic do not use:
-
-        "AppendTrace"
-        "Extended"
-        "Generations"
-        "MaxFileSize"
-        "MaxLineSize"
-        "TraceFile"
-        "TraceLevel"
-*/
-
-
-
-/***************************************************************************
-
-  Exported Functions
-
-***************************************************************************/
-
-
-
-/*
----------------------------------------------------------------------------
-   init Trace
-
----------------------------------------------------------------------------
-*/
-trcHandle _stdcall   openTrace
-                (
-                   CX_CONSTSTR pszApplication
-                );
-
-
-/*
----------------------------------------------------------------------------
-   init Trace
-
-   for processes with short life time
----------------------------------------------------------------------------
-*/
-trcHandle _stdcall   openTraceSLT
-                (
-                   CX_CONSTSTR pszApplication
-                );
-
-
-/*
----------------------------------------------------------------------------
-   cleanup Trace
-
----------------------------------------------------------------------------
-*/
-void _stdcall   closeTrace(trcHandle hdl);
-
-/*
----------------------------------------------------------------------------
-   Trace Text
-
----------------------------------------------------------------------------
-*/
-long _stdcall   writeTraceText
-                (
-                   trcHandle hdl,
-                   long lTraceLevel,
-                   CX_CONSTSTR pszFile,
-                   short  sLine,
-                   CX_CONSTSTR pszFunction,
-                   CX_CONSTSTR pszText
-                );
-
-
-/*
----------------------------------------------------------------------------
-   Trace Text
-   resulting string must be smaller than 4096 byte
-   deprecated (wrong calling convention) use wrtTrace
----------------------------------------------------------------------------
-*/
-long _stdcall   writeTrace(
-                   trcHandle hdl,
-                   long lTraceLevel,
-                   CX_CONSTSTR pszFile,
-                   short  sLine,
-                   CX_CONSTSTR pszFunction,
-                   CX_CONSTSTR pszFormat,
-                   ...);
-/*
----------------------------------------------------------------------------
-   Trace Text
-   resulting string must be smaller than 4096 byte
----------------------------------------------------------------------------
-*/
-long _cdecl   wrtTrace(
-                   trcHandle hdl,
-                   long lTraceLevel,
-                   CX_CONSTSTR pszFile,
-                   short  sLine,
-                   CX_CONSTSTR pszFunction,
-                   CX_CONSTSTR pszFormat,
-                   ...);
-/*
----------------------------------------------------------------------------
-   Trace Dump
----------------------------------------------------------------------------
-*/
-long _stdcall   dumpTrace
-                (
-                   trcHandle hdl,
-                   long lTraceLevel,
-                   CX_CONSTSTR pszFile,
-                   short  sLine,
-                   CX_CONSTSTR pszFunction,
-                   long lDumpSize,
-                   CX_CONSTSTR pDump
-                );
-
-/*
----------------------------------------------------------------------------
-  Start new files
-
----------------------------------------------------------------------------
-*/
-long _stdcall startNewTraceFile(trcHandle hdl, long lTraceLevel);
-
-
-/*
----------------------------------------------------------------------------
-   Trace Text
-
----------------------------------------------------------------------------
-*/
-long _stdcall   writeTraceTextForTopic
-                (
-                   trcHandle hdl,
-                   CX_CONSTSTR pszTopic,
-                   CX_CONSTSTR pszFile,
-                   short  sLine,
-                   CX_CONSTSTR pszFunction,
-                   CX_CONSTSTR pszText
-                );
-
-
-/*
----------------------------------------------------------------------------
-   Trace Text
-   resulting string must be smaller than 4096 byte
-   deprecated (wrong calling convention) use wrtTrace
----------------------------------------------------------------------------
-*/
-long _stdcall   writeTraceForTopic(
-                   trcHandle hdl,
-                   CX_CONSTSTR pszTopic,
-                   CX_CONSTSTR pszFile,
-                   short  sLine,
-                   CX_CONSTSTR pszFunction,
-                   CX_CONSTSTR pszFormat,
-                   ...);
-/*
----------------------------------------------------------------------------
-   Trace Text
-   resulting string must be smaller than 4096 byte
----------------------------------------------------------------------------
-*/
-long _cdecl   wrtTraceForTopic(
-                   trcHandle hdl,
-                   CX_CONSTSTR pszTopic,
-                   CX_CONSTSTR pszFile,
-                   short  sLine,
-                   CX_CONSTSTR pszFunction,
-                   CX_CONSTSTR pszFormat,
-                   ...);
-
-/*
----------------------------------------------------------------------------
-   Trace Dump
----------------------------------------------------------------------------
-*/
-long _stdcall   dumpTraceForTopic
-                (
-                   trcHandle hdl,
-                   CX_CONSTSTR pszTopic,
-                   CX_CONSTSTR pszFile,
-                   short  sLine,
-                   CX_CONSTSTR pszFunction,
-                   long lDumpSize,
-                   CX_CONSTSTR pDump
-                );
-
-/*
----------------------------------------------------------------------------
-  Start new files
-
----------------------------------------------------------------------------
-*/
-long _stdcall startNewTraceFileForTopic(trcHandle hdl, CX_CONSTSTR pszTopic);
-
-
-
-/*
----------------------------------------------------------------------------
-   Trace encypted
----------------------------------------------------------------------------
-*/
-long _stdcall   cryptTrace
-                (
-                   trcHandle hdl,
-                   long lTraceLevel,
-                   CX_CONSTSTR pszFile,
-                   short  sLine,
-                   CX_CONSTSTR pszFunction,
-                   long lDumpSize,
-                   CX_CONSTSTR pDump
-                );
-
-
-/*
----------------------------------------------------------------------------
-   Trace encypted
----------------------------------------------------------------------------
-*/
-long _stdcall   cryptTraceForTopic
-                (
-                   trcHandle hdl,
-                   CX_CONSTSTR pszTopic,
-                   CX_CONSTSTR pszFile,
-                   short  sLine,
-                   CX_CONSTSTR pszFunction,
-                   long lDumpSize,
-                   CX_CONSTSTR pDump
-                );
-
-
-/*
----------------------------------------------------------------------------
-   move file
----------------------------------------------------------------------------
-*/
-
-long _stdcall   moveTrace
-                (
-                   trcHandle hdl,
-                   CX_CONSTSTR pszPath
-                );
-
-
-
-
-/*
----------------------------------------------------------------------------
-   Trace credit card track
----------------------------------------------------------------------------
-*/
-long _stdcall   traceTrack
-                (
-                   trcHandle hdl,
-                   long lTraceLevel,
-                   CX_CONSTSTR pszFile,
-                   short  sLine,
-                   CX_CONSTSTR pszFunction,
-                   long trackid,
-                   CX_CONSTSTR pszTrack
-                );
-
-
-/*
----------------------------------------------------------------------------
-   Trace credit card track
----------------------------------------------------------------------------
-*/
-long _stdcall   traceTrackForTopic
-                (
-                   trcHandle hdl,
-                   CX_CONSTSTR pszTopic,
-                   CX_CONSTSTR pszFile,
-                   short  sLine,
-                   CX_CONSTSTR pszFunction,
-                   long trackid,
-                   CX_CONSTSTR pszTrack
-                );
-
-
-#ifdef __cplusplus
-}
-#endif
-
-
-#endif
-/*************************************************************************************************
-      End Of File  TraceClt.h
-************************************************************************************************/
-
diff --git a/SelfServiceCommon/Services/cpp/TrcServ/inc/TrcHdlExp.h b/SelfServiceCommon/Services/cpp/TrcServ/inc/TrcHdlExp.h
index a9d950fc..17cd48bc 100644
--- a/SelfServiceCommon/Services/cpp/TrcServ/inc/TrcHdlExp.h
+++ b/SelfServiceCommon/Services/cpp/TrcServ/inc/TrcHdlExp.h
@@ -114,7 +114,7 @@ DllExport void _stdcall   closeTrace
 
 ---------------------------------------------------------------------------
 */
-DllExport long _stdcall   writeTraceText
+DllExport void _stdcall   writeTraceText
                 (
                    trcHandle hdl,
                    long lTraceLevel,
@@ -131,7 +131,7 @@ DllExport long _stdcall   writeTraceText
    resulting string must be smaller than 4096 byte
 ---------------------------------------------------------------------------
 */
-DllExport long _stdcall   writeTrace(
+DllExport void _stdcall   writeTrace(
                    trcHandle hdl,
                    long lTraceLevel,
                    CX_CONSTSTR pszFile,
@@ -145,7 +145,7 @@ DllExport long _stdcall   writeTrace(
    resulting string must be smaller than 4096 byte
 ---------------------------------------------------------------------------
 */
-DllExport long _cdecl   wrtTrace(
+DllExport void _cdecl   wrtTrace(
                    trcHandle hdl,
                    long lTraceLevel,
                    CX_CONSTSTR pszFile,
@@ -158,7 +158,7 @@ DllExport long _cdecl   wrtTrace(
    Trace Dump
 ---------------------------------------------------------------------------
 */
-DllExport long _stdcall   dumpTrace
+DllExport void _stdcall   dumpTrace
                 (
                    trcHandle hdl,
                    long lTraceLevel,
@@ -175,7 +175,7 @@ DllExport long _stdcall   dumpTrace
 
 ---------------------------------------------------------------------------
 */
-DllExport long _stdcall   startNewTraceFile(trcHandle hdl, long lTraceLevel);
+DllExport void _stdcall   startNewTraceFile(trcHandle hdl, long lTraceLevel);
 
 /*
 ---------------------------------------------------------------------------
@@ -183,7 +183,7 @@ DllExport long _stdcall   startNewTraceFile(trcHandle hdl, long lTraceLevel);
 
 ---------------------------------------------------------------------------
 */
-DllExport long _stdcall   writeTraceTextForTopic
+DllExport void _stdcall   writeTraceTextForTopic
                 (
                    trcHandle hdl,
                    CX_CONSTSTR pszTopic,
@@ -200,7 +200,7 @@ DllExport long _stdcall   writeTraceTextForTopic
    resulting string must be smaller than 4096 byte
 ---------------------------------------------------------------------------
 */
-DllExport long _stdcall   writeTraceForTopic(
+DllExport void _stdcall   writeTraceForTopic(
                    trcHandle hdl,
                    CX_CONSTSTR pszTopic,
                    CX_CONSTSTR pszFile,
@@ -214,7 +214,7 @@ DllExport long _stdcall   writeTraceForTopic(
    resulting string must be smaller than 4096 byte
 ---------------------------------------------------------------------------
 */
-DllExport long _cdecl   wrtTraceForTopic(
+DllExport void _cdecl   wrtTraceForTopic(
                    trcHandle hdl,
                    CX_CONSTSTR pszTopic,
                    CX_CONSTSTR pszFile,
@@ -227,7 +227,7 @@ DllExport long _cdecl   wrtTraceForTopic(
    Trace Dump
 ---------------------------------------------------------------------------
 */
-DllExport long _stdcall dumpTraceForTopic
+DllExport void _stdcall dumpTraceForTopic
                 (
                    trcHandle hdl,
                    CX_CONSTSTR pszTopic,
@@ -244,14 +244,14 @@ DllExport long _stdcall dumpTraceForTopic
 
 ---------------------------------------------------------------------------
 */
-DllExport long _stdcall startNewTraceFileForTopic(trcHandle hdl, CX_CONSTSTR pszTopic);
+DllExport void _stdcall startNewTraceFileForTopic(trcHandle hdl, CX_CONSTSTR pszTopic);
 
 /*
 ---------------------------------------------------------------------------
    Trace encypted
 ---------------------------------------------------------------------------
 */
-long _stdcall   cryptTrace
+DllExport void _stdcall   cryptTrace
                 (
                    trcHandle hdl,
                    long lTraceLevel,
@@ -268,7 +268,7 @@ long _stdcall   cryptTrace
    Trace encypted
 ---------------------------------------------------------------------------
 */
-long _stdcall   cryptTraceForTopic
+DllExport void _stdcall   cryptTraceForTopic
                 (
                    trcHandle hdl,
                    CX_CONSTSTR pszTopic,
@@ -286,7 +286,7 @@ long _stdcall   cryptTraceForTopic
 ---------------------------------------------------------------------------
 */
 
-long _stdcall   moveTrace
+DllExport void _stdcall   moveTrace
                 (
                    trcHandle hdl,
                    CX_CONSTSTR pszPath
@@ -298,7 +298,7 @@ long _stdcall   moveTrace
    Trace credit card track
 ---------------------------------------------------------------------------
 */
-long _stdcall   traceTrack
+DllExport void _stdcall   traceTrack
                 (
                    trcHandle hdl,
                    long lTraceLevel,
@@ -315,7 +315,7 @@ long _stdcall   traceTrack
    Trace credit card track
 ---------------------------------------------------------------------------
 */
-long _stdcall   traceTrackForTopic
+DllExport void _stdcall   traceTrackForTopic
                 (
                    trcHandle hdl,
                    CX_CONSTSTR pszTopic,
@@ -327,6 +327,18 @@ long _stdcall   traceTrackForTopic
                 );
 
 
+/*
+---------------------------------------------------------------------------
+   write prepared trace (do not format, do not filter)
+---------------------------------------------------------------------------
+*/
+DllExport void _stdcall   writeTraceCooked
+                (
+                   trcHandle hdl,
+                   CX_CONSTSTR pszText
+                );
+
+
 #ifdef __cplusplus
 }
 #endif
diff --git a/SelfServiceCommon/Services/cpp/TrcServ/inc/TrcPrtcl.h b/SelfServiceCommon/Services/cpp/TrcServ/inc/TrcPrtcl.h
index a739d027..f963a25d 100644
--- a/SelfServiceCommon/Services/cpp/TrcServ/inc/TrcPrtcl.h
+++ b/SelfServiceCommon/Services/cpp/TrcServ/inc/TrcPrtcl.h
@@ -92,6 +92,7 @@ enum TraceType
   TT_CMDMOVE01,            // Client sends Move to Service
   TT_TRACK01,              // Client sends credit card track to Service
   TT_TRACK02,              // Client sends credit card track to Service
+  TT_COOKED01,             // Client sends cooked trace text to Service
 };
 
 
@@ -170,6 +171,8 @@ long writeCmdMove01(long OwnHandle, long PartnerHandle, const char *pszPath, cxB
 long writeTrack01(long OwnHandle, long PartnerHandle, long lTraceLevel, const char *pszFile, short  sLine, const char *pszFunction, long trackId, const char *pszTrack, cxBuffer* cxBuf= 0);
 long writeTrack02(long OwnHandle, long PartnerHandle, const char *pszTopic, const char *pszFile, short  sLine, const char *pszFunction, long trackId, const char *pszTrack, cxBuffer* cxBuf= 0);
 
+long writeCooked01(long OwnHandle, long PartnerHandle, const char *pszText, cxBuffer* cxBuf= 0);
+
 
 /*
   possibly return codes for ReadTrace
diff --git a/SelfServiceCommon/Services/cpp/TrcServ/inc/TrcServ_def.h b/SelfServiceCommon/Services/cpp/TrcServ/inc/TrcServ_def.h
index 5dc1863c..aa656ee4 100644
--- a/SelfServiceCommon/Services/cpp/TrcServ/inc/TrcServ_def.h
+++ b/SelfServiceCommon/Services/cpp/TrcServ/inc/TrcServ_def.h
@@ -12,10 +12,12 @@
 
 /*! \mainpage TrcServ
  *
- *  @version V 2.3.20.0
+ *  @version V 2.3.20.1
  *
  *  \section change1 Change history
  *
+ *  \date 03.01.2010 \li V 2.3.20.1 SteT writeTraceCooked added
+ *
  *  \date 22.09.2010 \li V 2.3.20.0 SteT set default tracel level to BasicRuntime
  *
  *  \date 09.09.2010 \li V 2.3.19.0 SteT do not link mcrypt.lib (not used)
@@ -45,8 +47,8 @@
  *
  */
 
-#define FILE_VER_BIN     2,3,20,0
-#define FILE_VER_STR     "FileVersion", "2.3.20.0\0"
+#define FILE_VER_BIN     2,3,20,1
+#define FILE_VER_STR     "FileVersion", "2.3.20.1\0"
 
 #define FILEDESCRIPTION  "FileDescription"  ,"Trace Service\0"
 #define INTERNALNAME     "InternalName"     ,"TrcServ.exe\0"
diff --git a/SelfServiceCommon/Services/cpp/TrcServ/makefile.mak b/SelfServiceCommon/Services/cpp/TrcServ/makefile.mak
index 83ba6cac..d25a863a 100644
--- a/SelfServiceCommon/Services/cpp/TrcServ/makefile.mak
+++ b/SelfServiceCommon/Services/cpp/TrcServ/makefile.mak
@@ -30,7 +30,8 @@ DLL_LDFLAGS = \
     /EXPORT:cryptTraceForTopic \
     /EXPORT:moveTrace \
     /EXPORT:traceTrack \
-    /EXPORT:traceTrackForTopic
+    /EXPORT:traceTrackForTopic \
+    /EXPORT:writeTraceCooked
 
 TOOL_OBJS = \
     $(_OBJ)\matString.obj \
@@ -166,6 +167,25 @@ MY_BIN4_LINKLIBS = \
     $(SYS_ADVAPI32) \
     $(SYS_ACETAO)
 
+######################################################################
+
+MY_BIN5 = \
+    $(_BIN)\tracetestdll.exe
+
+MY_BIN5_RES = \
+    $(_OBJ)\tracetestdll.res
+
+MY_BIN5_OBJS = \
+    $(_OBJ)\TraceTest.obj
+
+MY_BIN5_USER_LIBS = \
+    $(LIB_CXAPI) \
+    $(LIB_MSYSTOOLS) \
+    $(_LIB)\trace.lib
+
+MY_BIN5_LINKLIBS = \
+    $(SYS_ACETAO)
+
 
 ######################################################################
 
diff --git a/SelfServiceCommon/Services/cpp/TrcServ/src/CltData.cpp b/SelfServiceCommon/Services/cpp/TrcServ/src/CltData.cpp
index 1060336c..43435373 100644
--- a/SelfServiceCommon/Services/cpp/TrcServ/src/CltData.cpp
+++ b/SelfServiceCommon/Services/cpp/TrcServ/src/CltData.cpp
@@ -72,6 +72,9 @@ virtual void BasicTraceFile::Dump(long lDay, long lMonth, long lYear, long lHour
 virtual void BasicTraceFile::MoveTraceFile(const char* pszTrcPath, const char* pszCltPath,
           const char* pszApplication, long lInstance, long lFileInstance,
           const char* pszModule);
+virtual void BasicTraceFile::Cooked(const char* pszApplication, long lInstance, long lFileInstance,
+              const char* pszText,
+              const char* pszModule);
 
 virtual void BasicTraceFile::setPath(const char* pszPath);
 virtual int BasicTraceFile::openNewFile();
@@ -105,6 +108,7 @@ void ApplicationData::Crypt02(long ClientApp, long lInstance, aMap& Data, Applic
 void ApplicationData::MoveFile01(long ClientApp, long lInstance, aMap& Data);
 void ApplicationData::Track01(long ClientApp, long lInstance, aMap& Data);
 void ApplicationData::Track02(long ClientApp, long lInstance, aMap& Data);
+void ApplicationData::Cooked01(long ClientApp, long lInstance, aMap& Data);
 void ApplicationData::writeTrace(long lTraceLevel,
                 const char* pszFile, short sLine, const char* pszFunction,
                 const char* pszText, const char* pApplication, long lInstance);
@@ -173,6 +177,9 @@ class DiskTraceFile: public BasicTraceFile
     virtual void MoveTraceFile(const char* pszTrcPath, const char* pszCltPath,
               const char* pszApplication, long lInstance, long lFileInstance,
               const char* pszModule);
+    virtual void Cooked(const char* pszApplication, long lInstance, long lFileInstance,
+                  const char* pszText,
+                  const char* pszModule);
 
     virtual void setPath(const char* pszPath);
     virtual int openNewFile();
@@ -305,6 +312,150 @@ DiskTraceFile::DiskTraceFile(const char* pszPath, const char* pszFileName, long
 DiskTraceFile::~DiskTraceFile()
 {}
 
+/*---------------------------------------------------------------------------
+
+ FUNCTION:  void DiskTraceFile::Cooked
+                 (
+                   const char* pszApplication,
+                   long lInstance,
+                   long lFileInstance,
+                   const char* pszText,
+                   const char* pszModule
+                 )
+ COMMENTS:  write the formatted Data to File
+
+ DATE:      03.01.2010
+
+ AUTHOR:    MATERNA Information & Communications  (SteT)
+
+---------------------------------------------------------------------------*/
+void DiskTraceFile::Cooked
+     (
+        const char* pszApplication,
+        long lInstance,
+        long lFileInstance,
+        const char* pszText,
+        const char* pszModule
+     )
+{
+  long lExtended, lLeft, lShortLine;
+  int iShort;
+  matString msLine, msOut;
+  char szBuffer[256];
+  const char* pText;
+
+  // use local copies, cause changes while creating Text would create confused output
+  lExtended= this->lExtended;
+  lShortLine= this->lShortLine;
+  iShort= 0;
+
+  if (lExtended)
+  {
+    {
+      msLine.catData("[");
+      if (pszModule)
+        msLine.catData(pszModule);
+      sprintf(szBuffer," - %04x] ", (lFileInstance << 8) | (lInstance & 0xFF));
+      msLine.catData(szBuffer);
+    }
+
+    if (lShortLine)
+    {
+      const char *pLine, *pHead;
+      msLine.catData("\n");
+      pHead= msHeadLine.getData();
+      pLine= msLine.getData();
+      if (!pHead || (pLine && strcmp(pHead, pLine) != 0))
+        msHeadLine= msLine;
+      else
+      {
+        msLine.clrData();
+        iShort= 1;
+      }
+    }
+    else
+      msHeadLine.clrData();
+
+    msLine.catData("\n");
+    lLeft= 0;
+  }
+  else
+  {
+    {
+      msLine.catData("[");
+      if (pszModule)
+      {
+        pText = strrchr(pszModule,'\\');
+        if(pText != 0)
+        {
+          sprintf(szBuffer, "%12s", pText + 1);
+        }
+        else
+        {
+          sprintf(szBuffer, "%12s", pszModule);
+        }
+        msLine.catData(szBuffer);
+      }
+      sprintf(szBuffer," - %04x] ", (lFileInstance << 8) | (lInstance & 0xFF));
+      msLine.catData(szBuffer);
+    }
+
+    if (lShortLine)
+    {
+      const char *pLine, *pHead;
+      msLine.catData("\n");
+      pHead= msHeadLine.getData();
+      pLine= msLine.getData();
+      if (!pHead || (pLine && strcmp(pHead, pLine) != 0))
+        msHeadLine= msLine;
+      else
+      {
+        msLine.clrData();
+        iShort= 1;
+      }
+    }
+    else
+      msHeadLine.clrData();
+
+    lLeft= msLine.getDataLen();
+  }
+
+  msLine.catData(pszText);
+  msLine.catData("\n");
+
+  if(lExtended)
+    msLine.catData("\n");
+
+  pText= msLine.getData();
+  if (pText)
+  {
+    if (iShort && !handle.fitToFile(strlen(pText)))
+    {
+      msOut= msHeadLine;
+      msOut.catData(msLine);
+      handle.write(msOut.getData());
+      handle.flush();
+      if (debugOut())
+      {
+        cout << msOut.getData();
+        cout.flush();
+      }
+      OutputDebugString(msOut.getData());
+    }
+    else
+    {
+      handle.write(pText);
+      handle.flush();
+      if (debugOut())
+      {
+        cout << pText;
+        cout.flush();
+      }
+      OutputDebugString(pText);
+    }
+  }
+}
+
 /*---------------------------------------------------------------------------
 
  FUNCTION:  void DiskTraceFile::Text
@@ -1971,6 +2122,31 @@ void ApplicationData::Track02(long ClientApp, long lInstance, aMap& Data)
   }
 }
 
+/*---------------------------------------------------------------------------
+
+ FUNCTION:  void ApplicationData::Cooked01(long ClientApp, long lInstance, aMap& Data)
+
+ COMMENTS:  write credit card track formatted to TraceFile
+
+ DATE:      20.09.2007
+
+ AUTHOR:    Materna Information & Communications (SteT)
+
+---------------------------------------------------------------------------*/
+void ApplicationData::Cooked01(long ClientApp, long lInstance, aMap& Data)
+{
+  requestFileAccess();
+  pTraceFile->Cooked
+  (
+    ApplicationName.strObject(),
+    lInstance,
+    lFileInstance,
+    Data.get(DN_SCOOKED).strObject(),
+    Data.get(DN_SMODULE).strObject()
+  );
+  releaseFileAccess();
+}
+
 
 /*---------------------------------------------------------------------------
 
diff --git a/SelfServiceCommon/Services/cpp/TrcServ/src/Tracedll.cpp b/SelfServiceCommon/Services/cpp/TrcServ/src/Tracedll.cpp
index 0d719e0a..6714cfb4 100644
--- a/SelfServiceCommon/Services/cpp/TrcServ/src/Tracedll.cpp
+++ b/SelfServiceCommon/Services/cpp/TrcServ/src/Tracedll.cpp
@@ -316,7 +316,7 @@ void _stdcall closeTrace()
  AUTHOR:    Dr. Materna GmbH   (TS)
 
 ---------------------------------------------------------------------------*/
-long _stdcall writeTraceText(long lTraceLevel, CX_CONSTSTR pszFile, short  sLine, CX_CONSTSTR pszFunction, CX_CONSTSTR pszText)
+void _stdcall writeTraceText(long lTraceLevel, CX_CONSTSTR pszFile, short  sLine, CX_CONSTSTR pszFunction, CX_CONSTSTR pszText)
 {
   long result;
   TraceO.request();
@@ -327,7 +327,7 @@ long _stdcall writeTraceText(long lTraceLevel, CX_CONSTSTR pszFile, short  sLine
   else
     result = TRC_ERROR;
   TraceO.release();
-  return result;
+  // return result;
 }
 
 /*---------------------------------------------------------------------------
@@ -341,7 +341,7 @@ long _stdcall writeTraceText(long lTraceLevel, CX_CONSTSTR pszFile, short  sLine
  AUTHOR:    Dr. Materna GmbH   (TS)
 
 ---------------------------------------------------------------------------*/
-long _stdcall writeTrace(long lTraceLevel, CX_CONSTSTR pszFile, short  sLine, CX_CONSTSTR pszFunction, CX_CONSTSTR pszFormat, ...)
+void _stdcall writeTrace(long lTraceLevel, CX_CONSTSTR pszFile, short  sLine, CX_CONSTSTR pszFunction, CX_CONSTSTR pszFormat, ...)
 {
   long result;
   va_list   arg_ptr;
@@ -365,7 +365,7 @@ long _stdcall writeTrace(long lTraceLevel, CX_CONSTSTR pszFile, short  sLine, CX
   TraceO.release();
 
 
-  return result;
+  // return result;
 
 }
 /*---------------------------------------------------------------------------
@@ -379,7 +379,7 @@ long _stdcall writeTrace(long lTraceLevel, CX_CONSTSTR pszFile, short  sLine, CX
  AUTHOR:    MATERNA Information & Communications  (TS)
 
 ---------------------------------------------------------------------------*/
-long _cdecl wrtTrace(long lTraceLevel, CX_CONSTSTR pszFile, short  sLine, CX_CONSTSTR pszFunction, CX_CONSTSTR pszFormat, ...)
+void _cdecl wrtTrace(long lTraceLevel, CX_CONSTSTR pszFile, short  sLine, CX_CONSTSTR pszFunction, CX_CONSTSTR pszFormat, ...)
 {
   long result;
   va_list   arg_ptr;
@@ -403,7 +403,7 @@ long _cdecl wrtTrace(long lTraceLevel, CX_CONSTSTR pszFile, short  sLine, CX_CON
   TraceO.release();
 
 
-  return result;
+  // return result;
 }
 
 /*---------------------------------------------------------------------------
@@ -417,7 +417,7 @@ long _cdecl wrtTrace(long lTraceLevel, CX_CONSTSTR pszFile, short  sLine, CX_CON
  AUTHOR:    Dr. Materna GmbH   (TS)
 
 ---------------------------------------------------------------------------*/
-long _stdcall dumpTrace(long lTraceLevel, CX_CONSTSTR pszFile, short  sLine, CX_CONSTSTR pszFunction, long lDumpSize, CX_CONSTSTR pDump)
+void _stdcall dumpTrace(long lTraceLevel, CX_CONSTSTR pszFile, short  sLine, CX_CONSTSTR pszFunction, long lDumpSize, CX_CONSTSTR pDump)
 {
   long result;
   TraceO.request();
@@ -429,7 +429,7 @@ long _stdcall dumpTrace(long lTraceLevel, CX_CONSTSTR pszFile, short  sLine, CX_
     result = TRC_ERROR;
   TraceO.release();
 
-  return result;
+  // return result;
 }
 
 /*---------------------------------------------------------------------------
@@ -443,7 +443,7 @@ long _stdcall dumpTrace(long lTraceLevel, CX_CONSTSTR pszFile, short  sLine, CX_
  AUTHOR:    Dr. Materna GmbH   (TS)
 
 ---------------------------------------------------------------------------*/
-long _stdcall startNewTraceFile(long lTraceLevel)
+void _stdcall startNewTraceFile(long lTraceLevel)
 {
   long result;
   TraceO.request();
@@ -454,7 +454,7 @@ long _stdcall startNewTraceFile(long lTraceLevel)
   else
     result = TRC_ERROR;
   TraceO.release();
-  return result;
+  // return result;
 }
 
 /*---------------------------------------------------------------------------
@@ -468,7 +468,7 @@ long _stdcall startNewTraceFile(long lTraceLevel)
  AUTHOR:    Dr. Materna GmbH   (TS)
 
 ---------------------------------------------------------------------------*/
-long _stdcall writeTraceTextForTopic(CX_CONSTSTR pszTopic, CX_CONSTSTR pszFile, short  sLine, CX_CONSTSTR pszFunction, CX_CONSTSTR pszText)
+void _stdcall writeTraceTextForTopic(CX_CONSTSTR pszTopic, CX_CONSTSTR pszFile, short  sLine, CX_CONSTSTR pszFunction, CX_CONSTSTR pszText)
 {
   long result;
   TraceO.request();
@@ -479,7 +479,7 @@ long _stdcall writeTraceTextForTopic(CX_CONSTSTR pszTopic, CX_CONSTSTR pszFile,
   else
     result = TRC_ERROR;
   TraceO.release();
-  return result;
+  // return result;
 }
 
 /*---------------------------------------------------------------------------
@@ -493,7 +493,7 @@ long _stdcall writeTraceTextForTopic(CX_CONSTSTR pszTopic, CX_CONSTSTR pszFile,
  AUTHOR:    Dr. Materna GmbH   (TS)
 
 ---------------------------------------------------------------------------*/
-long _stdcall writeTraceForTopic(CX_CONSTSTR pszTopic, CX_CONSTSTR pszFile, short  sLine, CX_CONSTSTR pszFunction, CX_CONSTSTR pszFormat, ...)
+void _stdcall writeTraceForTopic(CX_CONSTSTR pszTopic, CX_CONSTSTR pszFile, short  sLine, CX_CONSTSTR pszFunction, CX_CONSTSTR pszFormat, ...)
 {
   long result;
   va_list   arg_ptr;
@@ -516,7 +516,7 @@ long _stdcall writeTraceForTopic(CX_CONSTSTR pszTopic, CX_CONSTSTR pszFile, shor
     result = TRC_ERROR;
   TraceO.release();
 
-  return result;
+  // return result;
 
 }
 
@@ -531,7 +531,7 @@ long _stdcall writeTraceForTopic(CX_CONSTSTR pszTopic, CX_CONSTSTR pszFile, shor
  AUTHOR:    MATERNA Information & Communications  (TS)
 
 ---------------------------------------------------------------------------*/
-long _cdecl wrtTraceForTopic(CX_CONSTSTR pszTopic, CX_CONSTSTR pszFile, short  sLine, CX_CONSTSTR pszFunction, CX_CONSTSTR pszFormat, ...)
+void _cdecl wrtTraceForTopic(CX_CONSTSTR pszTopic, CX_CONSTSTR pszFile, short  sLine, CX_CONSTSTR pszFunction, CX_CONSTSTR pszFormat, ...)
 {
   long result;
   va_list   arg_ptr;
@@ -554,7 +554,7 @@ long _cdecl wrtTraceForTopic(CX_CONSTSTR pszTopic, CX_CONSTSTR pszFile, short  s
     result = TRC_ERROR;
   TraceO.release();
 
-  return result;
+  // return result;
 
 }
 
@@ -570,7 +570,7 @@ long _cdecl wrtTraceForTopic(CX_CONSTSTR pszTopic, CX_CONSTSTR pszFile, short  s
  AUTHOR:    Dr. Materna GmbH   (TS)
 
 ---------------------------------------------------------------------------*/
-long _stdcall dumpTraceForTopic(CX_CONSTSTR pszTopic, CX_CONSTSTR pszFile, short  sLine, CX_CONSTSTR pszFunction, long lDumpSize, CX_CONSTSTR pDump)
+void _stdcall dumpTraceForTopic(CX_CONSTSTR pszTopic, CX_CONSTSTR pszFile, short  sLine, CX_CONSTSTR pszFunction, long lDumpSize, CX_CONSTSTR pDump)
 {
   long result;
   TraceO.request();
@@ -581,7 +581,7 @@ long _stdcall dumpTraceForTopic(CX_CONSTSTR pszTopic, CX_CONSTSTR pszFile, short
   else
     result = TRC_ERROR;
   TraceO.release();
-  return result;
+  // return result;
 }
 
 /*---------------------------------------------------------------------------
@@ -595,7 +595,7 @@ long _stdcall dumpTraceForTopic(CX_CONSTSTR pszTopic, CX_CONSTSTR pszFile, short
  AUTHOR:    Dr. Materna GmbH   (TS)
 
 ---------------------------------------------------------------------------*/
-long _stdcall startNewTraceFileForTopic(CX_CONSTSTR pszTopic)
+void _stdcall startNewTraceFileForTopic(CX_CONSTSTR pszTopic)
 {
   long result;
   TraceO.request();
@@ -606,7 +606,7 @@ long _stdcall startNewTraceFileForTopic(CX_CONSTSTR pszTopic)
   else
     result = TRC_ERROR;
   TraceO.release();
-  return result;
+  // return result;
 }
 
 /*---------------------------------------------------------------------------
@@ -620,7 +620,7 @@ long _stdcall startNewTraceFileForTopic(CX_CONSTSTR pszTopic)
  AUTHOR:    MATERNA Information & Communications  (SteT)
 
 ---------------------------------------------------------------------------*/
-long _stdcall cryptTrace(long lTraceLevel, CX_CONSTSTR pszFile, short  sLine, CX_CONSTSTR pszFunction, long lDumpSize, CX_CONSTSTR pDump)
+void _stdcall cryptTrace(long lTraceLevel, CX_CONSTSTR pszFile, short  sLine, CX_CONSTSTR pszFunction, long lDumpSize, CX_CONSTSTR pDump)
 {
   long result;
   TraceO.request();
@@ -632,7 +632,7 @@ long _stdcall cryptTrace(long lTraceLevel, CX_CONSTSTR pszFile, short  sLine, CX
     result = TRC_ERROR;
   TraceO.release();
 
-  return result;
+  // return result;
 }
 
 /*---------------------------------------------------------------------------
@@ -646,7 +646,7 @@ long _stdcall cryptTrace(long lTraceLevel, CX_CONSTSTR pszFile, short  sLine, CX
  AUTHOR:    MATERNA Information & Communications  (SteT)
 
 ---------------------------------------------------------------------------*/
-long _stdcall cryptTraceForTopic(CX_CONSTSTR pszTopic, CX_CONSTSTR pszFile, short  sLine, CX_CONSTSTR pszFunction, long lDumpSize, CX_CONSTSTR pDump)
+void _stdcall cryptTraceForTopic(CX_CONSTSTR pszTopic, CX_CONSTSTR pszFile, short  sLine, CX_CONSTSTR pszFunction, long lDumpSize, CX_CONSTSTR pDump)
 {
   long result;
   TraceO.request();
@@ -657,7 +657,7 @@ long _stdcall cryptTraceForTopic(CX_CONSTSTR pszTopic, CX_CONSTSTR pszFile, shor
   else
     result = TRC_ERROR;
   TraceO.release();
-  return result;
+  // return result;
 }
 
 
@@ -672,7 +672,7 @@ long _stdcall cryptTraceForTopic(CX_CONSTSTR pszTopic, CX_CONSTSTR pszFile, shor
  AUTHOR:    MATERNA Information & Communications  (SteT)
 
 ---------------------------------------------------------------------------*/
-long _stdcall moveTrace(CX_CONSTSTR pszPath)
+void _stdcall moveTrace(CX_CONSTSTR pszPath)
 {
   long result;
   TraceO.request();
@@ -683,7 +683,7 @@ long _stdcall moveTrace(CX_CONSTSTR pszPath)
   else
     result = TRC_ERROR;
   TraceO.release();
-  return result;
+  // return result;
 }
 
 
@@ -700,7 +700,7 @@ long _stdcall moveTrace(CX_CONSTSTR pszPath)
 
 ---------------------------------------------------------------------------
 */
-long _stdcall traceTrack(long lTraceLevel, CX_CONSTSTR pszFile, short sLine, CX_CONSTSTR pszFunction, long trackid, CX_CONSTSTR pszTrack)
+void _stdcall traceTrack(long lTraceLevel, CX_CONSTSTR pszFile, short sLine, CX_CONSTSTR pszFunction, long trackid, CX_CONSTSTR pszTrack)
 {
   long result;
   TraceO.request();
@@ -711,7 +711,7 @@ long _stdcall traceTrack(long lTraceLevel, CX_CONSTSTR pszFile, short sLine, CX_
   else
     result = TRC_ERROR;
   TraceO.release();
-  return result;
+  // return result;
 }
 
 
@@ -728,7 +728,7 @@ long _stdcall traceTrack(long lTraceLevel, CX_CONSTSTR pszFile, short sLine, CX_
 
 ---------------------------------------------------------------------------
 */
-long _stdcall traceTrackForTopic(CX_CONSTSTR pszTopic, CX_CONSTSTR pszFile, short sLine, CX_CONSTSTR pszFunction, long trackid, CX_CONSTSTR pszTrack)
+void _stdcall traceTrackForTopic(CX_CONSTSTR pszTopic, CX_CONSTSTR pszFile, short sLine, CX_CONSTSTR pszFunction, long trackid, CX_CONSTSTR pszTrack)
 {
   long result;
   TraceO.request();
@@ -739,7 +739,34 @@ long _stdcall traceTrackForTopic(CX_CONSTSTR pszTopic, CX_CONSTSTR pszFile, shor
   else
     result = TRC_ERROR;
   TraceO.release();
-  return result;
+  // return result;
+}
+
+/*
+---------------------------------------------------------------------------
+
+ FUNCTION:  long _stdcall writeTraceCooked(CX_CONSTSTR pszText)
+
+ COMMENTS:  write prepared trace (do not format, do not filter)
+
+ DATE:      03.01.2011
+
+ AUTHOR:    MATERNA Information & Communications  (SteT)
+
+---------------------------------------------------------------------------
+*/
+void _stdcall writeTraceCooked(CX_CONSTSTR pszText)
+{
+  long result;
+  TraceO.request();
+  if(!TraceO.Trace)
+    TraceO.open();
+  if(TraceO.Trace)
+    result = TraceO.Trace->traceCooked(pszText);
+  else
+    result = TRC_ERROR;
+  TraceO.release();
+  // return result;
 }
 
 /*************************************************************************************************
diff --git a/SelfServiceCommon/Services/cpp/TrcServ/src/TrcClt.cpp b/SelfServiceCommon/Services/cpp/TrcServ/src/TrcClt.cpp
index 3ddf8644..c21702af 100644
--- a/SelfServiceCommon/Services/cpp/TrcServ/src/TrcClt.cpp
+++ b/SelfServiceCommon/Services/cpp/TrcServ/src/TrcClt.cpp
@@ -1556,6 +1556,67 @@ long TraceClient::traceTrack(const char *pszTopic, const char *pszFile, short  s
   return result;
 }
 
+/*---------------------------------------------------------------------------
+
+ FUNCTION:  long TraceClient::traceCooked(const char* pszText)
+
+ COMMENTS:  write prepared trace (do not format, do not filter)
+
+ DATE:      03.01.2010
+
+ AUTHOR:    MATERNA Information & Communications  (SteT)
+
+---------------------------------------------------------------------------*/
+long TraceClient::traceCooked(const char* pszText)
+{
+  long result, rc;
+  int iTopicState;
+  #ifndef TRCLIGHT
+  if(!iConnected && !Thread.iThreadRunning)
+    connect();
+  #else
+  if(!iConnected)
+    connect();
+  #endif
+
+  if (iConnected)
+  {
+    // osSleep(1);  // give up the remainder of their current time slice.
+    writeMutex.request();
+    rc = writeCooked01(lOwnClientHandle, lServiceServerHandle, pszText);
+    writeMutex.release();
+    switch(rc)
+    {
+      case CXRC_OK:
+        result = TRC_OK;
+        break;
+      case CXRC_ERROR:
+      case CXRC_WRONG_PARAMETER:
+      case CXRC_NOT_FOUND:
+      case CXRC_PARTNER_LOST:
+      case CXRC_WRONG_HANDLE:
+        result = TRC_OK;
+        iConnected = 0;
+        iServiceServer = 0;
+        #ifndef TRCLIGHT
+        stopRead();
+        #endif
+        break;
+      case CXRC_NAME_ALREADY_EXISTS:
+      case CXRC_BUFFER_TOO_SMALL:
+      case CXRC_MORE_DATA:
+      case TRC_OUTOFMEMORY:
+        result = TRC_ERROR;
+        break;
+      default:
+        result = TRC_ERROR;
+    }
+  }
+  else
+    result = TRC_OK;
+  return result;
+}
+
 
 
 /*************************************************************************************************
diff --git a/SelfServiceCommon/Services/cpp/TrcServ/src/TrcHdlClt.cpp b/SelfServiceCommon/Services/cpp/TrcServ/src/TrcHdlClt.cpp
index adf4652f..13d678bf 100644
--- a/SelfServiceCommon/Services/cpp/TrcServ/src/TrcHdlClt.cpp
+++ b/SelfServiceCommon/Services/cpp/TrcServ/src/TrcHdlClt.cpp
@@ -303,7 +303,7 @@ void _stdcall closeTrace(trcHandle hdl )
  AUTHOR:    Dr. Materna GmbH   (TS)
 
 ---------------------------------------------------------------------------*/
-long _stdcall writeTraceText(trcHandle hdl, long lTraceLevel, CX_CONSTSTR pszFile, short  sLine, CX_CONSTSTR pszFunction, CX_CONSTSTR pszText)
+void _stdcall writeTraceText(trcHandle hdl, long lTraceLevel, CX_CONSTSTR pszFile, short  sLine, CX_CONSTSTR pszFunction, CX_CONSTSTR pszText)
 {
   long result;
   TraceClient* pTrace;
@@ -314,7 +314,7 @@ long _stdcall writeTraceText(trcHandle hdl, long lTraceLevel, CX_CONSTSTR pszFil
   else
     result = TRC_ERROR;
   TraceO.release();
-  return result;
+  // return result;
 }
 
 /*---------------------------------------------------------------------------
@@ -328,7 +328,7 @@ long _stdcall writeTraceText(trcHandle hdl, long lTraceLevel, CX_CONSTSTR pszFil
  AUTHOR:    Dr. Materna GmbH   (TS)
 
 ---------------------------------------------------------------------------*/
-long _stdcall writeTrace(trcHandle hdl, long lTraceLevel, CX_CONSTSTR pszFile, short  sLine, CX_CONSTSTR pszFunction, CX_CONSTSTR pszFormat, ...)
+void _stdcall writeTrace(trcHandle hdl, long lTraceLevel, CX_CONSTSTR pszFile, short  sLine, CX_CONSTSTR pszFunction, CX_CONSTSTR pszFormat, ...)
 {
   long result;
   TraceClient* pTrace;
@@ -352,7 +352,7 @@ long _stdcall writeTrace(trcHandle hdl, long lTraceLevel, CX_CONSTSTR pszFile, s
   TraceO.release();
 
 
-  return result;
+  // return result;
 
 }
 
@@ -367,7 +367,7 @@ long _stdcall writeTrace(trcHandle hdl, long lTraceLevel, CX_CONSTSTR pszFile, s
  AUTHOR:    MATERNA Information & Communications  (TS)
 
 ---------------------------------------------------------------------------*/
-long _cdecl wrtTrace(trcHandle hdl, long lTraceLevel, CX_CONSTSTR pszFile, short  sLine, CX_CONSTSTR pszFunction, CX_CONSTSTR pszFormat, ...)
+void _cdecl wrtTrace(trcHandle hdl, long lTraceLevel, CX_CONSTSTR pszFile, short  sLine, CX_CONSTSTR pszFunction, CX_CONSTSTR pszFormat, ...)
 {
   long result;
   TraceClient* pTrace;
@@ -391,7 +391,7 @@ long _cdecl wrtTrace(trcHandle hdl, long lTraceLevel, CX_CONSTSTR pszFile, short
   TraceO.release();
 
 
-  return result;
+  // return result;
 
 }
 
@@ -406,7 +406,7 @@ long _cdecl wrtTrace(trcHandle hdl, long lTraceLevel, CX_CONSTSTR pszFile, short
  AUTHOR:    Dr. Materna GmbH   (TS)
 
 ---------------------------------------------------------------------------*/
-long _stdcall dumpTrace(trcHandle hdl, long lTraceLevel, CX_CONSTSTR pszFile, short  sLine, CX_CONSTSTR pszFunction, long lDumpSize, CX_CONSTSTR pDump)
+void _stdcall dumpTrace(trcHandle hdl, long lTraceLevel, CX_CONSTSTR pszFile, short  sLine, CX_CONSTSTR pszFunction, long lDumpSize, CX_CONSTSTR pDump)
 {
   long result;
   TraceClient* pTrace;
@@ -418,7 +418,7 @@ long _stdcall dumpTrace(trcHandle hdl, long lTraceLevel, CX_CONSTSTR pszFile, sh
     result = TRC_ERROR;
   TraceO.release();
 
-  return result;
+  // return result;
 }
 
 /*---------------------------------------------------------------------------
@@ -432,7 +432,7 @@ long _stdcall dumpTrace(trcHandle hdl, long lTraceLevel, CX_CONSTSTR pszFile, sh
  AUTHOR:    Dr. Materna GmbH   (TS)
 
 ---------------------------------------------------------------------------*/
-long _stdcall startNewTraceFile(trcHandle hdl, long lTraceLevel)
+void _stdcall startNewTraceFile(trcHandle hdl, long lTraceLevel)
 {
   long result;
   TraceClient* pTrace;
@@ -443,7 +443,7 @@ long _stdcall startNewTraceFile(trcHandle hdl, long lTraceLevel)
   else
     result = TRC_ERROR;
   TraceO.release();
-  return result;
+  // return result;
 }
 /*---------------------------------------------------------------------------
 
@@ -456,7 +456,7 @@ long _stdcall startNewTraceFile(trcHandle hdl, long lTraceLevel)
  AUTHOR:    Dr. Materna GmbH   (TS)
 
 ---------------------------------------------------------------------------*/
-long _stdcall writeTraceTextForTopic(trcHandle hdl, CX_CONSTSTR pszTopic, CX_CONSTSTR pszFile, short  sLine, CX_CONSTSTR pszFunction, CX_CONSTSTR pszText)
+void _stdcall writeTraceTextForTopic(trcHandle hdl, CX_CONSTSTR pszTopic, CX_CONSTSTR pszFile, short  sLine, CX_CONSTSTR pszFunction, CX_CONSTSTR pszText)
 {
   long result;
   TraceClient* pTrace;
@@ -467,7 +467,7 @@ long _stdcall writeTraceTextForTopic(trcHandle hdl, CX_CONSTSTR pszTopic, CX_CON
   else
     result = TRC_ERROR;
   TraceO.release();
-  return result;
+  // return result;
 }
 
 /*---------------------------------------------------------------------------
@@ -481,7 +481,7 @@ long _stdcall writeTraceTextForTopic(trcHandle hdl, CX_CONSTSTR pszTopic, CX_CON
  AUTHOR:    Dr. Materna GmbH   (TS)
 
 ---------------------------------------------------------------------------*/
-long _stdcall writeTraceForTopic(trcHandle hdl, CX_CONSTSTR pszTopic, CX_CONSTSTR pszFile, short  sLine, CX_CONSTSTR pszFunction, CX_CONSTSTR pszFormat, ...)
+void _stdcall writeTraceForTopic(trcHandle hdl, CX_CONSTSTR pszTopic, CX_CONSTSTR pszFile, short  sLine, CX_CONSTSTR pszFunction, CX_CONSTSTR pszFormat, ...)
 {
   long result;
   va_list   arg_ptr;
@@ -504,7 +504,7 @@ long _stdcall writeTraceForTopic(trcHandle hdl, CX_CONSTSTR pszTopic, CX_CONSTST
     result = TRC_ERROR;
   TraceO.release();
 
-  return result;
+  // return result;
 
 }
 /*---------------------------------------------------------------------------
@@ -518,7 +518,7 @@ long _stdcall writeTraceForTopic(trcHandle hdl, CX_CONSTSTR pszTopic, CX_CONSTST
  AUTHOR:    MATERNA Information & Communications  (TS)
 
 ---------------------------------------------------------------------------*/
-long _cdecl wrtTraceForTopic(trcHandle hdl, CX_CONSTSTR pszTopic, CX_CONSTSTR pszFile, short  sLine, CX_CONSTSTR pszFunction, CX_CONSTSTR pszFormat, ...)
+void _cdecl wrtTraceForTopic(trcHandle hdl, CX_CONSTSTR pszTopic, CX_CONSTSTR pszFile, short  sLine, CX_CONSTSTR pszFunction, CX_CONSTSTR pszFormat, ...)
 {
   long result;
   va_list   arg_ptr;
@@ -541,7 +541,7 @@ long _cdecl wrtTraceForTopic(trcHandle hdl, CX_CONSTSTR pszTopic, CX_CONSTSTR ps
     result = TRC_ERROR;
   TraceO.release();
 
-  return result;
+  // return result;
 
 }
 /*---------------------------------------------------------------------------
@@ -555,7 +555,7 @@ long _cdecl wrtTraceForTopic(trcHandle hdl, CX_CONSTSTR pszTopic, CX_CONSTSTR ps
  AUTHOR:    Dr. Materna GmbH   (TS)
 
 ---------------------------------------------------------------------------*/
-long _stdcall dumpTraceForTopic(trcHandle hdl, CX_CONSTSTR pszTopic, CX_CONSTSTR pszFile, short  sLine, CX_CONSTSTR pszFunction, long lDumpSize, CX_CONSTSTR pDump)
+void _stdcall dumpTraceForTopic(trcHandle hdl, CX_CONSTSTR pszTopic, CX_CONSTSTR pszFile, short  sLine, CX_CONSTSTR pszFunction, long lDumpSize, CX_CONSTSTR pDump)
 {
   long result;
   TraceClient* pTrace;
@@ -566,7 +566,7 @@ long _stdcall dumpTraceForTopic(trcHandle hdl, CX_CONSTSTR pszTopic, CX_CONSTSTR
   else
     result = TRC_ERROR;
   TraceO.release();
-  return result;
+  // return result;
 }
 
 /*---------------------------------------------------------------------------
@@ -580,7 +580,7 @@ long _stdcall dumpTraceForTopic(trcHandle hdl, CX_CONSTSTR pszTopic, CX_CONSTSTR
  AUTHOR:    Dr. Materna GmbH   (TS)
 
 ---------------------------------------------------------------------------*/
-long _stdcall startNewTraceFileForTopic(trcHandle hdl, CX_CONSTSTR pszTopic)
+void _stdcall startNewTraceFileForTopic(trcHandle hdl, CX_CONSTSTR pszTopic)
 {
   long result;
   TraceClient* pTrace;
@@ -591,7 +591,7 @@ long _stdcall startNewTraceFileForTopic(trcHandle hdl, CX_CONSTSTR pszTopic)
   else
     result = TRC_ERROR;
   TraceO.release();
-  return result;
+  // return result;
 }
 
 
@@ -607,7 +607,7 @@ long _stdcall startNewTraceFileForTopic(trcHandle hdl, CX_CONSTSTR pszTopic)
  AUTHOR:    MATERNA Information & Communications  (SteT)
 
 ---------------------------------------------------------------------------*/
-long _stdcall cryptTrace(trcHandle hdl, long lTraceLevel, CX_CONSTSTR pszFile, short  sLine, CX_CONSTSTR pszFunction, long lDumpSize, CX_CONSTSTR pDump)
+void _stdcall cryptTrace(trcHandle hdl, long lTraceLevel, CX_CONSTSTR pszFile, short  sLine, CX_CONSTSTR pszFunction, long lDumpSize, CX_CONSTSTR pDump)
 {
   long result;
   TraceClient* pTrace;
@@ -619,7 +619,7 @@ long _stdcall cryptTrace(trcHandle hdl, long lTraceLevel, CX_CONSTSTR pszFile, s
     result = TRC_ERROR;
   TraceO.release();
 
-  return result;
+  // return result;
 }
 /*---------------------------------------------------------------------------
 
@@ -632,7 +632,7 @@ long _stdcall cryptTrace(trcHandle hdl, long lTraceLevel, CX_CONSTSTR pszFile, s
  AUTHOR:    MATERNA Information & Communications  (SteT)
 
 ---------------------------------------------------------------------------*/
-long _stdcall cryptTraceForTopic(trcHandle hdl, CX_CONSTSTR pszTopic, CX_CONSTSTR pszFile, short  sLine, CX_CONSTSTR pszFunction, long lDumpSize, CX_CONSTSTR pDump)
+void _stdcall cryptTraceForTopic(trcHandle hdl, CX_CONSTSTR pszTopic, CX_CONSTSTR pszFile, short  sLine, CX_CONSTSTR pszFunction, long lDumpSize, CX_CONSTSTR pDump)
 {
   long result;
   TraceClient* pTrace;
@@ -643,7 +643,7 @@ long _stdcall cryptTraceForTopic(trcHandle hdl, CX_CONSTSTR pszTopic, CX_CONSTST
   else
     result = TRC_ERROR;
   TraceO.release();
-  return result;
+  // return result;
 }
 
 
@@ -658,7 +658,7 @@ long _stdcall cryptTraceForTopic(trcHandle hdl, CX_CONSTSTR pszTopic, CX_CONSTST
  AUTHOR:    MATERNA Information & Communications  (SteT)
 
 ---------------------------------------------------------------------------*/
-long _stdcall moveTrace(trcHandle hdl, CX_CONSTSTR pszPath)
+void _stdcall moveTrace(trcHandle hdl, CX_CONSTSTR pszPath)
 {
   long result;
   TraceClient* pTrace;
@@ -669,7 +669,7 @@ long _stdcall moveTrace(trcHandle hdl, CX_CONSTSTR pszPath)
   else
     result = TRC_ERROR;
   TraceO.release();
-  return result;
+  // return result;
 }
 
 /*
@@ -685,7 +685,7 @@ long _stdcall moveTrace(trcHandle hdl, CX_CONSTSTR pszPath)
 
 ---------------------------------------------------------------------------
 */
-long _stdcall traceTrack(trcHandle hdl, long lTraceLevel, CX_CONSTSTR pszFile, short sLine, CX_CONSTSTR pszFunction, long trackid, CX_CONSTSTR pszTrack)
+void _stdcall traceTrack(trcHandle hdl, long lTraceLevel, CX_CONSTSTR pszFile, short sLine, CX_CONSTSTR pszFunction, long trackid, CX_CONSTSTR pszTrack)
 {
   long result;
   TraceClient* pTrace;
@@ -696,7 +696,7 @@ long _stdcall traceTrack(trcHandle hdl, long lTraceLevel, CX_CONSTSTR pszFile, s
   else
     result = TRC_ERROR;
   TraceO.release();
-  return result;
+  // return result;
 }
 
 
@@ -713,7 +713,7 @@ long _stdcall traceTrack(trcHandle hdl, long lTraceLevel, CX_CONSTSTR pszFile, s
 
 ---------------------------------------------------------------------------
 */
-long _stdcall traceTrackForTopic(trcHandle hdl, CX_CONSTSTR pszTopic, CX_CONSTSTR pszFile, short sLine, CX_CONSTSTR pszFunction, long trackid, CX_CONSTSTR pszTrack)
+void _stdcall traceTrackForTopic(trcHandle hdl, CX_CONSTSTR pszTopic, CX_CONSTSTR pszFile, short sLine, CX_CONSTSTR pszFunction, long trackid, CX_CONSTSTR pszTrack)
 {
   long result;
   TraceClient* pTrace;
@@ -724,9 +724,37 @@ long _stdcall traceTrackForTopic(trcHandle hdl, CX_CONSTSTR pszTopic, CX_CONSTST
   else
     result = TRC_ERROR;
   TraceO.release();
-  return result;
+  // return result;
 }
 
+/*
+---------------------------------------------------------------------------
+
+ FUNCTION:  long _stdcall writeTraceCooked(trcHandle hdl, CX_CONSTSTR pszText)
+
+ COMMENTS:  write prepared trace (do not format, do not filter)
+
+ DATE:      03.01.2011
+
+ AUTHOR:    MATERNA Information & Communications  (SteT)
+
+---------------------------------------------------------------------------
+*/
+void _stdcall writeTraceCooked(trcHandle hdl, CX_CONSTSTR pszText)
+{
+  long result;
+  TraceClient* pTrace;
+  TraceO.request();
+  pTrace= TraceO.TraceList.get(hdl);
+  if (pTrace)
+    result = pTrace->traceCooked(pszText);
+  else
+    result = TRC_ERROR;
+  TraceO.release();
+  // return result;
+}
+
+
 
 
 
diff --git a/SelfServiceCommon/Services/cpp/TrcServ/src/TrcPrtcl.cpp b/SelfServiceCommon/Services/cpp/TrcServ/src/TrcPrtcl.cpp
index ea405759..f5b64078 100644
--- a/SelfServiceCommon/Services/cpp/TrcServ/src/TrcPrtcl.cpp
+++ b/SelfServiceCommon/Services/cpp/TrcServ/src/TrcPrtcl.cpp
@@ -120,6 +120,8 @@ struct CmdParameter01
   long writeTrack01(long OwnHandle, long PartnerHandle, long lTraceLevel, const char *pszFile, short  sLine, const char *pszFunction, long trackId, const char *pszTrack, cxBuffer* cxBuf= 0);
   long writeTrack02(long OwnHandle, long PartnerHandle, const char *pszTopic, const char *pszFile, short  sLine, const char *pszFunction, long trackId, const char *pszTrack, cxBuffer* cxBuf= 0);
 
+  long writeCooked01(long OwnHandle, long PartnerHandle, const char *pszText, cxBuffer* cxBuf= 0);
+
 
 ***************************************************************************/
 
@@ -154,6 +156,8 @@ struct CmdParameter01
   static long readTrack01(aMap &Data, char *pCopyBuffer, const char *pBuffer, long lSize);
   static long readTrack02(aMap &Data, char *pCopyBuffer, const char *pBuffer, long lSize);
 
+  static long readCooked01(aMap &Data, char *pCopyBuffer, const char *pBuffer, long lSize);
+
 /***************************************************************************
 
   Function Definition
@@ -369,6 +373,8 @@ const char* getTypeName(long lType)
       return "TRACK01";
     case TT_TRACK02:
       return "TRACK02";
+    case TT_COOKED01:
+      return "COOKED01";
     default:
       return "UNKNOWN";
   }
@@ -2543,6 +2549,9 @@ long ReadTrace(long OwnHandle, long *PartnerHandle, long *lType, aMap& Data, lon
       case TT_TRACK02:
         rc = readTrack02(Data, pCopyBuffer, pBuffer, lSize);
         break;
+      case TT_COOKED01:
+        rc = readCooked01(Data, pCopyBuffer, pBuffer, lSize);
+        break;
       default:
         rc = TRC_FORMATCORRUPT;
     }
@@ -3034,6 +3043,7 @@ static long readCmdMove01(aMap &Data, char *pCopyBuffer, const char *pBuffer, lo
 }
 
 
+
 /*---------------------------------------------------------------------------
 
  FUNCTION:  long writeTrack01(long OwnHandle, long PartnerHandle, long lTraceLevel, const char *pszFile, short  sLine, const char *pszFunction, long trackId, const char *pszTrack, cxBuffer* cxBuf= 0);
@@ -3352,6 +3362,74 @@ long writeTrack02(long OwnHandle, long PartnerHandle, const char *pszTopic, cons
   return result;
 }
 
+/*---------------------------------------------------------------------------
+
+ FUNCTION:  long writeCooked01(long OwnHandle, long PartnerHandle, const char *pszText, cxBuffer* cxBuf);
+
+ COMMENTS:  Send Text
+
+ DATE:      03.01.2010
+
+ AUTHOR:    MATERNA Information & Communications  (SteT)
+
+---------------------------------------------------------------------------*/
+long writeCooked01(long OwnHandle, long PartnerHandle, const char *pszText, cxBuffer* cxBuf)
+{
+  long result;
+  long lSize, lWritten, lCopy;
+  const char *pText;
+  long lText;
+
+  char *pBuffer, *pPos;
+  long lType = TT_COOKED01;
+
+  #ifdef DEBUGOUT
+    cout << "writeCooked01: " << non_null(pszText) << endl;
+  #endif
+
+  if (pszText)
+    pText = pszText;
+  else
+    pText = NullString;
+  lText = strlen(pText) + 1;
+
+  lSize = sizeof(long) + lText;
+  pBuffer = (char *) malloc(lSize);
+  if (pBuffer)
+  {
+    pPos = pBuffer;
+
+    memcpy(pPos, &lType, sizeof(long));
+    pPos += sizeof(long);
+
+    lCopy = lSize - (pPos - pBuffer);
+    strmcpy(pPos, pText, lCopy);
+    pPos += lCopy;
+
+    lWritten = lSize;
+    if (cxBuf)
+      result= cxBuf->Write(OwnHandle, PartnerHandle, pBuffer, &lWritten);
+    else
+    {
+      #ifdef DEBUGOUT
+      cout << "-> cxWrite (Own=" << OwnHandle <<", Partner=" << PartnerHandle << ", Size=" << lWritten << ")" << endl;
+      dump(pBuffer, lWritten);
+      #endif
+      result= cxWrite(OwnHandle, PartnerHandle, pBuffer, &lWritten);
+      #ifdef DEBUGOUT
+      cout << "<- cxWrite (Size=" << lWritten << ")=" << result << endl;
+      #endif
+    }
+    if (lWritten != lSize  && result == CXRC_OK)
+      result= CXRC_ERROR;
+    free(pBuffer);
+  }
+  else
+    result= TRC_OUTOFMEMORY;
+
+  return result;
+}
+
 /*---------------------------------------------------------------------------
 
  FUNCTION:  long readTrack01(aMap &Data, char *pCopyBuffer, const char *pBuffer, long lSize)
@@ -3434,6 +3512,42 @@ static long readTrack02(aMap &Data, char *pCopyBuffer, const char *pBuffer, long
 }
 
 
+/*---------------------------------------------------------------------------
+
+ FUNCTION:  long readCooked01(aMap &Data, char *pCopyBuffer, const char *pBuffer, long lSize)
+
+ COMMENTS:  read the Command sent by writeCooked01
+
+ DATE:      09.08.2007
+
+ AUTHOR:    MATERNA Information & Communications  (SteT)
+
+---------------------------------------------------------------------------*/
+static long readCooked01(aMap &Data, char *pCopyBuffer, const char *pBuffer, long lSize)
+{
+  const char *pPos;
+  long lCopy;
+  long result;
+
+  result= TRC_FORMATCORRUPT;
+  pPos = pBuffer + sizeof(long);
+
+  if (pPos <= pBuffer + lSize)
+  {
+    lCopy = lSize - (pPos - pBuffer);
+    if (strmcpy (pCopyBuffer, pPos, lCopy))
+    {
+      Data.set(DN_SCOOKED, pCopyBuffer);
+      #ifdef DEBUGOUT
+        cout << "readCooked01: " << non_null(Data.get(DN_SCOOKED).strObject()) << endl;
+      #endif
+
+      result= CXRC_OK;
+    }
+  }
+  return result;
+}
+
 /*************************************************************************************************
       End Of File  TraceProtocol.cpp
 ************************************************************************************************/
diff --git a/SelfServiceCommon/Services/cpp/TrcServ/src/TrcServ.cpp b/SelfServiceCommon/Services/cpp/TrcServ/src/TrcServ.cpp
index d619d90e..be93aba4 100644
--- a/SelfServiceCommon/Services/cpp/TrcServ/src/TrcServ.cpp
+++ b/SelfServiceCommon/Services/cpp/TrcServ/src/TrcServ.cpp
@@ -583,6 +583,13 @@ void TraceService::Read()
         pApplication->Track02(ClientApp, lInstance, Data);
         forward(lType, Data);
         break;
+      case TT_COOKED01:
+        getApplication(&pApplication, &lInstance, ModuleName, ClientApp);
+        Data.set(DN_SMODULE, ModuleName);
+        Data.set(DN_LINSTANCE, lInstance);
+        pApplication->Cooked01(ClientApp, lInstance, Data);
+        forward(lType, Data);
+        break;
       default:
       {
         getApplication(&pApplication, &lInstance, ModuleName, ClientApp);
diff --git a/SelfServiceCommon/Services/cpp/TrcServ/src/tracetest.cpp b/SelfServiceCommon/Services/cpp/TrcServ/src/tracetest.cpp
index 08b1e947..3cc6269c 100644
--- a/SelfServiceCommon/Services/cpp/TrcServ/src/tracetest.cpp
+++ b/SelfServiceCommon/Services/cpp/TrcServ/src/tracetest.cpp
@@ -1,6 +1,6 @@
 #include "TraceClt.h"
 #include "string.h"
-#include "TraceTestHdl.h"
+// #include "TraceTestHdl.h"
 
 #ifndef __IBMCPP__
 #include <iostream>
@@ -18,14 +18,14 @@ void main(int argc, char** argv)
     openTrace(argv[1]);
   else if (argc > 2)
     return;
-  TraceTest hdl("xxx");
+//   TraceTest hdl("xxx");
   char szBuffer[256];
   do
   {
     std::cout << "Type Tracetext: ";
     std::cin >> szBuffer;
     int length= strlen(szBuffer);
-    hdl.trace(szBuffer);
+//    hdl.trace(szBuffer);
     for(int i= 0; i < 100; i++)
     {
       wrtTraceForTopic("Console", __FILE__, __LINE__, __FUNCTION__, szBuffer);
@@ -41,6 +41,7 @@ void main(int argc, char** argv)
     traceTrackForTopic("Console", __FILE__, __LINE__, __FUNCTION__, 2, szBuffer);
     traceTrackForTopic("Console", __FILE__, __LINE__, __FUNCTION__, 3, szBuffer);
     traceTrackForTopic("Console", __FILE__, __LINE__, __FUNCTION__, 4, szBuffer);
+    writeTraceCooked(szBuffer);
     if(strcmpi(szBuffer, "newline") == 0)
       startNewTraceFileForTopic("Console");
     if(_strnicmp(szBuffer, "move", 4) == 0)
-- 
2.41.0.windows.1

