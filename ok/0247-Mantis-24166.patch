From 9cecb81467761bca44302da1992e216ab3cb99b1 Mon Sep 17 00:00:00 2001
From: jkreierh <jkreierh@90b65887-3827-0410-9a23-83215b262276>
Date: Tue, 14 Aug 2012 09:54:02 +0000
Subject: [PATCH 0247/1000] Mantis 24166

git-svn-id: svn://localhost/SelfServiceCommon/trunk@390 90b65887-3827-0410-9a23-83215b262276
---
 .../Massai/cpp/Controller/inc/mstarter_def.h  |  16 ++-
 .../Massai/cpp/Controller/makefile.mak        |  17 +++
 .../cpp/Controller/src/mstarter_config.cpp    |  11 +-
 .../Massai/cpp/Controller/src/serviceMap.cpp  |  36 ++++---
 .../cpp/Controller/src/setCORBASERVANTS.cpp   | 100 ++++++++++++++++++
 5 files changed, 162 insertions(+), 18 deletions(-)
 create mode 100644 SelfServiceCommon/Massai/cpp/Controller/src/setCORBASERVANTS.cpp

diff --git a/SelfServiceCommon/Massai/cpp/Controller/inc/mstarter_def.h b/SelfServiceCommon/Massai/cpp/Controller/inc/mstarter_def.h
index 64b5a0e4..6d3b2459 100644
--- a/SelfServiceCommon/Massai/cpp/Controller/inc/mstarter_def.h
+++ b/SelfServiceCommon/Massai/cpp/Controller/inc/mstarter_def.h
@@ -9,15 +9,25 @@
  *
  ************************************************************************/
 
-#define FILE_VER_BIN     1,1,1,2
-#define FILE_VER_STR     "FileVersion", "1.1.1.2\0"
+#define FILE_VER_BIN     1,1,1,3
+#define FILE_VER_STR     "FileVersion", "1.1.1.3\0"
 
 /*! \page massaistarter mStarter - Release Notes
  *
- *  @version 1.1.1.2
+ *  @version 1.1.1.3
  *
  *  \section change1 Change history
  *
+ *  \date 14.08.2012 \li V1.1.1.3
+ *                   \li extension - JK Mantis 24145
+ *                        - Port range is now hardcoded to 20002 - 20199
+ *                          ( Configuration can be enabled
+ *                            with ALLOW_TO_CONFIGURE_PORT_RANGE ).
+ *                        - CORBA.SERVANTS.<servant> is no longer set
+ *                          ( Option can be enabled with SETUP_CORBA_SERVANTS ).
+ *                          A separate tool setCORBASERVANTS can be
+ *                          configured in PLATFORM.EXEC for legacy apps.
+ *
  *  \date 10.08.2012 \li V1.1.1.2
  *                   \li bugfix - SteT Mantis 0024162: Suspicious assignment
  *
diff --git a/SelfServiceCommon/Massai/cpp/Controller/makefile.mak b/SelfServiceCommon/Massai/cpp/Controller/makefile.mak
index 83af9210..35b399ef 100644
--- a/SelfServiceCommon/Massai/cpp/Controller/makefile.mak
+++ b/SelfServiceCommon/Massai/cpp/Controller/makefile.mak
@@ -115,5 +115,22 @@ MY_BIN4_LINKLIBS = \
 MY_BIN4_LDFLAGS = \
     -subsystem:console
 
+######################################################################
+
+MY_BIN5 = \
+    $(_BIN)\setCORBASERVANTS.exe
+
+MY_BIN5_USER_LIBS = \
+    $(LIB_SYSTOOLS) \
+    $(LIB_TEXT) \
+    $(LIB_TOOLS) \
+    $(STDUSERLIBS)
+    
+MY_BIN5_LINKLIBS = \
+    $(STDLINKLIBS)
+
+MY_BIN5_OBJS = \
+    $(_OBJ)\setCORBASERVANTS.obj
+
 ######################################################################
 !include $(BUILDROOT)\Build\cpp\makefile.rules.mak
diff --git a/SelfServiceCommon/Massai/cpp/Controller/src/mstarter_config.cpp b/SelfServiceCommon/Massai/cpp/Controller/src/mstarter_config.cpp
index 62aad113..b9902c9a 100644
--- a/SelfServiceCommon/Massai/cpp/Controller/src/mstarter_config.cpp
+++ b/SelfServiceCommon/Massai/cpp/Controller/src/mstarter_config.cpp
@@ -234,6 +234,7 @@ namespace
     return result;
   }
 
+#ifdef ALLOW_TO_CONFIGURE_PORT_RANGE
   unsigned portRangeConfig( char const which[], unsigned def )
   {
     class cfgtype: public nConfig::gcNumber
@@ -275,6 +276,7 @@ namespace
     cfgtype cfg( which, def );
     return cfg.get();
   }
+#endif // #ifdef ALLOW_TO_CONFIGURE_PORT_RANGE
 
 } // namespace
 
@@ -460,8 +462,13 @@ namespace mStarter
   {
     m_service_map.addPortRange
       (
-         portRangeConfig( "lower", 20010 ),
-         portRangeConfig( "upper", 20099 )
+#ifdef ALLOW_TO_CONFIGURE_PORT_RANGE
+         portRangeConfig( "lower", 20002 ),
+         portRangeConfig( "upper", 20199 )
+#else
+         20002,
+         20199
+#endif
       );
     m_substituteEnv.SetBaseEnvVars();
   }
diff --git a/SelfServiceCommon/Massai/cpp/Controller/src/serviceMap.cpp b/SelfServiceCommon/Massai/cpp/Controller/src/serviceMap.cpp
index 48fe3011..4871aadf 100644
--- a/SelfServiceCommon/Massai/cpp/Controller/src/serviceMap.cpp
+++ b/SelfServiceCommon/Massai/cpp/Controller/src/serviceMap.cpp
@@ -12,14 +12,12 @@
  **************************************************************************
 **/
 
-//! For the time being we setup the legacy CORBA ports.
-#define SETUP_CORBA_SERVANTS
+//! Feature configuration: Setup the legacy CORBA ports?
+// #define SETUP_CORBA_SERVANTS
 
-//! Do we implement the SERVANTPORT_LIST macro
+//! Feature configuration: Do we implement the SERVANTPORT_LIST macro?
 // #define SUPPORT_SERVANTPORT_LIST
 
-
-
 #if defined(_MSC_VER)
 // That compiler cannot handle names in debug information > 255 character.
 #pragma warning( disable : 4786 )
@@ -208,10 +206,18 @@ public:
    }
 #endif
 
-   typedef std::string (impl::*substL)( std::string const & );
+
+   /**
+    *
+    * Substitution method type.
+    *
+   **/
+   typedef std::string (impl::*substMethod)( std::string const & );
 
 
    /**
+    *
+    * A substitution method.
     *
     * Substitute strings like "$SERVANTPORT/<servant>", replacing
     * $SERVANTPORT by a number. There will be a bijective mapping between
@@ -280,6 +286,8 @@ public:
 
 #ifdef SUPPORT_SERVANTPORT_LIST
    /**
+    *
+    * A substitution method.
     *
     * Substitute strings like "$SERVANTPORT_LIST" with a comma-separated
     * list of <portnumber>/<servant>. The list would have been built
@@ -347,17 +355,19 @@ public:
 
    /**
     *
-    * Replace macros $SERVANTPORT and $SERVANTPORT_LIST.
+    * Substitute in a list of strings.
+    *
+    * @param src:               The input list of strings.
     *
-    * @param Src:               The input list of strings.
+    * @param method             The method to call for every string.
     *
     * @return:                  The strings with macros replaced.
     *
    **/
-   std::list<std::string> sList
+   std::list<std::string> substList
       (
          std::list<std::string> const & src,
-         substL                         fun
+         substMethod                    method
       )
    {
       std::list<std::string> dst;
@@ -367,7 +377,7 @@ public:
             ++it
          )
       {
-         dst.push_back( (*this.*fun)( *it ) );
+         dst.push_back( (*this.*method)( *it ) );
       }
       return dst;
    }
@@ -442,9 +452,9 @@ std::list<std::string> serviceMap::substPortMacros
    )
 {
    std::list<std::string> tmp =
-      m_impl->sList( in, &serviceMap::impl::subst1 );
+      m_impl->substList( in, &serviceMap::impl::subst1 );
 #ifdef SUPPORT_SERVANTPORT_LIST
-   tmp = m_impl->sList( tmp, &serviceMap::impl::subst2 );
+   tmp = m_impl->substList( tmp, &serviceMap::impl::subst2 );
 #endif
    return tmp;
 }
diff --git a/SelfServiceCommon/Massai/cpp/Controller/src/setCORBASERVANTS.cpp b/SelfServiceCommon/Massai/cpp/Controller/src/setCORBASERVANTS.cpp
new file mode 100644
index 00000000..f352ce92
--- /dev/null
+++ b/SelfServiceCommon/Massai/cpp/Controller/src/setCORBASERVANTS.cpp
@@ -0,0 +1,100 @@
+/**
+ **************************************************************************
+ *
+ * @file setCORBASERVANTS.cpp
+ *
+ * Support legacy application by setting CORBA.SERVANTS elements
+ * in the configuration.
+ *
+ * Enter e.g. this configuration line in PLATFORM.EXE:
+ * "setCORBASERVANTS.exe $SERVANTPORT/aa $SERVANTPORT/bb; wait=terminate"
+ * to create/set entries of CORBA.SERVANTS.aa and CORBA.SERVANTS.bb.
+ *
+ * @author Juergen Kreierhoff
+ *
+ * Copyright (c) 2012 MATERNA Information & Communications
+ *
+ **************************************************************************
+**/
+
+#include "cfgclnt/nConfigBasicText.hpp"
+#include "text/mArgScan.hpp"
+#include "tools/TraceClient.h"
+#include "trc/trace.h"
+
+
+
+int main( int argc, char ** argv )
+{
+   std::string const root( "CORBA.SERVANTS." );
+   char const myname[] = "setCORBASERVANTS";
+   openTrace( myname );
+   argScan args( argc, argv );
+   int argx = 1;
+   char const * port_servant = args.argument( argx );
+   nConfig::basicText m_config( myname );
+   while( port_servant )
+   {
+      // Got a string like "<port>/<servant>"
+      std::string port;
+      // Make port.
+      char c = *port_servant++;
+      while( c && ( c != '/' ) )
+      {
+         port += c;
+         c = *port_servant++;
+      }
+      // Make item to "CORBA.SERVANTS.<servant>".
+      std::string item( root );
+      if( c == '/' )
+      {
+         item += port_servant;
+      }
+      //
+      try
+      {
+         m_config.set( item.c_str(), port.c_str() );
+         writeTrace
+            (
+               HERE, "%s changed to [%s]",
+               item.c_str(), port.c_str()
+            );
+      }
+      catch( ... )
+      {
+         try
+         {
+            m_config.create
+               (
+                  item.c_str(),   // Config item.
+                  "wrl",          // Read-write
+                  "",             // No explanation
+                  port.c_str(),   // Value
+                  10              // Max string length
+               );
+            writeTrace
+               (
+                  HERE, "%s created with [%s]",
+                  item.c_str(), port.c_str()
+               );
+         }
+         catch( ... )
+         {
+            writeTrace( HERE, "could not create %s", item.c_str() );
+         }
+      }
+      //
+      port_servant = args.argument( ++argx );
+   }
+  closeTrace();
+}
+
+
+
+/**
+ **************************************************************************
+ *
+ * End of file
+ *
+ **************************************************************************
+**/
-- 
2.41.0.windows.1

