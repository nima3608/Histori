From 68590fcebd7b16e0b8a1e24d83622af04ad60e74 Mon Sep 17 00:00:00 2001
From: hgering <hgering@90b65887-3827-0410-9a23-83215b262276>
Date: Mon, 5 Jan 2015 08:13:04 +0000
Subject: [PATCH 0633/1077] MANTIS 0035060 mantis 0035060 - New Method
 "GetUserSid" for Wix CustomAction DLL (MConfig_CustomAction.dll)

git-svn-id: svn://localhost/SelfServiceCommon/trunk@804 90b65887-3827-0410-9a23-83215b262276
---
 .../inc/MConfig_CustomAction_def.h            |   4 +-
 .../src/MConfig_CustomAction.cpp              | 168 ++++++++++++++++++
 .../src/MConfig_CustomAction.def              |   1 +
 3 files changed, 171 insertions(+), 2 deletions(-)

diff --git a/SelfServiceCommon/Massai/cpp/Installer_CustomAction/inc/MConfig_CustomAction_def.h b/SelfServiceCommon/Massai/cpp/Installer_CustomAction/inc/MConfig_CustomAction_def.h
index 3bf24838..3bbbb831 100644
--- a/SelfServiceCommon/Massai/cpp/Installer_CustomAction/inc/MConfig_CustomAction_def.h
+++ b/SelfServiceCommon/Massai/cpp/Installer_CustomAction/inc/MConfig_CustomAction_def.h
@@ -1,6 +1,6 @@
 
-#define FILE_VER_BIN     1,0,0,14
-#define FILE_VER_STR     "FileVersion", "1.0.0.14\0"
+#define FILE_VER_BIN     1,0,0,15
+#define FILE_VER_STR     "FileVersion", "1.0.0.15\0"
 
 #define FILEDESCRIPTION  "FileDescription"  ,"MConfig_CustomActio\0"
 #define INTERNALNAME     "InternalName"     ,"MConfig_CustomActio\0"
diff --git a/SelfServiceCommon/Massai/cpp/Installer_CustomAction/src/MConfig_CustomAction.cpp b/SelfServiceCommon/Massai/cpp/Installer_CustomAction/src/MConfig_CustomAction.cpp
index 1a089830..18ba9fbb 100644
--- a/SelfServiceCommon/Massai/cpp/Installer_CustomAction/src/MConfig_CustomAction.cpp
+++ b/SelfServiceCommon/Massai/cpp/Installer_CustomAction/src/MConfig_CustomAction.cpp
@@ -3042,4 +3042,172 @@ LExit:
   return WcaFinalize(er);
 }
 
+extern "C" _declspec(dllexport) UINT __stdcall CA_GetUserSID(MSIHANDLE hInstall)
+{
+  #define USER_PROPERTY L"USER_PROPERTY"
+  #define SID_PROPERTY L"SID_PROPERTY"
+  #define MAX_KEY_LENGTH 256
+  #define MAX_VALUE_NAME 16384
+  
+  std::wstringstream dbstrs;
+  
+  LPWSTR pwzPropertyValue = NULL;
+
+  HRESULT hr = S_OK;
+  UINT er = ERROR_SUCCESS;
+
+  HKEY hKey;
+  HKEY hKeySub;
+  LONG lResult;
+  
+  TCHAR    achKey[MAX_KEY_LENGTH];   // buffer for subkey name
+  DWORD    cbName;                   // size of name string 
+  TCHAR    achClass[MAX_PATH] = TEXT("");  // buffer for class name 
+  DWORD    cchClassName = MAX_PATH;  // size of class string 
+  DWORD    cSubKeys=0;               // number of subkeys 
+  DWORD    cbMaxSubKey;              // longest subkey size 
+  DWORD    cchMaxClass;              // longest class string 
+  DWORD    cValues;              // number of values for key 
+  DWORD    cchMaxValue;          // longest value name 
+  DWORD    cbMaxValueData;       // longest value data 
+  DWORD    cbSecurityDescriptor; // size of security descriptor 
+  FILETIME ftLastWriteTime;      // last write time 
+    
+  DWORD cchValue = MAX_VALUE_NAME; 
+  
+  TCHAR achProfileImagePath[4096] = TEXT("");  // buffer for ProfileImagePath registry value 
+  DWORD cchProfileImagePath;
+  
+  DWORD i;
+  bool userFound = false;
+
+  std::wstring userName;
+  std::wstring sid;
+  
+  hr = WcaInitialize(hInstall, "CA_GetUserSID");
+  dbstrs << L"CA_GetUserSID: WcaInitialize " << std::hex << (int)hr << std::endl;
+  Log_Str(dbstrs);
+  ExitOnFailure(hr, "Failed to initialize");
+
+  hr = WcaGetProperty(L"CustomActionData", &pwzPropertyValue);
+  if( hr != S_OK || pwzPropertyValue==NULL || *pwzPropertyValue==0)
+  {
+    hr = WcaGetProperty( USER_PROPERTY, &pwzPropertyValue);
+    ExitOnFailure(hr, "Failed to get USER_PROPERTY property value");
+    dbstrs << L"CA_GetUserSID: Read " << USER_PROPERTY << " (" << pwzPropertyValue << L")" << std::endl;
+    Log_Str(dbstrs);
+  }
+  
+  
+  if (pwzPropertyValue && *pwzPropertyValue)
+  {
+  
+    userName = pwzPropertyValue;
+    lResult = RegOpenKeyEx(HKEY_LOCAL_MACHINE, L"SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\ProfileList", 0, KEY_READ, &hKey);
+    
+    dbstrs << L"CA_GetUserSID: RegOpenKeyEx: lResult: "  << lResult << L" hKey: " << hKey;
+    Log_Str(dbstrs);
+  
+    lResult = RegQueryInfoKey(
+        hKey,                    // key handle 
+        achClass,                // buffer for class name 
+        &cchClassName,           // size of class string 
+        NULL,                    // reserved 
+        &cSubKeys,               // number of subkeys 
+        &cbMaxSubKey,            // longest subkey size 
+        &cchMaxClass,            // longest class string 
+        &cValues,                // number of values for this key 
+        &cchMaxValue,            // longest value name 
+        &cbMaxValueData,         // longest value data 
+        &cbSecurityDescriptor,   // security descriptor 
+        &ftLastWriteTime);       // last write time 
+ 
+    dbstrs << L"CA_GetUserSID: RegQueryInfoKey: lResult: "  << lResult << L" cSubKeys: " << cSubKeys << L" cbMaxSubKey: " << cbMaxSubKey << L" cValues: " << cValues << L" cchMaxValue: " << cchMaxValue << L" cbMaxValueData: " << cbMaxValueData;
+    Log_Str(dbstrs);
+  
+    if(ERROR_SUCCESS == lResult)
+    {
+  
+      if (cSubKeys > 0)
+      {
+        for (i=0; i<cSubKeys && !userFound; i++) 
+        { 
+          cbName = MAX_KEY_LENGTH;
+          lResult = RegEnumKeyEx(
+              hKey, 
+              i,
+              achKey, 
+              &cbName, 
+              NULL, 
+              NULL, 
+              NULL, 
+              &ftLastWriteTime); 
+          if (ERROR_SUCCESS == lResult) 
+          {
+            dbstrs << L"CA_GetUserSID: RegEnumKeyEx(" << i << L") lResult: " << lResult << L" achKey: " << achKey;
+            Log_Str(dbstrs);
+            
+            lResult = RegOpenKeyEx(hKey, achKey, 0, KEY_READ, &hKeySub);
+            
+            dbstrs << L"CA_GetUserSID: RegOpenKeyEx: lResult: "  << lResult << L" hKeySub: " << hKeySub;
+            Log_Str(dbstrs);
+            if(ERROR_SUCCESS == lResult)
+            {
+
+              lResult = RegQueryValueEx(hKeySub, L"ProfileImagePath", NULL, NULL, (LPBYTE) achProfileImagePath, &cchProfileImagePath);  
+              dbstrs << L"CA_GetUserSID: RegQueryValueEx: lResult: "  << lResult << L" cchProfileImagePath: " <<  cchProfileImagePath;
+              Log_Str(dbstrs);
+              
+              if(ERROR_SUCCESS == lResult)
+              {
+                dbstrs << L"CA_GetUserSID: RegQueryValueEx: achProfileImagePath: "  << achProfileImagePath;
+                Log_Str(dbstrs);
+                
+                std::wstring strProfileImagePath = achProfileImagePath;
+                
+                if((strProfileImagePath.size() >= userName.size()) && (0 == strProfileImagePath.compare(strProfileImagePath.size() - userName.size(), userName.size(), userName)))
+                {
+                  dbstrs << L"CA_GetUserSID: User found: "  << achProfileImagePath << L" in " << achKey;
+                  Log_Str(dbstrs);
+                  userFound = true;
+                  sid = achKey;
+                }
+                
+              }
+
+              lResult = RegCloseKey(hKeySub);
+              dbstrs << L"CA_GetUserSID: RegCloseKeyEx(" << hKeySub << L") lResult: " << lResult;
+              Log_Str(dbstrs);
+            }
+          }
+        }
+      } 
+    
+      lResult = RegCloseKey(hKey);
+      dbstrs << L"CA_GetUserSID: RegCloseKeyEx(" << hKey << L") lResult: " << lResult;
+      Log_Str(dbstrs);
+      
+      if(userFound)
+      {
+        hr = WcaSetProperty(SID_PROPERTY, sid.c_str());
+        dbstrs << L"CA_GetUserSID: SetProperty SID_PROPERTY: " << sid.c_str() << L" Result:" << hr;
+        Log_Str(dbstrs);
+        ExitOnFailure(hr, "Failed to set SID_PROPERTY property value");    
+      }
+      else
+      {
+        dbstrs << L"CA_GetUserSID: The sid for user " << pwzPropertyValue << L" could not be determined from the registry.";
+        Log_Str(dbstrs);
+      }
+    }
+  }   
+  
+
+LExit:
+  if(pwzPropertyValue)
+    ReleaseStr(pwzPropertyValue);
+  er = SUCCEEDED(hr) ? ERROR_SUCCESS : ERROR_INSTALL_FAILURE;
+  return WcaFinalize(er);
+}
+
  
diff --git a/SelfServiceCommon/Massai/cpp/Installer_CustomAction/src/MConfig_CustomAction.def b/SelfServiceCommon/Massai/cpp/Installer_CustomAction/src/MConfig_CustomAction.def
index 178dddb2..55e89de2 100644
--- a/SelfServiceCommon/Massai/cpp/Installer_CustomAction/src/MConfig_CustomAction.def
+++ b/SelfServiceCommon/Massai/cpp/Installer_CustomAction/src/MConfig_CustomAction.def
@@ -28,6 +28,7 @@ EXPORTS
   CA_GetTimeString
   CA_CopyFile
   CA_SetFeatureStateLocal
+  CA_GetUserSID
 
 
 
-- 
2.41.0.windows.1

