From 9bd44a251259e40785d7ebb21dd68f3b1247112c Mon Sep 17 00:00:00 2001
From: tstegema <tstegema@90b65887-3827-0410-9a23-83215b262276>
Date: Thu, 23 Feb 2012 19:43:22 +0000
Subject: [PATCH 0171/1000] Mantis 0022538: Platform_Extension_CUSS_1_2: IDL
 use cuss 1.2 idls

git-svn-id: svn://localhost/SelfServiceCommon/trunk@300 90b65887-3827-0410-9a23-83215b262276
---
 SelfServiceCommon/Interfaces/inc/cuss/orbs.h | 144 ++++++++++---------
 1 file changed, 74 insertions(+), 70 deletions(-)

diff --git a/SelfServiceCommon/Interfaces/inc/cuss/orbs.h b/SelfServiceCommon/Interfaces/inc/cuss/orbs.h
index 68ea3e1b..64d72f12 100644
--- a/SelfServiceCommon/Interfaces/inc/cuss/orbs.h
+++ b/SelfServiceCommon/Interfaces/inc/cuss/orbs.h
@@ -51,9 +51,10 @@ namespace m_datastatus
     const long DS_CORRUPTED                      = 1; /**< Data is corrupted */
     const long DS_INCOMPLETE                     = 2; /**< Data is incomplete */
     const long DS_ZEROLENGTH                     = 3; /**< Data is of length zero */
-    const long DS_DOCUMENT_AUTHENTICATION_FAILED = 4; /**< The document is readable, but has been altered or modified. */
-    const long DS_INVALID                        = 5; /**< The security feature of the document has failed. */
-    const long DS_MISMATCH                       = 6; /**< The document is readable but returned data that is not consistent with the document security information. */
+
+    const long DS_DOCUMENT_AUTHENTICATION_FAILED = 4; /**< Authentication of document data failed */
+    const long DS_INVALID                        = 5; /**< Document read but a security feature is missing */
+    const long DS_MISMATCH                       = 6; /**< Document read but data inconsistent with security feature */
 
     const long DS_TYPES_FOID_ISO                 = 100;   /** ISO track data with FOID Data truncation */
     const long DS_TYPES_PAYMENT_ISO              = 200;   /** ISO track data without truncation */
@@ -169,7 +170,6 @@ namespace m_eventcodes
     const long INITIALIZE_UNAVAILABLE           = 129; /**< State transition CHECK */
     const long AVAILABLE_UNAVAILABLE            = 130; /**< State transition CHECK */
     const long DISABLED_SUSPENDED               = 131; /**< State transition SUSPEND */
-    const long ACTIVE_ACTIVE                    = 132; /**< See Addendum A1.27  */
 
     // component state codes
 
@@ -183,6 +183,12 @@ namespace m_eventcodes
     const long AVAILABLE                        = 208; /**< State AVAILABLE (application) */
     const long ACTIVE                           = 209; /**< State ACTIVE (application) */
     const long BUSY                             = 210; /**< Transient state BUSY (peripheral) */
+    // Additional codes for CUSS 1.2
+
+    const long ACTIVE_ACTIVE                    = 132; /**< State transition ACTIVE (persistent) */
+    const long STATE_EXPLANATION                = 1000;/**< Tell CLA why application is in current state */
+    const long ACTIVE_TRANSFER                  = 1001;/**< Request CLA transver ACTIVE to new application */
+    const long TRANSACTION_EXPLANATION          = 1002;/**< Tell CLA what happened in most recent transaction*/
 };
 
 /**
@@ -192,82 +198,80 @@ namespace m_eventcodes
 
 namespace m_statuscodes
 {
-    const long OK                          =   0; /**< public (private for solicited events) */
-    const long TIMEOUT                     =   1; /**< private (directive related) */
-    const long WRONG_STATE                 =   2; /**< private + platform */
-    const long CANCELLED                   =   3; /**< private */
-    const long SOFTWARE_ERROR              =   4; /**< private + platform */
-    const long ALMOST_OUT_OF_TIME          =   5; /**< private + platform (application related) */
-    const long OUT_OF_SEQUENCE             =   6; /**< private */
-    const long MEDIA_JAMMED                = 101; /**< public */
-    const long MEDIA_MISPLACED             = 102; /**< private + platform (platform only for userless classes) */
-    const long MEDIA_PRESENT               = 103; /**< private */
-    const long MEDIA_ABSENT                = 104; /**< private */
-    const long MEDIA_HIGH                  = 105; /**< public */
-    const long MEDIA_FULL                  = 106; /**< public */
-    const long MEDIA_LOW                   = 107; /**< public */
-    const long MEDIA_EMPTY                 = 108; /**< public */
-    const long MEDIA_DAMAGED               = 109; /**< public */
-    const long MEDIA_INCOMPLETELY_INSERTED = 110; /**< private */
-    const long FORMAT_ERROR                = 201; /**< private + platform (platform only for output classes) */
-    const long LENGTH_ERROR                = 202; /**< private + platform */
-    const long DATA_MISSING                = 203; /**< private + platform */
-    const long PHYSICAL_ERROR              = 204; /**< private + platform */
-    const long DATA_PRESENT                = 205; /**< private */
-    const long CONSUMABLES                 = 301; /**< public */
-    const long HARDWARE_ERROR              = 302; /**< public */
-    const long CRITICAL_SOFTWARE_ERROR     = 303; /**< public */
-    const long NOT_REACHABLE               = 304; /**< public */
-    const long NOT_RESPONDING              = 305; /**< public */
-    const long THRESHOLD_ERROR             = 306; /**< public */
-    const long THRESHOLD_USAGE             = 307; /**< public */
-    const long CONFIGURATION_ERROR         = 308; /**< public */
-    const long SESSION_TIMEOUT             = 309; /**< private + platform (application related) */
-    const long KILL_TIMEOUT                = 310; /**< private + platform (application related) */
-    const long CUSS_MANAGER_REQUEST        = 801; /**< private + platform */
-    const long SP_SYSTEM_MANAGER_REQUEST   = 802; /**< private + platform */
-    const long AL_SYSTEM_MANAGER_REQUEST   = 803; /**< private + platform */
-    const long CL_APPLICATION_REQUEST      = 804; /**< private + platform */
-    const long AL_APPLICATION_REQUEST      = 805; /**< private + platform */
+    const long OK                                =   0; /**< public (private for solicited events) */
+    const long TIMEOUT                           =   1; /**< private (directive related) */
+    const long WRONG_STATE                       =   2; /**< private + platform */
+    const long CANCELLED                         =   3; /**< private */
+    const long SOFTWARE_ERROR                    =   4; /**< private + platform */
+    const long ALMOST_OUT_OF_TIME                =   5; /**< private + platform (application related) */
+    const long OUT_OF_SEQUENCE                   =   6; /**< private */
+    const long MEDIA_JAMMED                      = 101; /**< public */
+    const long MEDIA_MISPLACED                   = 102; /**< private + platform (platform only for userless classes) */
+    const long MEDIA_PRESENT                     = 103; /**< private */
+    const long MEDIA_ABSENT                      = 104; /**< private */
+    const long MEDIA_HIGH                        = 105; /**< public */
+    const long MEDIA_FULL                        = 106; /**< public */
+    const long MEDIA_LOW                         = 107; /**< public */
+    const long MEDIA_EMPTY                       = 108; /**< public */
+    const long MEDIA_DAMAGED                     = 109; /**< public */
+    const long MEDIA_INCOMPLETELY_INSERTED       = 110; /**< private */
+    // definitions for baggage belt
+    const long BAGGAGE_FULL                      = 120; /**< public */
+    const long BAGGAGE_UNDETECTED                = 121; /**< private + platform */
+    const long BAGGAGE_PRESENT                   = 122; /**< private */
+    const long BAGGAGE_ABSENT                    = 123; /**< private */
+    const long BAGGAGE_OVERSIZED                 = 124; /**< private + platform */
+    const long BAGGAGE_ILLICIT_WEIGHT_CHANGE     = 125; /**< private */
+    const long BAGGAGE_READY_FOR_TAKE_IN         = 126; /**< public */
+    const long BAGGAGE_TOO_MANY_BAGS             = 127; /**< private + platform */
+    const long BAGGAGE_DELIVER                   = 128; /**< private */
+    const long BAGGAGE_UNEXPECTED_BAG            = 129; /**< private + platform */
+    // baggage handling codes (extended)
+    const long BAGGAGE_TOO_HIGH                  = 130; /**< private + platform */
+    const long BAGGAGE_TOO_LONG                  = 131; /**< private + platform */
+    const long BAGGAGE_TOO_FLAT                  = 132; /**< private + platform */
+    const long BAGGAGE_TOO_SHORT                 = 133; /**< private + platform */
+    const long BAGGAGE_PARKED                    = 134; /**< private */
+    const long BAGGAGE_INVALID_DATA              = 135; /**< private + platform */
+    const long BAGGAGE_TRANSPORT_FAILED          = 136; /**< private + platform */
+    const long BAGGAGE_WEIGHT_OUT_OF_RANGE       = 137; /**< private + platform */
+
+    const long FORMAT_ERROR                      = 201; /**< private + platform (platform only for output classes) */
+    const long LENGTH_ERROR                      = 202; /**< private + platform (platform only for output classes) */
+    const long DATA_MISSING                      = 203; /**< private + platform (platform only for output classes) */
+    const long PHYSICAL_ERROR                    = 204; /**< NOT used in CUSS 1.0 */
+    const long DATA_PRESENT                      = 205; /**< private */
+    const long CONSUMABLES                       = 301; /**< public */
+    const long HARDWARE_ERROR                    = 302; /**< public */
+    const long CRITICAL_SOFTWARE_ERROR           = 303; /**< public */
+    const long NOT_REACHABLE                     = 304; /**< public */
+    const long NOT_RESPONDING                    = 305; /**< public */
+    const long THRESHOLD_ERROR                   = 306; /**< public */
+    const long THRESHOLD_USAGE                   = 307; /**< public */
+    const long CONFIGURATION_ERROR               = 308; /**< public */
+    const long SESSION_TIMEOUT                   = 309; /**< private + platform (application related) */
+    const long KILL_TIMEOUT                      = 310; /**< private + platform (application related) */
+    const long CUSS_MANAGER_REQUEST              = 801; /**< private + platform */
+    const long SP_SYSTEM_MANAGER_REQUEST         = 802; /**< private + platform */
+    const long AL_SYSTEM_MANAGER_REQUEST         = 803; /**< private + platform */
+    const long CL_APPLICATION_REQUEST            = 804; /**< private + platform */
+    const long AL_APPLICATION_REQUEST            = 805; /**< private + platform */
 
     // base definiton for application generated events (technical)
 
-    const long APPLICATION_TECHNICAL_FIRST = 400; /**< private */
-    const long APPLICATION_TECHNICAL_LAST  = 499; /**< private */
+    const long APPLICATION_TECHNICAL_FIRST       = 400; /**< private */
+    const long APPLICATION_TECHNICAL_LAST        = 499; /**< private */
 
     // base definiton for application generated events (security)
 
-    const long APPLICATION_SECURITY_FIRST  = 500; /**< private */
-    const long APPLICATION_SECURITY_LAST   = 599; /**< private */
+    const long APPLICATION_SECURITY_FIRST        = 500; /**< private */
+    const long APPLICATION_SECURITY_LAST         = 599; /**< private */
 
     // base definiton for application generated events (business)
 
-    const long APPLICATION_BUSINESS_FIRST  = 900; /**< private */
-    const long APPLICATION_BUSINESS_LAST   = 999; /**< private */
-
-    // baggage handling codes
-
-    const long BAGGAGE_FULL                  = 120; /**< public */
-    const long BAGGAGE_UNDETECTED            = 121; /**< public */
-    const long BAGGAGE_PRESENT               = 122; /**< private */
-    const long BAGGAGE_ABSENT                = 123; /**< private */
-    const long BAGGAGE_OVERSIZED             = 124; /**< private */
-    const long BAGGAGE_ILLICIT_WEIGHT_CHANGE = 125; /**< private */
-    const long BAGGAGE_READY_FOR_TAKE_IN     = 126; /**< public */
-    const long BAGGAGE_TOO_MANY_BAGS         = 127; /**< private + platform */
-    const long BAGGAGE_DELIVER               = 128; /**< private */
-    const long BAGGAGE_UNEXPECTED_BAG        = 129; /**< private + platform */
-
-    // baggage handling codes (extended)
+    const long APPLICATION_BUSINESS_FIRST        = 900; /**< private */
+    const long APPLICATION_BUSINESS_LAST         = 999; /**< private */
 
-    const long BAGGAGE_TOO_HIGH              = 130; /**< private + platform */
-    const long BAGGAGE_TOO_LONG              = 131; /**< private + platform */
-    const long BAGGAGE_TOO_FLAT              = 132; /**< private + platform */
-    const long BAGGAGE_TOO_SHORT             = 133; /**< private + platform */
-    const long BAGGAGE_PARKED                = 134; /**< private */
-    const long BAGGAGE_INVALID_DATA          = 135; /**< private + platform */
-    const long BAGGAGE_TRANSPORT_FAILED      = 136; /**< private + platform */
-    const long BAGGAGE_WEIGHT_OUT_OF_RANGE   = 137; /**< private + platform */
 
 
 
-- 
2.41.0.windows.1

