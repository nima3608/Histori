From 0366f18cd662232153bb800099c909e4ac35f80a Mon Sep 17 00:00:00 2001
From: tstegema <tstegema@90b65887-3827-0410-9a23-83215b262276>
Date: Tue, 8 Nov 2011 18:04:47 +0000
Subject: [PATCH 0095/1000] replacement for trace.dll, trchdl.dll and
 trcserv.exe: process writes traces to file, using same interface as trace.dll
 and trchdl.dll needs no trcserv.exe trace.dll trcHDL.dll traceNoConfig.dll
 trcHDLNoConfig.dll traces.lib tracehdls.lib traceCompletes.lib
 tracehdlCompletes.lib traceNoConfigs.lib tracehdlNoConfigs.lib
 traceNoConfigCompletes.lib tracehdlNoConfigCompletes.lib

git-svn-id: svn://localhost/SelfServiceCommon/trunk@212 90b65887-3827-0410-9a23-83215b262276
---
 .../Interfaces/inc/Tools/localtrace.h         | 14 +-------
 .../Massai/cpp/Trace/inc/TraceCmd.h           |  3 ++
 .../Massai/cpp/Trace/inc/TraceCmdQueue.h      |  5 +++
 .../Massai/cpp/Trace/inc/TraceConfig.h        |  2 +-
 .../Massai/cpp/Trace/inc/TraceProcessor.h     |  6 +++-
 .../Massai/cpp/Trace/inc/TraceSession.h       |  2 ++
 .../Massai/cpp/Trace/src/TraceCmd.cpp         | 16 +++++++++
 .../Massai/cpp/Trace/src/TraceCmdQueue.cpp    | 35 +++++++++++++++++--
 .../Massai/cpp/Trace/src/TraceConfig.cpp      |  5 ++-
 .../Massai/cpp/Trace/src/TraceFormat.cpp      |  8 ++---
 .../Massai/cpp/Trace/src/TraceMgr.cpp         |  6 ++++
 .../Massai/cpp/Trace/src/TraceProcessor.cpp   | 27 ++++++++++++--
 .../Massai/cpp/Trace/src/TraceSession.cpp     | 21 ++++++-----
 13 files changed, 115 insertions(+), 35 deletions(-)

diff --git a/SelfServiceCommon/Interfaces/inc/Tools/localtrace.h b/SelfServiceCommon/Interfaces/inc/Tools/localtrace.h
index 3715df7f..7284818c 100644
--- a/SelfServiceCommon/Interfaces/inc/Tools/localtrace.h
+++ b/SelfServiceCommon/Interfaces/inc/Tools/localtrace.h
@@ -4,19 +4,7 @@
 #pragma message("including: " __FILE__)
 #endif
 
-#define TRC_OK                    0
-#define TRC_ERROR                 1
-
-#define __FUNCTION__ ""
-
-#define MajorError_HERE         1,__FILE__,__LINE__,__FUNCTION__
-#define MinorError_HERE         2,__FILE__,__LINE__,__FUNCTION__
-#define MajorWarning_HERE       3,__FILE__,__LINE__,__FUNCTION__
-#define MinorWarning_HERE       4,__FILE__,__LINE__,__FUNCTION__
-#define BasicRuntime_HERE       5,__FILE__,__LINE__,__FUNCTION__
-#define BasicProcess_HERE       6,__FILE__,__LINE__,__FUNCTION__
-#define SecondaryRuntime_HERE   7,__FILE__,__LINE__,__FUNCTION__
-#define SecondaryFrequent_HERE  8,__FILE__,__LINE__,__FUNCTION__
+#include "trc/tracedef.h"
 
 namespace MASSAI
 {
diff --git a/SelfServiceCommon/Massai/cpp/Trace/inc/TraceCmd.h b/SelfServiceCommon/Massai/cpp/Trace/inc/TraceCmd.h
index 53c994a4..78b3fd88 100644
--- a/SelfServiceCommon/Massai/cpp/Trace/inc/TraceCmd.h
+++ b/SelfServiceCommon/Massai/cpp/Trace/inc/TraceCmd.h
@@ -42,6 +42,7 @@ namespace MASSAI
       TRC_ACTIVATE_TOPIC,
       TRC_DEACTIVATE_TOPIC,
       TRC_CHANGEDIRECTORY,
+      TRC_NEWDAY,
     };
     class TraceSession;
     class TraceCmd
@@ -56,6 +57,7 @@ namespace MASSAI
           long dataSize);
         TraceCmd(Command cmd, int hdl, TraceSession* pSession);
         TraceCmd(Command cmd, int hdl, Materna::MSSD::eventSemaphore* pEvent);
+        TraceCmd(Command cmd, Timestamp ts);
 
         void init(const char* pData, long dataSize);
 
@@ -63,6 +65,7 @@ namespace MASSAI
         Command cmd;
         long traceLevel;
         ThreadId threadId;
+        long threadIndex;
         long line;
         int hdl;
         std::string file;
diff --git a/SelfServiceCommon/Massai/cpp/Trace/inc/TraceCmdQueue.h b/SelfServiceCommon/Massai/cpp/Trace/inc/TraceCmdQueue.h
index afc52f41..58d4b2f5 100644
--- a/SelfServiceCommon/Massai/cpp/Trace/inc/TraceCmdQueue.h
+++ b/SelfServiceCommon/Massai/cpp/Trace/inc/TraceCmdQueue.h
@@ -20,6 +20,7 @@
 
 #pragma warning(disable:4786)
 
+#include "TraceSystem.h"
 #include "systools/matThread.hpp"
 #include "systools/mEventSem.hpp"
 #include "systools/mMutexCS.h"
@@ -44,6 +45,9 @@ namespace MASSAI
         void process(TraceCmd* pCmd);
         void postprocess(TraceCmd* pCmd);
         TraceCmd* getNext();
+        void initNewDay();
+        TraceCmd* getNewDay();
+
         void function();
 
         typedef std::list<TraceCmd*> CommandList;
@@ -53,6 +57,7 @@ namespace MASSAI
         bool m_stop;
         bool m_started;
         int m_waitCount;
+        Timestamp m_currentday;
         TraceProcessor& m_processor;
 
     };
diff --git a/SelfServiceCommon/Massai/cpp/Trace/inc/TraceConfig.h b/SelfServiceCommon/Massai/cpp/Trace/inc/TraceConfig.h
index b42f5e29..eb3090d3 100644
--- a/SelfServiceCommon/Massai/cpp/Trace/inc/TraceConfig.h
+++ b/SelfServiceCommon/Massai/cpp/Trace/inc/TraceConfig.h
@@ -93,7 +93,7 @@ namespace MASSAI
         void setHandle(int hdl);
         void setSessionPath(const std::string& path);
 
-        boost::filesystem::path getBackupPath(const boost::filesystem::path& base);
+        boost::filesystem::path getBackupPath(const boost::filesystem::path& base, const Timestamp& ts);
         std::string getNewFilename();
         boost::filesystem::path getFullPath() const;
         long getFileSizeLimit() const;
diff --git a/SelfServiceCommon/Massai/cpp/Trace/inc/TraceProcessor.h b/SelfServiceCommon/Massai/cpp/Trace/inc/TraceProcessor.h
index 39571a91..4be52849 100644
--- a/SelfServiceCommon/Massai/cpp/Trace/inc/TraceProcessor.h
+++ b/SelfServiceCommon/Massai/cpp/Trace/inc/TraceProcessor.h
@@ -34,10 +34,11 @@ namespace MASSAI
       public:
         TraceProcessor(TraceCommonConfig& config);
         ~TraceProcessor();
-        void process(const TraceCmd& cmd);
+        void process(TraceCmd& cmd);
         void start();
         void stop();
       private:
+        void setThreadIndex(TraceCmd& cmd);
         void initBaseSession(const std::string& sessionId);
         void initSession(TraceSession* pSession);
         void close(int hdl);
@@ -50,11 +51,14 @@ namespace MASSAI
 
         typedef std::set<TraceSession*> SessionSet;
         typedef std::map<std::string, TraceSession*> SessionMap;
+        typedef std::map<long, long> ThreadMap;
 
         TraceCommonConfig& m_config;
         SessionSet m_sessionSet;
         SessionMap m_sessionMap;
         TraceSession m_baseSession;
+        long m_threadCounter;
+        ThreadMap m_threadMap;
     };
   }
 }
diff --git a/SelfServiceCommon/Massai/cpp/Trace/inc/TraceSession.h b/SelfServiceCommon/Massai/cpp/Trace/inc/TraceSession.h
index 638f33e5..45c4bc20 100644
--- a/SelfServiceCommon/Massai/cpp/Trace/inc/TraceSession.h
+++ b/SelfServiceCommon/Massai/cpp/Trace/inc/TraceSession.h
@@ -21,6 +21,7 @@
 #pragma warning(disable:4786)
 
 #include "TraceConfig.h"
+#include "TraceSystem.h"
 #include "boost/filesystem/path.hpp"
 #include <string>
 #include <ostream>
@@ -40,6 +41,7 @@ namespace MASSAI
         void init();
         void open();
         void close();
+        void close(const Timestamp& ts);
         void process(const TraceCmd& cmd);
         const std::string& getSessionId() const;
         void setSessionId(const std::string& sessionId);
diff --git a/SelfServiceCommon/Massai/cpp/Trace/src/TraceCmd.cpp b/SelfServiceCommon/Massai/cpp/Trace/src/TraceCmd.cpp
index 41c6cc17..10b18578 100644
--- a/SelfServiceCommon/Massai/cpp/Trace/src/TraceCmd.cpp
+++ b/SelfServiceCommon/Massai/cpp/Trace/src/TraceCmd.cpp
@@ -84,6 +84,22 @@ namespace MASSAI
     {
       init(0, 0);
     }
+    TraceCmd::TraceCmd(Command cmd, Timestamp ts):
+      cmd(cmd),
+      traceLevel(-1),
+      line(0),
+      hdl(0),
+      file(),
+      function(),
+      topic(),
+      pSession(0),
+      pEvent(0),
+      data()
+    {
+      threadId= getThreadId();
+      timestamp= ts;
+    }
+
     void TraceCmd::init(const char* pData, long dataSize)
     {
       timestamp= getTimestamp();
diff --git a/SelfServiceCommon/Massai/cpp/Trace/src/TraceCmdQueue.cpp b/SelfServiceCommon/Massai/cpp/Trace/src/TraceCmdQueue.cpp
index e3d69af4..8deab93d 100644
--- a/SelfServiceCommon/Massai/cpp/Trace/src/TraceCmdQueue.cpp
+++ b/SelfServiceCommon/Massai/cpp/Trace/src/TraceCmdQueue.cpp
@@ -17,11 +17,11 @@
 #include "TraceCmdQueue.h"
 #include "TraceProcessor.h"
 #include "TraceCmd.h"
+#include "trc/tracedef.h"
 #include "TraceTrace.h"
 #include "TraceSystem.h"
 #include "systools/mAutoMutexCS.h"
 #include "systools/mSysException.hpp"
-#include "trc/tracedef.h"
 
 
 #include <list>
@@ -102,8 +102,13 @@ namespace MASSAI
             matThreadRC rc= start();
             if(rc == THREADRC_OK)
             {
+              tracetraceText(BasicRuntime_HERE, "started trace processing thread");
               m_started= true;
             }
+            else
+            {
+              tracetraceText(MajorError_HERE, "starting trace processing thread failed");
+            }
           }
         }
       }
@@ -155,17 +160,41 @@ namespace MASSAI
       }
       return pCmd;
     }
+    void TraceCmdQueue::initNewDay()
+    {
+      m_currentday= getTimestamp();
+    }
+    TraceCmd* TraceCmdQueue::getNewDay()
+    {
+      TraceCmd* result= 0;
+      Timestamp now= getTimestamp();
+      if(m_currentday.year != now.year
+        || m_currentday.month != now.month
+        || m_currentday.day != now.day)
+      {
+        result= new TraceCmd(TRC_NEWDAY, m_currentday);
+        m_currentday= now;
+      }
+      return result;
+    }
+
     void TraceCmdQueue::function()
     {
       mSysException::standardException guard;
       try
       {
+        tracetraceText(BasicRuntime_HERE, "started trace processing");
         m_processor.start();
+        initNewDay();
         while(!m_stop)
         {
           for(;;)
           {
-            TraceCmd* pCmd= getNext();
+            TraceCmd* pCmd= getNewDay();
+            if(pCmd == 0)
+            {
+              pCmd= getNext();
+            }
             if(pCmd == 0)
             {
               break;
@@ -182,7 +211,7 @@ namespace MASSAI
           }
           if(!m_stop)
           {
-            m_event.wait();
+            m_event.wait(5000);
           }
         }
         m_processor.stop();
diff --git a/SelfServiceCommon/Massai/cpp/Trace/src/TraceConfig.cpp b/SelfServiceCommon/Massai/cpp/Trace/src/TraceConfig.cpp
index 02ec2828..8331ab50 100644
--- a/SelfServiceCommon/Massai/cpp/Trace/src/TraceConfig.cpp
+++ b/SelfServiceCommon/Massai/cpp/Trace/src/TraceConfig.cpp
@@ -188,14 +188,13 @@ namespace MASSAI
       }
       return result;
     }
-    fs::path TraceConfig::getBackupPath(const fs::path& base)
+    fs::path TraceConfig::getBackupPath(const fs::path& base, const Timestamp& ts)
     {
       fs::path result= base;
       try
       {
-        Timestamp timestamp= getTimestamp();
         TraceFormat& fmt= getTraceFormat();
-        fs::path relative(fmt.backupPath(timestamp), fs::native);
+        fs::path relative(fmt.backupPath(ts), fs::native);
         result= base/relative;
       }
       catch(std::exception& ex)
diff --git a/SelfServiceCommon/Massai/cpp/Trace/src/TraceFormat.cpp b/SelfServiceCommon/Massai/cpp/Trace/src/TraceFormat.cpp
index a91571df..0862dbd9 100644
--- a/SelfServiceCommon/Massai/cpp/Trace/src/TraceFormat.cpp
+++ b/SelfServiceCommon/Massai/cpp/Trace/src/TraceFormat.cpp
@@ -60,11 +60,11 @@ namespace MASSAI
     {
       std::string result= sessionId;
       char buffer[100];
-      sprintf(buffer, "_%04d_%04d%02d%02d_%02d%02d%02d_%03d.trc",
-        processId,
+      sprintf(buffer, "_%04d%02d%02d_%02d%02d%02d_%03d_%04d.trc",
         timestamp.year, timestamp.month, timestamp.day,
         timestamp.hour, timestamp.minute, timestamp.second,
-        timestamp.milliseconds);
+        timestamp.milliseconds,
+        processId);
       result += buffer;
       return result;
     }
@@ -77,7 +77,7 @@ namespace MASSAI
 
       // date
       char buffer[100];
-      sprintf(buffer, "%02d.%02d.%04d\t%02d:%02d:%02d,%03d\t%04d\t",
+      sprintf(buffer, "%02d.%02d.%04d\t%02d:%02d:%02d,%03d\t%02d\t",
         timestamp.day, timestamp.month, timestamp.year,
         timestamp.hour, timestamp.minute, timestamp.second,
         timestamp.milliseconds,
diff --git a/SelfServiceCommon/Massai/cpp/Trace/src/TraceMgr.cpp b/SelfServiceCommon/Massai/cpp/Trace/src/TraceMgr.cpp
index 22a65798..c5d2d930 100644
--- a/SelfServiceCommon/Massai/cpp/Trace/src/TraceMgr.cpp
+++ b/SelfServiceCommon/Massai/cpp/Trace/src/TraceMgr.cpp
@@ -16,6 +16,8 @@
 
 #include "TraceCmd.h"
 #include "TraceMgr.h"
+#include "trc/tracedef.h"
+#include "TraceTrace.h"
 
 namespace
 {
@@ -36,12 +38,14 @@ namespace MASSAI
     }
     void TraceMgr::init(const char* pszSession)
     {
+      tracetrace(BasicRuntime_HERE, "init (%.100s)", pszSession);
       send(new TraceCmd(TRC_INIT, 0, pszSession, -1));
     }
     int TraceMgr::open(const char* pszSession)
     {
       TraceSession* pSession= new TraceSession(m_config);
       int hdl= reinterpret_cast<int>(pSession);
+      tracetrace(BasicRuntime_HERE, "open (%.100s)=(%d)", pszSession, hdl);
       pSession->setHandle(hdl);
       pSession->setSessionId(pszSession);
       send(new TraceCmd(TRC_OPEN, hdl, pSession));
@@ -49,9 +53,11 @@ namespace MASSAI
     }
     void TraceMgr::close(int handle)
     {
+      tracetrace(BasicRuntime_HERE, "close (%d)", handle);
       Materna::MSSD::eventSemaphore event;
       send(new TraceCmd(TRC_CLOSE, handle, &event));
       event.wait();
+      tracetrace(BasicRuntime_HERE, "close done (%d)", handle);
     }
     void TraceMgr::send(TraceCmd* pCmd)
     {
diff --git a/SelfServiceCommon/Massai/cpp/Trace/src/TraceProcessor.cpp b/SelfServiceCommon/Massai/cpp/Trace/src/TraceProcessor.cpp
index b9f2e120..dbdb77c8 100644
--- a/SelfServiceCommon/Massai/cpp/Trace/src/TraceProcessor.cpp
+++ b/SelfServiceCommon/Massai/cpp/Trace/src/TraceProcessor.cpp
@@ -26,8 +26,11 @@ namespace MASSAI
       m_config(config),
       m_sessionSet(),
       m_sessionMap(),
-      m_baseSession(config)
+      m_baseSession(config),
+      m_threadCounter(0),
+      m_threadMap()
     {
+      m_threadMap[0]= 0;
       m_baseSession.setHandle(0);
     }
     TraceProcessor::~TraceProcessor()
@@ -46,8 +49,23 @@ namespace MASSAI
     void TraceProcessor::stop()
     {}
 
-    void TraceProcessor::process(const TraceCmd& cmd)
+    void TraceProcessor::setThreadIndex(TraceCmd& cmd)
     {
+      ThreadMap::iterator it= m_threadMap.find(cmd.threadId);
+      if(it != m_threadMap.end())
+      {
+        cmd.threadIndex= (*it).second;
+      }
+      else
+      {
+        m_threadCounter++;
+        cmd.threadIndex= m_threadCounter;
+        m_threadMap[cmd.threadId]= m_threadCounter;
+      }
+    }
+    void TraceProcessor::process(TraceCmd& cmd)
+    {
+      setThreadIndex(cmd);
       switch(cmd.cmd)
       {
         case TRC_INIT:
@@ -71,6 +89,11 @@ namespace MASSAI
           forwardAll(cmd);
           break;
         }
+        case TRC_NEWDAY:
+        {
+          forwardAll(cmd);
+          break;
+        }
         case TRC_CHANGELEVEL:
         case TRC_ACTIVATE_TOPIC:
         case TRC_DEACTIVATE_TOPIC:
diff --git a/SelfServiceCommon/Massai/cpp/Trace/src/TraceSession.cpp b/SelfServiceCommon/Massai/cpp/Trace/src/TraceSession.cpp
index 03bce1b2..530d8c02 100644
--- a/SelfServiceCommon/Massai/cpp/Trace/src/TraceSession.cpp
+++ b/SelfServiceCommon/Massai/cpp/Trace/src/TraceSession.cpp
@@ -105,6 +105,10 @@ namespace MASSAI
       getTraceFormat().text(getOut(), getThreadId(), getTimestamp(), -1, "TRACE", TOPIC_HERE, "init");
     }
     void TraceSession::close()
+    {
+      close(getTimestamp());
+    }
+    void TraceSession::close(const Timestamp& ts)
     {
       std::ostream* pOut= m_pOut.get();
       if(pOut)
@@ -112,7 +116,7 @@ namespace MASSAI
         try
         {
           m_pOut= std::auto_ptr<std::ostream>();
-          fs::path backup= m_config.getBackupPath(m_path);
+          fs::path backup= m_config.getBackupPath(m_path, ts);
           fs::create_directories(backup);
           fs::path source= m_path / m_filename;
           backup/= m_filename;
@@ -204,6 +208,7 @@ namespace MASSAI
           break;
         }
         case TRC_NEWFILE:
+        case TRC_NEWDAY:
         {
           newFile(cmd);
           break;
@@ -235,7 +240,7 @@ namespace MASSAI
         // pOut->seekp(-1, std::ios::end);
         if(pOut->tellp() > m_config.getFileSizeLimit())
         {
-          close();
+          close(cmd.timestamp);
           open();
         }
       }
@@ -265,14 +270,14 @@ namespace MASSAI
     {
       std::ostream& out= getOut();
       TraceFormat& fmt= getTraceFormat();
-      fmt.text(out, cmd.threadId, cmd.timestamp, cmd.traceLevel,
+      fmt.text(out, cmd.threadIndex, cmd.timestamp, cmd.traceLevel,
         cmd.topic, cmd.file, cmd.line, cmd.function, cmd.data);
     }
     void TraceSession::dump(const TraceCmd& cmd)
     {
       std::ostream& out= getOut();
       TraceFormat& fmt= getTraceFormat();
-      fmt.dump(out, cmd.threadId, cmd.timestamp, cmd.traceLevel,
+      fmt.dump(out, cmd.threadIndex, cmd.timestamp, cmd.traceLevel,
         cmd.topic, cmd.file, cmd.line, cmd.function, cmd.data);
     }
     void TraceSession::cooked(const TraceCmd& cmd)
@@ -284,9 +289,9 @@ namespace MASSAI
     {
       std::ostream& out= getOut();
       TraceFormat& fmt= getTraceFormat();
-      fmt.text(out, cmd.threadId, cmd.timestamp, cmd.traceLevel,
+      fmt.text(out, cmd.threadIndex, cmd.timestamp, cmd.traceLevel,
         cmd.topic, cmd.file, cmd.line, cmd.function, "start new file");
-      close();
+      close(cmd.timestamp);
       open();
     }
     void TraceSession::move(const TraceCmd& cmd)
@@ -295,7 +300,7 @@ namespace MASSAI
       TraceFormat& fmt= getTraceFormat();
       std::string trace= "moveFile: ";
       trace += cmd.data;
-      fmt.text(out, cmd.threadId, cmd.timestamp, -1, "TRACE", cmd.file,
+      fmt.text(out, cmd.threadIndex, cmd.timestamp, -1, "TRACE", cmd.file,
         cmd.line, cmd.function, trace);
       try
       {
@@ -321,7 +326,7 @@ namespace MASSAI
       TraceFormat& fmt= getTraceFormat();
       std::string trace= "TraceDirectory changed: ";
       trace += cmd.data;
-      fmt.text(out, cmd.threadId, cmd.timestamp, -1, "TRACE", cmd.file,
+      fmt.text(out, cmd.threadIndex, cmd.timestamp, -1, "TRACE", cmd.file,
         cmd.line, cmd.function, trace);
       try
       {
-- 
2.41.0.windows.1

