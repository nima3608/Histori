From 81588cfe274a61c64c72c003c11d3cc48f88ae15 Mon Sep 17 00:00:00 2001
From: tstegema <tstegema@90b65887-3827-0410-9a23-83215b262276>
Date: Wed, 29 Jun 2011 16:39:50 +0000
Subject: [PATCH 0129/1077] TrcServ; V2.3.20.5; write less traces

git-svn-id: svn://localhost/SelfServiceCommon/trunk@159 90b65887-3827-0410-9a23-83215b262276
---
 .../Services/cpp/TrcServ/inc/TrcServ_def.h           | 10 ++++++----
 .../Services/cpp/TrcServ/src/TrcServ.cpp             | 12 ++++++------
 2 files changed, 12 insertions(+), 10 deletions(-)

diff --git a/SelfServiceCommon/Services/cpp/TrcServ/inc/TrcServ_def.h b/SelfServiceCommon/Services/cpp/TrcServ/inc/TrcServ_def.h
index 55d7f18b..c761c20c 100644
--- a/SelfServiceCommon/Services/cpp/TrcServ/inc/TrcServ_def.h
+++ b/SelfServiceCommon/Services/cpp/TrcServ/inc/TrcServ_def.h
@@ -12,11 +12,13 @@
 
 /*! \page TrcServ.exe - Trace Service
  *
- *  @version V 2.3.20.4
+ *  @version V 2.3.20.5
  *
  *  \section change1 Change history
  *
  *
+ *  \date 29.06.2011 \li V 2.3.20.5 SteT write less traces
+ *
  *  \date 01.06.2011 \li V 2.3.20.4 SteT Mantis 0019429: create sub directories in unc paths
  *
  *  \date 17.05.2011 \li V 2.3.20.3 GiT removed flush after each line (performance problems with virus scanner)
@@ -48,15 +50,15 @@
  *
  *  \date 19.04.2007 \li V 2.3.10.0 SteT EDB 27417: encrypt credit card data in trace
  *
- *  \date 04.01.2007 \li V 2.3.9.0  SteT Absturz vom TrcServ (Invalid Handle)
+ *  \date 04.01.2007 \li V 2.3.9.0  SteT TrcServ crash (Invalid Handle)
  *
  *  \date 27.11.2006 \li V 2.3.8.0  SteT
  *                   \li Resource Version added
  *
  */
 
-#define FILE_VER_BIN     2,3,20,4
-#define FILE_VER_STR     "FileVersion", "2.3.20.4\0"
+#define FILE_VER_BIN     2,3,20,5
+#define FILE_VER_STR     "FileVersion", "2.3.20.5\0"
 
 #define FILEDESCRIPTION  "FileDescription"  ,"Trace Service\0"
 #define INTERNALNAME     "InternalName"     ,"TrcServ.exe\0"
diff --git a/SelfServiceCommon/Services/cpp/TrcServ/src/TrcServ.cpp b/SelfServiceCommon/Services/cpp/TrcServ/src/TrcServ.cpp
index 56e1b14e..cca063f6 100644
--- a/SelfServiceCommon/Services/cpp/TrcServ/src/TrcServ.cpp
+++ b/SelfServiceCommon/Services/cpp/TrcServ/src/TrcServ.cpp
@@ -452,7 +452,7 @@ void TraceService::Read()
   if (!iEnd)
   {
     rc = ReadTrace(lServerHandle, &ClientApp, &lType, Data, rcError);
-    trcstream(BasicRuntime, HERE, &StdApplication) << "Client: " << ClientApp << " has send message type: (" << getTypeName(lType) << ")";
+    trcstream(SecondaryFrequent, HERE, &StdApplication) << "Client: " << ClientApp << " has send message type: (" << getTypeName(lType) << ")";
   }
   if (rc == CXRC_OK && !iEnd)
   {
@@ -593,7 +593,7 @@ void TraceService::Read()
       default:
       {
         getApplication(&pApplication, &lInstance, ModuleName, ClientApp);
-        trcstream(BasicRuntime, HERE, &StdApplication) << pApplication->getName().strObject()
+        trcstream(SecondaryFrequent, HERE, &StdApplication) << pApplication->getName().strObject()
           << "|" << ModuleName.strObject()
           << "(" << lInstance << ") has send message type: " << lType;
         char buf[1000];
@@ -1011,7 +1011,7 @@ void TraceService::forward(long lType, const aMap& Data)
       case CXRC_WRONG_PARTNER:
       case CXRC_WRONG_HANDLE:
         Delete.set(*pItem, 1);
-        trcstream(BasicRuntime, HERE, &StdApplication) << "Listener Lost (Id: " << pItem->numObject() << ") ";
+        trcstream(MinorError, HERE, &StdApplication) << "Listener Lost (Id: " << pItem->numObject() << ") ";
 
     }
   }
@@ -1199,9 +1199,9 @@ long TraceService::Init02(long ClientHandle, const aMap& Data)
   // if (rc == CXRC_OK) // && Handle == ClientHandle)
   {
     ServerName(InstanceName, lInstance, ApplicationName);
-    //trcstream(BasicRuntime, HERE, &StdApplication) << "-> cxGetHandle (Name=" << InstanceName.strObject() << ")";
+    //trcstream(SecondaryRuntime, HERE, &StdApplication) << "-> cxGetHandle (Name=" << InstanceName.strObject() << ")";
     //rc = cxGetHandle(&ServerHandle, InstanceName.strObject());
-    //trcstream(BasicRuntime, HERE, &StdApplication) << "<- cxGetHandle (Handle=" << ServerHandle << ")=" << getErrorName(rc);
+    //trcstream(SecondaryRuntime, HERE, &StdApplication) << "<- cxGetHandle (Handle=" << ServerHandle << ")=" << getErrorName(rc);
     //if (rc != CXRC_OK)
     //  ServerHandle = 0;
     ServerHandle= ClientHandle;
@@ -1622,7 +1622,7 @@ BasicTraceFile* TraceService::newTraceFile(const aObject& FileName, long lMaxFil
     {
       result = newBasicTraceFile(cfgTraceDir.currentValue(), pszFileName, lMaxFileSize, lFileGenerations, lAppend, lExtended, lWidth, lType, lShortLine);
       if (!result->openFile())
-        trcstream(BasicRuntime, HERE, &StdApplication) << "Error while opening file: " << result->getFileName();
+        trcstream(MinorError, HERE, &StdApplication) << "Error while opening file: " << result->getFileName();
 
       Files.set(pszFileName, (long) result);
     }
-- 
2.41.0.windows.1

