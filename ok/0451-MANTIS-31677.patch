From 997c8b4172e12b1a122a41e3fd893b3e25a3e217 Mon Sep 17 00:00:00 2001
From: jkreierh <jkreierh@90b65887-3827-0410-9a23-83215b262276>
Date: Tue, 25 Mar 2014 15:26:31 +0000
Subject: [PATCH 0451/1000] MANTIS 31677 Mantis 31677: ConveyorDev for CUSS 1.3
 - Add completionType UNKNOWN - Beautify new struct's case - Add
 "ConveyorMoveCommands.txt" to illustrate baggage movements

git-svn-id: svn://localhost/SelfServiceCommon/trunk@658 90b65887-3827-0410-9a23-83215b262276
---
 .../Massai/idl/Massai/ConveyorDev.idl         | 42 ++++++++++---------
 .../idl/Massai/ConveyorMoveCommands.txt       | 31 ++++++++++++++
 2 files changed, 53 insertions(+), 20 deletions(-)
 create mode 100644 SelfServiceCommon/Massai/idl/Massai/ConveyorMoveCommands.txt

diff --git a/SelfServiceCommon/Massai/idl/Massai/ConveyorDev.idl b/SelfServiceCommon/Massai/idl/Massai/ConveyorDev.idl
index a9214c17..b99469cb 100644
--- a/SelfServiceCommon/Massai/idl/Massai/ConveyorDev.idl
+++ b/SelfServiceCommon/Massai/idl/Massai/ConveyorDev.idl
@@ -41,7 +41,7 @@ module conveyordev
 {
    const string interface_version = "1.1";
 
-   enum ModulePosition
+   enum modulePosition
    {
      INSERTION_BELT,      // module handles data of baggage on insertion belt
      VERIFICATION_BELT,   // module handles data of baggage on verification belt
@@ -51,44 +51,44 @@ module conveyordev
      ALL_BELTS            // module handles data of baggage on insertion belt, verification belt and parking belt
    };
 
-   enum ModuleType
+   enum moduleType
    {
      SCALE,               // get weight of baggage
      BCR,                 // get barcodes of tags on baggage
      RFID_READER,         // get data from rfid-tags on baggage
-     RFID_WRITER          // set data to rfid-tags on baggage   
+     RFID_WRITER          // set data to rfid-tags on baggage
    };
 
-   struct ModuleCharacteristic
+   struct moduleCharacteristic
    {
-     ModuleType type;
-     ModulePosition position;
+     moduleType type;
+     modulePosition position;
    };
 
-   typedef sequence<ModuleCharacteristic> ModuleList;
+   typedef sequence<moduleCharacteristic> moduleList;
 
-   struct BeltCharacteristic
+   struct beltCharacteristic
    {
      long maxBags;     // maximum number of bags a conveyor can handle
      long maxWeight;   // maximal weight of baggage in gramm
      long maxLength;   // maximal length of baggage in mm
    };
 
-   struct ExtendedCharacteristic
+   struct extendedCharacteristic
    {
-     BeltCharacteristic insertionBeltCharacteristic;    
-     BeltCharacteristic verificationBeltCharacteristic;
-     BeltCharacteristic parkingBeltCharacteristic;
-     ModuleList modules;
+     beltCharacteristic insertionBeltCharacteristic;
+     beltCharacteristic verificationBeltCharacteristic;
+     beltCharacteristic parkingBeltCharacteristic;
+     moduleList modules;
      boolean barrierCapable;              /* Indicates if the conveyor has a physical barrier control
                                              controlling access to the insertion point. */
      boolean userInterferenceCapable;     /* conveyor system can detect and report user
                                              interference events which are _not_ considered critical to health,
                                              safety and security */
      boolean safetyIntrusionCapable;      /*  conveyor system can detect and report safety intrusions
-                                              which are considered critical to health, safety and security */          
-     boolean baggageSortingSystemPresent; 
-                                          
+                                              which are considered critical to health, safety and security */
+     boolean baggageSortingSystemPresent;
+
      long maxWidth;    // maximal width of baggage in mm
      long maxHeight;   // maximal height of baggage in mm
    };
@@ -106,8 +106,10 @@ module conveyordev
       CMPL_COMPLETED,               /**< Command has been completed,
                                          no error */
       CMPL_CANCELLED,               /**< Command has been cancelled */
-      CMPL_ABORTED                  /**< Command has been aborted, e.g.
-                                         coupon ejected by printer */
+      CMPL_ABORTED,                 /**< Command has been aborted,
+                                         bag status is unchanged */
+      CMPL_UNKNOWN                  /**< Command has been aborted,
+                                         bag status is unknown */
     };
 
    /**
@@ -145,9 +147,9 @@ module conveyordev
       ERR_PIECE_TOO_HEAVY,          /**< Piece is too heavy. */
       ERR_TRANSPORT_ABORTED,        /**< Piece transport not started. */
       ERR_EMERGENCY_STOP,           /**< conveyor emergency stop button pressed */
-      ERR_USER_INTERFERENCE,        /**< user interference which are _not_ considered 
+      ERR_USER_INTERFERENCE,        /**< user interference which are _not_ considered
                                          critical to health, safety and security */
-      ERR_SAFETY_INTRUSION          /**< safety intrusions which are considered 
+      ERR_SAFETY_INTRUSION          /**< safety intrusions which are considered
                                          critical to health, safety and security */
    };
 
diff --git a/SelfServiceCommon/Massai/idl/Massai/ConveyorMoveCommands.txt b/SelfServiceCommon/Massai/idl/Massai/ConveyorMoveCommands.txt
new file mode 100644
index 00000000..9e55dc3d
--- /dev/null
+++ b/SelfServiceCommon/Massai/idl/Massai/ConveyorMoveCommands.txt
@@ -0,0 +1,31 @@
+   Conveyor Move Commands
+   ======================
+
+
+Insert/Remove
+
+   |                            A  A                        A
+   | CMD_PIECE_ACCEPT           |  | CMD_PIECE_RETURN       |
+   V                            |  |                        |
+                                |                           |
+Weighed                         |                           |
+                                | CMD_PIECE_RETURN (1)      |
+   |                            |                           |
+   | CMD_PIECE_FORWARD          |                           | CMD_PARKED_RETURN (?)
+   V                            |                           |
+                                                            |
+Verified                                                    |
+                                                            |
+   |                            A                           |
+   | CMD_PIECE_FORWARD          | CMD_PARKING_RETURN (1)    |
+   V                            |                           |
+
+Parked
+
+   |
+   | CMD_PARKED_FORWARD (all)
+   | CMD_PARKING_FORWARD (1)
+   V
+
+Takeaway
+
-- 
2.41.0.windows.1

