From bb19a6d472328c6c6523091ed27741cdb06b1784 Mon Sep 17 00:00:00 2001
From: tstegema <tstegema@90b65887-3827-0410-9a23-83215b262276>
Date: Wed, 11 Sep 2013 18:32:15 +0000
Subject: [PATCH 0474/1076] systools.lib V1.0.0.9

Mantis 0028873: GPPDev: Custom KPM150H RFID
fixed trace level for mSysIO



git-svn-id: svn://localhost/SelfServiceCommon/trunk@582 90b65887-3827-0410-9a23-83215b262276
---
 .../Massai/cpp/Systools/src/mSysIOW32.cpp          | 14 +++++++-------
 1 file changed, 7 insertions(+), 7 deletions(-)

diff --git a/SelfServiceCommon/Massai/cpp/Systools/src/mSysIOW32.cpp b/SelfServiceCommon/Massai/cpp/Systools/src/mSysIOW32.cpp
index e80012f3..f5b9619b 100644
--- a/SelfServiceCommon/Massai/cpp/Systools/src/mSysIOW32.cpp
+++ b/SelfServiceCommon/Massai/cpp/Systools/src/mSysIOW32.cpp
@@ -149,9 +149,9 @@ namespace
     }
     else
     {
-      m_trc.writeTrace(BasicRuntime_HERE, "read done (%d) from (%s)",
+      m_trc.writeTrace(BasicProcess_HERE, "read done (%d) from (%s)",
         readCount, m_name.c_str());
-      m_trc.dumpTrace(MinorError_HERE, readCount, buffer);
+      m_trc.dumpTrace(SecondaryRuntime_HERE, readCount, buffer);
       data.append(buffer, readCount);
       totalRead += readCount;
     }
@@ -206,7 +206,7 @@ namespace
       do
       {
         DWORD bufferSize = READ_BUFFER_SIZE;
-        m_trc.writeTrace(BasicRuntime_HERE, "read (%d)/(%d) from (%s)",
+        m_trc.writeTrace(BasicProcess_HERE, "read (%d)/(%d) from (%s)",
           getBufferSize(useSize, size, totalRead), bufferSize, m_name.c_str());
         if(!ReadFile(m_handle, buffer, bufferSize, 0, &overlapped.data))
         {
@@ -304,8 +304,8 @@ namespace
     Overlapped overlapped(m_name, m_trc);
     if(overlapped.data.hEvent != INVALID_HANDLE_VALUE)
     {
-      m_trc.writeTrace(BasicRuntime_HERE, "write (%d) to (%s)", data.size(), m_name.c_str());
-      m_trc.dumpTrace(MinorError_HERE, data.size(), data.data());
+      m_trc.writeTrace(BasicProcess_HERE, "write (%d) to (%s)", data.size(), m_name.c_str());
+      m_trc.dumpTrace(SecondaryRuntime_HERE, data.size(), data.data());
       if(!WriteFile(m_handle, data.data(), data.size(), 0, &overlapped.data))
       {
         DWORD writeResult = GetLastError();
@@ -325,7 +325,7 @@ namespace
             }
             else
             {
-              m_trc.writeTrace(MinorWarning_HERE, "written (%d)/(%d) to (%s)",
+              m_trc.writeTrace(BasicProcess_HERE, "written (%d)/(%d) to (%s)",
                 written, data.size(), m_name.c_str());
             }
           }
@@ -345,7 +345,7 @@ namespace
         }
         else
         {
-          m_trc.writeTrace(MinorWarning_HERE, "written (%d)/(%d) to (%s)",
+          m_trc.writeTrace(BasicProcess_HERE, "written (%d)/(%d) to (%s)",
             written, data.size(), m_name.c_str());
         }
       }
-- 
2.41.0.windows.1

