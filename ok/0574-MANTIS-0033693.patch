From 1b26ddb1537b53d5aee037cf6f202857079e56d2 Mon Sep 17 00:00:00 2001
From: kboeluek <kboeluek@90b65887-3827-0410-9a23-83215b262276>
Date: Wed, 10 Sep 2014 16:56:33 +0000
Subject: [PATCH 0574/1077] MANTIS 0033693 change Move BillingService
 repository

- repository moved

git-svn-id: svn://localhost/SelfServiceCommon/trunk@722 90b65887-3827-0410-9a23-83215b262276
---
 .../cpp/BillingService/inc/BillingC_def.h     |  31 -
 .../cpp/BillingService/inc/BillingClient.h    |  86 ---
 .../cpp/BillingService/inc/BillingS_def.h     |  61 --
 .../Massai/cpp/BillingService/inc/File.h      |  31 -
 .../cpp/BillingService/inc/PrinterRsp.h       |  25 -
 .../Massai/cpp/BillingService/inc/path.h      |  38 -
 .../Massai/cpp/BillingService/inc/server.h    |  71 --
 .../cpp/BillingService/inc/sessionlist.h      |  80 ---
 .../Massai/cpp/BillingService/makefile.mak    | 108 ---
 .../Massai/cpp/BillingService/res/BillingC.rc | 108 ---
 .../Massai/cpp/BillingService/res/BillingS.rc | 108 ---
 .../cpp/BillingService/src/BillingClient.cpp  | 670 ------------------
 .../Massai/cpp/BillingService/src/File.cpp    | 431 -----------
 .../cpp/BillingService/src/PrinterRsp.cpp     | 157 ----
 .../cpp/BillingService/src/TestBilling.cpp    | 130 ----
 .../Massai/cpp/BillingService/src/billing.cpp |  72 --
 .../cpp/BillingService/src/clientmain.cpp     | 193 -----
 .../Massai/cpp/BillingService/src/main.cpp    |  86 ---
 .../Massai/cpp/BillingService/src/path.cpp    |  74 --
 .../Massai/cpp/BillingService/src/server.cpp  | 254 -------
 .../cpp/BillingService/src/sessionlist.cpp    | 316 ---------
 .../cpp/BillingService/static/makefile.mak    |  35 -
 22 files changed, 3165 deletions(-)
 delete mode 100644 SelfServiceCommon/Massai/cpp/BillingService/inc/BillingC_def.h
 delete mode 100644 SelfServiceCommon/Massai/cpp/BillingService/inc/BillingClient.h
 delete mode 100644 SelfServiceCommon/Massai/cpp/BillingService/inc/BillingS_def.h
 delete mode 100644 SelfServiceCommon/Massai/cpp/BillingService/inc/File.h
 delete mode 100644 SelfServiceCommon/Massai/cpp/BillingService/inc/PrinterRsp.h
 delete mode 100644 SelfServiceCommon/Massai/cpp/BillingService/inc/path.h
 delete mode 100644 SelfServiceCommon/Massai/cpp/BillingService/inc/server.h
 delete mode 100644 SelfServiceCommon/Massai/cpp/BillingService/inc/sessionlist.h
 delete mode 100644 SelfServiceCommon/Massai/cpp/BillingService/makefile.mak
 delete mode 100644 SelfServiceCommon/Massai/cpp/BillingService/res/BillingC.rc
 delete mode 100644 SelfServiceCommon/Massai/cpp/BillingService/res/BillingS.rc
 delete mode 100644 SelfServiceCommon/Massai/cpp/BillingService/src/BillingClient.cpp
 delete mode 100644 SelfServiceCommon/Massai/cpp/BillingService/src/File.cpp
 delete mode 100644 SelfServiceCommon/Massai/cpp/BillingService/src/PrinterRsp.cpp
 delete mode 100644 SelfServiceCommon/Massai/cpp/BillingService/src/TestBilling.cpp
 delete mode 100644 SelfServiceCommon/Massai/cpp/BillingService/src/billing.cpp
 delete mode 100644 SelfServiceCommon/Massai/cpp/BillingService/src/clientmain.cpp
 delete mode 100644 SelfServiceCommon/Massai/cpp/BillingService/src/main.cpp
 delete mode 100644 SelfServiceCommon/Massai/cpp/BillingService/src/path.cpp
 delete mode 100644 SelfServiceCommon/Massai/cpp/BillingService/src/server.cpp
 delete mode 100644 SelfServiceCommon/Massai/cpp/BillingService/src/sessionlist.cpp
 delete mode 100644 SelfServiceCommon/Massai/cpp/BillingService/static/makefile.mak

diff --git a/SelfServiceCommon/Massai/cpp/BillingService/inc/BillingC_def.h b/SelfServiceCommon/Massai/cpp/BillingService/inc/BillingC_def.h
deleted file mode 100644
index 4c102cf7..00000000
--- a/SelfServiceCommon/Massai/cpp/BillingService/inc/BillingC_def.h
+++ /dev/null
@@ -1,31 +0,0 @@
-#define FILE_VER_BIN     1,0,1,0
-#define FILE_VER_STR     "FileVersion", "1.0.1.0"
-
-/*!
-\file
-\brief Release Notes - Billingclnt.exe
-
-\page Billingclnt.exe Release Notes - Billingclnt.exe - test client for billing.exe
-
-@version 1.0.1.0
-
-\section changehistory Change history
-
-Billing.exe
-
-\version 1.0.1.0
-\li 23.01.2014
-\li change SteT Mantis 0030519: Report successfully checked bags to billing log ...
-- added methods for conveyor and SVG/PDF-Printer
-
-\version 1.0.0.0
-\li Initial Version
-*/
-
-
-#define FILEDESCRIPTION  "FileDescription",  "Billing Client"
-#define INTERNALNAME     "InternalName",     "Billingclnt.exe"
-#define ORIGINALFILENAME "OriginalFilename", "Billingclnt.exe"
-#define LEGALTRADEMARKS  "LegalTrademarks",  ""
-
-
diff --git a/SelfServiceCommon/Massai/cpp/BillingService/inc/BillingClient.h b/SelfServiceCommon/Massai/cpp/BillingService/inc/BillingClient.h
deleted file mode 100644
index 28aef8b5..00000000
--- a/SelfServiceCommon/Massai/cpp/BillingService/inc/BillingClient.h
+++ /dev/null
@@ -1,86 +0,0 @@
-// CORBA client class
-//  history:    ts 11.07.2001 adapted to BillingService (msHostClient.h)
-//              ts 04.03.2003 use AlternateBillingService
-//
-
-#ifndef BILLINGCLIENT_H
-#define BILLINGCLIENT_H
-#if defined(SHOW_INCLUDE_FILES)
-#pragma message("including: " __FILE__)
-#endif
-
-#include "massaiCorba/corbaclnt.h"
-#include "billingService.h"
-#include "billingService_skel.h"
-#include <string>
-
-
-/** Definition of a single host session */
-class billingSession
-{
-  public:
-    /** open a new billing session
-        @return Zero if Ok, error code otherwise */
-    long open();
-
-    /** close current billing session
-        @return Zero if Ok, error code otherwise */
-    long close();
-
-    /** add ATB response to the BillingService */
-    long addATBResponse(const char *pszResponse);
-
-    /** add BTP response to the BillingService */
-    long addBTPResponse(const char *pszResponse);
-
-    /** add GPP response to the BillingService */
-    long addGPPResponse(const char *pszResponse);
-
-    /** add ATB response to the BillingService */
-    long addATBResponse(const char *type, long used);
-
-    /** add BTP response to the BillingService */
-    long addBTPResponse(const char *type, long used);
-
-    /** add GPP response to the BillingService */
-    long addGPPResponse(const char *type, long used);
-
-    /** add conveyor response to the BillingService */
-    long addCONResponse(long delivered);
-
-    /** class constructor
-        @param pszAppName - The name of the application
-        @param pszBrand - The brand of the session
-        @param pszAppType - The type of the application
-        @param pszKioskID - The kiosk identifier as passed by CUSS platform
-        @param pszLocation - 3-Letter code of loaction   */
-    billingSession(const char* pszAppName,
-                   const char* pszBrand,
-                   const char* pszAppType,
-                   const char* pszKioskID,
-                   const char* pszLocation);
-
-    /** class destructor */
-    ~billingSession();
-
-  private:
-    static const char* pBilling;
-    static const char* pLocalBilling;
-    static const char* pAlternateBilling;
-
-    Long                 lSessionId;
-    Long                 lAlternateSessionId;
-    Long                 lLocalSessionId;
-
-    corbaClient<BillingAccess::BillingService> *pHost;
-    corbaClient<BillingAccess::BillingService> *pAlternateHost;
-    corbaClient<BillingAccess::BillingService> *pLocalHost;
-
-    std::string AppName;
-    std::string Brand;
-    std::string AppType;
-    std::string KioskID;
-    std::string Location;
-};
-
-#endif // BILLINGCLIENT_H
diff --git a/SelfServiceCommon/Massai/cpp/BillingService/inc/BillingS_def.h b/SelfServiceCommon/Massai/cpp/BillingService/inc/BillingS_def.h
deleted file mode 100644
index f4099f8d..00000000
--- a/SelfServiceCommon/Massai/cpp/BillingService/inc/BillingS_def.h
+++ /dev/null
@@ -1,61 +0,0 @@
-#define FILE_VER_BIN     1,0,1,0
-#define FILE_VER_STR     "FileVersion", "1.0.1.0"
-
-/*!
-\file
-\brief Release Notes - Billing.exe
-
-\page Billing.exe Release Notes - Billing.exe - Billing Service
-
-@version 1.0.1.0
-
-\section changehistory Change history
-
-Billing.exe
-
-\version 1.0.1.0
-\li 23.01.2014
-\li change SteT Mantis 0030519: Report successfully checked bags to billing log ...
-- added methods for conveyor and SVG/PDF-Printer
-
-\version 1.0.0.9
-\li 04.11.2013
-\li bugfix SteT Mantis 0026690: Billing: add attribute Brand to Billing-Data
-\li write brand to file
-
-\version 1.0.0.8
-\li 16.07.2013
-\li SteT Mantis 0026690: Billing: add attribute Brand to Billing-Data
-
-\version 1.0.0.7
-\li 25.04.2013
-\li SteT Mantis 0026967: BillingService: recognize non print AEA messages
-
-\version 1.0.0.6
-\li 07.11.2012
-\li SteT Mantis 0024999: service creates very large files (VC10)
-
-\version 1.0.0.5
-\li 16.12.2011
-\li SteT Mantis 0021947: mstarter: problems at shutdown\n
-  shutdown on SIGBREAK, ignore CTRL_LOGOFF_EVENT
-
-\version 1.0.0.4
-\li 27.04.2006
-\li SteT EDB 26755: BillingService parsed die Antwort vom GPP nicht
-
-\version 1.0.0.3
-\li 27.04.2006
-\li SteT EDB 26729: Remove CTRL_BREAK
-
-\version 1.0.0.2
-\li 25.10.2006
-\li SteT EDB 26693: Abgleich des neuen CC Streams SelfServicePlatform mit den alten Streams
-\li limit trace output
-
-*/
-
-#define FILEDESCRIPTION  "FileDescription",  "Billing Service"
-#define INTERNALNAME     "InternalName",     "Billing.exe"
-#define ORIGINALFILENAME "OriginalFilename", "Billing.exe"
-#define LEGALTRADEMARKS  "LegalTrademarks",  ""
diff --git a/SelfServiceCommon/Massai/cpp/BillingService/inc/File.h b/SelfServiceCommon/Massai/cpp/BillingService/inc/File.h
deleted file mode 100644
index 194fe7e9..00000000
--- a/SelfServiceCommon/Massai/cpp/BillingService/inc/File.h
+++ /dev/null
@@ -1,31 +0,0 @@
-// Write Billing to File
-
-#if !defined(FILE_H)
-#define FILE_H
-#if defined(SHOW_INCLUDE_FILES)
-#pragma message("including: " __FILE__)
-#endif
-
-#include <string>
-#include <list>
-
-class Response
-{
-  public:
-    std::string Rsp;
-    bool bParseError;
-    Response(const std::string& setRsp, bool setbParseError);
-    Response(const std::string& type, long used);
-};
-
-typedef std::list<Response> ResponseList;
-
-void write(const std::string& KioskId, const std::string& Brand,
-  const std::string& Location, const std::string& AppName,
-  const std::string& AppType, time_t start, time_t end, bool bClosed,
-  const ResponseList& ATBResponse, int iATBUsed,
-  const ResponseList& GPPResponse, int iGPPUsed,
-  const ResponseList& BTPResponse, int iBTPUsed,
-  int baggagesDelivered);
-
-#endif
diff --git a/SelfServiceCommon/Massai/cpp/BillingService/inc/PrinterRsp.h b/SelfServiceCommon/Massai/cpp/BillingService/inc/PrinterRsp.h
deleted file mode 100644
index b016a66d..00000000
--- a/SelfServiceCommon/Massai/cpp/BillingService/inc/PrinterRsp.h
+++ /dev/null
@@ -1,25 +0,0 @@
-//---------------------------------------------------------------------------
-//
-//  file:       PrinterRsp.h
-//
-//  purpose:    Parse printer response
-//
-//  date:       16.07.2001
-//
-//  author:     Materna Information & Communications (TS)
-//
-//---------------------------------------------------------------------------
-
-#if !defined(PRINTERRSP_H)
-#define PRINTERRSP_H
-#if defined(SHOW_INCLUDE_FILES)
-#pragma message("including: " __FILE__)
-#endif
-
-
-int parseBTP(int& iUsed, const char* pResponse);
-int parseATB(int& iUsed, const char* pResponse);
-int parseGPP(int& iUsed, const char* pResponse);
-
-
-#endif // PRINTERRSP_H
\ No newline at end of file
diff --git a/SelfServiceCommon/Massai/cpp/BillingService/inc/path.h b/SelfServiceCommon/Massai/cpp/BillingService/inc/path.h
deleted file mode 100644
index a1ca7e00..00000000
--- a/SelfServiceCommon/Massai/cpp/BillingService/inc/path.h
+++ /dev/null
@@ -1,38 +0,0 @@
-//---------------------------------------------------------------------------
-//
-//  file:       path.h
-//
-//  purpose:    create the directories for a file
-//
-//  date:       05.07.04
-//
-//  author:     Materna Information & Communications (TS)
-//
-//---------------------------------------------------------------------------
-#ifndef PATH_H_INCLUDED
-#define PATH_H_INCLUDED
-#if defined(SHOW_INCLUDE_FILES)
-#pragma message("including: " __FILE__)
-#endif
-
-/*---------------------------------------------------------------------------
-
- FUNCTION:  int checkPath(char* pszFilename)
-
- COMMENTS:  guarantee that the path for the FileName exists
-            create the directories up to the last backslash
-
- DATE:      05.07.04
-
- AUTHOR:    Materna Information & Communications (TS)
-
- RESULT:    0: path exists
-            1: can not create path mkdir failed
-
----------------------------------------------------------------------------*/
-
-int checkPath(char *pszFilename);
-
-#endif
-/* end of file path.h */
-
diff --git a/SelfServiceCommon/Massai/cpp/BillingService/inc/server.h b/SelfServiceCommon/Massai/cpp/BillingService/inc/server.h
deleted file mode 100644
index eaf98b58..00000000
--- a/SelfServiceCommon/Massai/cpp/BillingService/inc/server.h
+++ /dev/null
@@ -1,71 +0,0 @@
-// Servant definitions
-
-#if !defined(SERVER_H)
-#define SERVER_H
-#if defined(SHOW_INCLUDE_FILES)
-#pragma message("including: " __FILE__)
-#endif
-
-#include "massaiCorba/orbIncDefs.h"
-
-#include "BillingService.h"
-#include "BillingService_skel.h"
-
-#include "sessionList.h"
-#include "cfgclnt/nConfigSelection.hpp"
-
-class BillingServiceServant: public  POA_BillingAccess::BillingService,
-                             private sessionList
-{
-  public:
-    Long openInvoice(const char* appName, const char*pszBrand,
-      const char* appType, const char* kioskID, const char* location);
-    Long closeInvoice(Long sessionId);
-
-    Long addATBResponse(Long sessionId, const char* response);
-    Long addBTPResponse(Long sessionId, const char* response);
-    Long addGPPResponse(Long sessionId, const char* response);
-
-    Long addATBNonAEAResponse(Long sessionId, const char* type, Long used);
-    Long addBTPNonAEAResponse(Long sessionId, const char* type, Long used);
-    Long addGPPNonAEAResponse(Long sessionId, const char* type, Long used);
-    Long addCONResponse(Long sessionId, Long delivered);
-
-     BillingServiceServant();
-    ~BillingServiceServant();
-
-  private:
-    ORB_var pOrb;
-};
-
-class KioskId
-{
-  public:
-    static const nConfig::selection useLocalHostNameList[];
-    class cfgUseHostname: public nConfig::gcSelection
-    {
-      public:
-        /** Constructor */
-        cfgUseHostname(const char *pszItem, const char *pszUser);
-      private:
-        void create(char const*& Rights, char const*& Expl,
-          long& DefNdx, nConfig::selection const*& Begin,
-          nConfig::selection const*& End);
-    };
-
-    static void readhostname();
-    static bool useLocalHost();
-    static const char* getKioskId(const char* kioskId);
-
-  private:
-    enum CONSTS
-    {
-      MAXHOSTNAMESIZE= 512
-    };
-    static char hostname[MAXHOSTNAMESIZE+1];
-    static bool read;
-    static bool useHostname;
-
-};
-
-#endif
diff --git a/SelfServiceCommon/Massai/cpp/BillingService/inc/sessionlist.h b/SelfServiceCommon/Massai/cpp/BillingService/inc/sessionlist.h
deleted file mode 100644
index 4819e8dd..00000000
--- a/SelfServiceCommon/Massai/cpp/BillingService/inc/sessionlist.h
+++ /dev/null
@@ -1,80 +0,0 @@
-// interface to session control
-
-#ifndef SESSIONLIST_H
-#define SESSIONLIST_H
-#if defined(SHOW_INCLUDE_FILES)
-#pragma message("including: " __FILE__)
-#endif
-
-#include "billingService.h"
-#include "billingService_skel.h"
-#include "file.h"
-#include <string>
-
-class session
-{
-  public:
-    long     sessionId();
-    void     sessionId(long id);
-
-    session* nextSession();
-    void     nextSession(session* p);
-
-    void     addATBResponse(const char* pResponse);
-    void     addGPPResponse(const char* pResponse);
-    void     addBTPResponse(const char* pResponse);
-
-    void     addATBResponse(const char* type, long used);
-    void     addGPPResponse(const char* type, long used);
-    void     addBTPResponse(const char* type, long used);
-    void     addCONResponse(long delivered);
-
-    void     close();
-    int      eq(const char* appName, const char* brand,
-               const char* appType, const char* kioskID,
-               const char* location);
-
-    session(const char* appName, const char* brand,
-            const char* appType, const char* kioskID,
-            const char* location);
-    ~session();
-
-  private:
-    session*   pNext;
-    long       lId;
-
-    std::string KioskId;
-    std::string Location;
-    std::string AppName;
-    std::string Brand;
-    std::string AppType;
-    ResponseList ATBResponse;
-    ResponseList GPPResponse;
-    ResponseList BTPResponse;
-
-    time_t     start;
-    time_t     end;
-    int        iATBUsed;
-    int        iGPPUsed;
-    int        iBTPUsed;
-    int        baggagesDelivered;
-    bool       bClosed;
-};
-
-class sessionList
-{
-  public:
-    long setSession(const char* appName, const char* brand,
-      const char* appType, const char* kioskID, const char* location);
-    session *getSession(long sessionId);
-    void rmSession(long sessionId);
-
-    sessionList();
-    ~sessionList();
-
-  private:
-    long findSession(const char* appName, const char* brand,
-      const char* appType, const char* kioskID, const char* location);
-};
-
-#endif
diff --git a/SelfServiceCommon/Massai/cpp/BillingService/makefile.mak b/SelfServiceCommon/Massai/cpp/BillingService/makefile.mak
deleted file mode 100644
index e082cfb7..00000000
--- a/SelfServiceCommon/Massai/cpp/BillingService/makefile.mak
+++ /dev/null
@@ -1,108 +0,0 @@
-######################################################################
-#
-# /vob/SelfServiceCommon/Massai/cpp/BillingService/makefile.mak
-#
-######################################################################
-
-!include $(BUILDROOT)\Build\cpp\makefile.common.mak
-
-MY_CFLAGS = \
-    $(MY_CFLAGS_3) \
-    -I$(_GEN) \
-    $(INC_INTERFACES) \
-    $(INC_ACETAO) \
-    $(INC_REGEX)
-
-######################################################################
-
-MY_LIB1 = $(LIB_DST_BILLING)
-
-MY_LIB1_OBJS = \
-    $(_OBJ)\BillingService.obj  \
-    $(_OBJ)\BillingService_skel.obj \
-    $(_OBJ)\billing.obj
-
-MY_LIB1_GEN_DIRS = \
-    $(GEN_MASSAI_COMMON)
-
-######################################################################
-
-MY_BIN1 = \
-    $(_BIN)\Billing.exe
-
-MY_BIN1_OBJS = \
-    $(_OBJ)\BillingService.obj \
-    $(_OBJ)\BillingService_skel.obj \
-    $(_OBJ)\File.obj \
-    $(_OBJ)\main.obj \
-    $(_OBJ)\path.obj \
-    $(_OBJ)\PrinterRsp.obj \
-    $(_OBJ)\server.obj \
-    $(_OBJ)\sessionlist.obj
-
-MY_BIN1_RES = \
-    $(_OBJ)\BillingS.res
-
-MY_BIN1_USER_LIBS = \
-    $(LIB_MASSAI) \
-    $(LIB_MCORBA) \
-    $(LIB_MCFGCLNT) \
-    $(LIB_TRACE) \
-    $(LIB_SYSTOOLS) \
-    $(LIB_TOOLS)
-
-MY_BIN1_LINKLIBS = \
-    $(SYS_ACETAO)
-
-MY_BIN1_GEN_DIRS = \
-    $(GEN_MASSAI_COMMON)
-
-######################################################################
-
-MY_BIN2 = \
-    $(_BIN)\BillingClnt.exe
-
-MY_BIN2_OBJS = \
-    $(_OBJ)\BillingClient.obj \
-    $(_OBJ)\BillingService.obj \
-    $(_OBJ)\clientmain.obj
-
-MY_BIN2_RES = \
-    $(_OBJ)\BillingC.res
-
-MY_BIN2_USER_LIBS = \
-    $(LIB_MASSAI) \
-    $(LIB_MCORBA) \
-    $(LIB_MCFGCLNT)
-
-MY_BIN2_LINKLIBS = \
-    $(SYS_ACETAO)
-
-MY_BIN2_GEN_DIRS = \
-    $(GEN_MASSAI_COMMON)
-
-######################################################################
-
-MY_BIN3 = \
-    $(_BIN)\TestBilling.exe
-
-MY_BIN3_OBJS = \
-    $(_OBJ)\TestBilling.obj \
-    $(_OBJ)\PrinterRsp.obj
-
-MY_BIN3_RES = \
-    $(_OBJ)\BillingS.res
-
-MY_BIN3_USER_LIBS = \
-    $(LIB_TRACE) \
-    $(LIB_REGEX)
-
-MY_BIN3_LINKLIBS = \
-    $(SYS_ACETAO)
-
-MY_BIN3_GEN_DIRS = \
-    $(GEN_MASSAI_COMMON)
-
-######################################################################
-
-!include $(BUILDROOT)\Build\cpp\makefile.rules.mak
diff --git a/SelfServiceCommon/Massai/cpp/BillingService/res/BillingC.rc b/SelfServiceCommon/Massai/cpp/BillingService/res/BillingC.rc
deleted file mode 100644
index 69608e0d..00000000
--- a/SelfServiceCommon/Massai/cpp/BillingService/res/BillingC.rc
+++ /dev/null
@@ -1,108 +0,0 @@
-//Microsoft Developer Studio generated resource script.
-//
-// #include "resource.h"
-#include "Global_def.h"
-#include "BillingC_def.h"
-
-#define APSTUDIO_READONLY_SYMBOLS
-/////////////////////////////////////////////////////////////////////////////
-//
-// Generated from the TEXTINCLUDE 2 resource.
-//
-#include "windows.h"
-
-/////////////////////////////////////////////////////////////////////////////
-#undef APSTUDIO_READONLY_SYMBOLS
-
-/////////////////////////////////////////////////////////////////////////////
-// German (Germany) resources
-
-#if !defined(AFX_RESOURCE_DLL) || defined(AFX_TARG_DEU)
-#ifdef _WIN32
-LANGUAGE LANG_GERMAN, SUBLANG_GERMAN
-#pragma code_page(1252)
-#endif //_WIN32
-
-#ifndef _MAC
-/////////////////////////////////////////////////////////////////////////////
-//
-// Version
-//
-
-VS_VERSION_INFO VERSIONINFO
- FILEVERSION FILE_VER_BIN
- PRODUCTVERSION PRODUCT_VER_BIN
- FILEFLAGSMASK 0x3fL
-#ifdef _DEBUG
- FILEFLAGS 0x1L
-#else
- FILEFLAGS 0x0L
-#endif
- FILEOS 0x40004L
- FILETYPE 0x2L
- FILESUBTYPE 0x0L
-BEGIN
-    BLOCK "StringFileInfo"
-    BEGIN
-        BLOCK "040704b0"
-        BEGIN
-            VALUE COMPANY
-			VALUE FILEDESCRIPTION
-			VALUE FILE_VER_STR
-			VALUE INTERNALNAME
-			VALUE COPYRIGHT
-			VALUE LEGALTRADEMARKS
-			VALUE ORIGINALFILENAME
-			VALUE PRODUCT
-            VALUE PRODUCT_VER_STR 
-        END
-    END
-    BLOCK "VarFileInfo"
-    BEGIN
-        VALUE "Translation", 0x407, 1200
-    END
-END
-
-#endif    // !_MAC
-
-
-#ifdef APSTUDIO_INVOKED
-/////////////////////////////////////////////////////////////////////////////
-//
-// TEXTINCLUDE
-//
-
-1 TEXTINCLUDE DISCARDABLE
-BEGIN
-    "resource.h\0"
-END
-
-2 TEXTINCLUDE DISCARDABLE
-BEGIN
-    "#include ""windows.h""\r\n"
-    "\0"
-END
-
-3 TEXTINCLUDE DISCARDABLE
-BEGIN
-    "\r\n"
-    "\0"
-END
-
-#endif    // APSTUDIO_INVOKED
-
-#endif    // German (Germany) resources
-/////////////////////////////////////////////////////////////////////////////
-
-
-
-#ifndef APSTUDIO_INVOKED
-/////////////////////////////////////////////////////////////////////////////
-//
-// Generated from the TEXTINCLUDE 3 resource.
-//
-
-
-/////////////////////////////////////////////////////////////////////////////
-#endif    // not APSTUDIO_INVOKED
-
diff --git a/SelfServiceCommon/Massai/cpp/BillingService/res/BillingS.rc b/SelfServiceCommon/Massai/cpp/BillingService/res/BillingS.rc
deleted file mode 100644
index 149ff103..00000000
--- a/SelfServiceCommon/Massai/cpp/BillingService/res/BillingS.rc
+++ /dev/null
@@ -1,108 +0,0 @@
-//Microsoft Developer Studio generated resource script.
-//
-// #include "resource.h"
-#include "Global_def.h"
-#include "BillingS_def.h"
-
-#define APSTUDIO_READONLY_SYMBOLS
-/////////////////////////////////////////////////////////////////////////////
-//
-// Generated from the TEXTINCLUDE 2 resource.
-//
-#include "windows.h"
-
-/////////////////////////////////////////////////////////////////////////////
-#undef APSTUDIO_READONLY_SYMBOLS
-
-/////////////////////////////////////////////////////////////////////////////
-// German (Germany) resources
-
-#if !defined(AFX_RESOURCE_DLL) || defined(AFX_TARG_DEU)
-#ifdef _WIN32
-LANGUAGE LANG_GERMAN, SUBLANG_GERMAN
-#pragma code_page(1252)
-#endif //_WIN32
-
-#ifndef _MAC
-/////////////////////////////////////////////////////////////////////////////
-//
-// Version
-//
-
-VS_VERSION_INFO VERSIONINFO
- FILEVERSION FILE_VER_BIN
- PRODUCTVERSION PRODUCT_VER_BIN
- FILEFLAGSMASK 0x3fL
-#ifdef _DEBUG
- FILEFLAGS 0x1L
-#else
- FILEFLAGS 0x0L
-#endif
- FILEOS 0x40004L
- FILETYPE 0x2L
- FILESUBTYPE 0x0L
-BEGIN
-    BLOCK "StringFileInfo"
-    BEGIN
-        BLOCK "040704b0"
-        BEGIN
-            VALUE COMPANY
-			VALUE FILEDESCRIPTION
-			VALUE FILE_VER_STR
-			VALUE INTERNALNAME
-			VALUE COPYRIGHT
-			VALUE LEGALTRADEMARKS
-			VALUE ORIGINALFILENAME
-			VALUE PRODUCT
-            VALUE PRODUCT_VER_STR 
-        END
-    END
-    BLOCK "VarFileInfo"
-    BEGIN
-        VALUE "Translation", 0x407, 1200
-    END
-END
-
-#endif    // !_MAC
-
-
-#ifdef APSTUDIO_INVOKED
-/////////////////////////////////////////////////////////////////////////////
-//
-// TEXTINCLUDE
-//
-
-1 TEXTINCLUDE DISCARDABLE
-BEGIN
-    "resource.h\0"
-END
-
-2 TEXTINCLUDE DISCARDABLE
-BEGIN
-    "#include ""windows.h""\r\n"
-    "\0"
-END
-
-3 TEXTINCLUDE DISCARDABLE
-BEGIN
-    "\r\n"
-    "\0"
-END
-
-#endif    // APSTUDIO_INVOKED
-
-#endif    // German (Germany) resources
-/////////////////////////////////////////////////////////////////////////////
-
-
-
-#ifndef APSTUDIO_INVOKED
-/////////////////////////////////////////////////////////////////////////////
-//
-// Generated from the TEXTINCLUDE 3 resource.
-//
-
-
-/////////////////////////////////////////////////////////////////////////////
-#endif    // not APSTUDIO_INVOKED
-
diff --git a/SelfServiceCommon/Massai/cpp/BillingService/src/BillingClient.cpp b/SelfServiceCommon/Massai/cpp/BillingService/src/BillingClient.cpp
deleted file mode 100644
index aa5f2070..00000000
--- a/SelfServiceCommon/Massai/cpp/BillingService/src/BillingClient.cpp
+++ /dev/null
@@ -1,670 +0,0 @@
-// CORBA client basics
-//  history:    ts 11.07.2001 adapted to BillingService(msHostClient.cpp)
-//              ts 04.03.2003 use AlternateBillingService
-//
-
-#include "BillingClient.h"
-#include "massaidll/BASE_OS.h"
-#include "massaiCorba/corbacfg.h"
-
-using namespace std;
-using namespace BillingAccess;
-
-namespace
-{
-  const char* nonNull(const char* text)
-  {
-    return text?text:"";
-  }
-}
-
-const char* billingSession::pBilling= "BillingService";
-const char* billingSession::pLocalBilling= "BillingServiceLocal";
-const char* billingSession::pAlternateBilling= "BillingServiceAlternate";
-
-// open new session
-long billingSession::open()
-{
-  long result = -1;
-  if(pLocalHost && pLocalHost->proxy())
-  {
-    lSessionId = pLocalHost->proxy()->openInvoice(AppName.c_str(), Brand.c_str(),
-      AppType.c_str(), Location.c_str(), KioskID.c_str());
-    result = 0;
-  }
-  return result;
-}
-
-// close current session
-long billingSession::close()
-{
-  long result = -1;
-  if(pLocalHost && pLocalHost->proxy())
-  {
-    pLocalHost->proxy()->closeInvoice(lSessionId);
-    result = 0;
-  }
-  return result;
-}
-
-billingSession::billingSession(const char* pszAppName, const char* pszBrand,
-                               const char* pszAppType, const char* pszKioskID,
-                               const char* pszLocation)
-{
-  try
-  {
-    getConfigPort(pBilling);
-  }
-  catch(char*){}
-  try
-  {
-    getConfigPort(pLocalBilling);
-  }
-  catch(char*)
-  {}
-  try
-  {
-    getConfigPort(pAlternateBilling);
-  }
-  catch(char*)
-  {}
-
-  AppName = nonNull(pszAppName);
-  Brand = nonNull(pszBrand);
-  AppType = nonNull(pszAppType);
-  KioskID = nonNull(pszKioskID);
-  Location = nonNull(pszLocation);
-
-  try
-  {
-    pHost= new corbaClient<BillingAccess::BillingService>(pBilling);
-    pAlternateHost= 0;
-  }
-  catch(CORBA::Exception&)
-  {
-    pHost= 0;
-    lSessionId= 0;
-  }
-  catch(char*)
-  {
-    pHost= 0;
-    lSessionId= 0;
-  }
-  try
-  {
-    pLocalHost= new corbaClient<BillingAccess::BillingService>(getConfigHost(pLocalBilling), getConfigPort(pLocalBilling), pBilling);
-  }
-  catch(CORBA::Exception&)
-  {
-    pLocalHost= 0;
-    lLocalSessionId= 0;
-  }
-  catch(char*)
-  {
-    pLocalHost= 0;
-    lLocalSessionId= 0;
-  }
-
-
-  if(pLocalHost && pLocalHost->proxy())
-  {
-    try
-    {
-      lLocalSessionId = pLocalHost->proxy()->openInvoice(string_dup(AppName.c_str()),
-                                  string_dup(Brand.c_str()),
-                                  string_dup(AppType.c_str()),
-                                  string_dup(KioskID.c_str()),
-                                  string_dup(Location.c_str()));
-    }
-    catch(CORBA::Exception&)
-    {
-      lLocalSessionId= 0;
-    }
-  }
-  if(pHost && pHost->proxy())
-  {
-    try
-    {
-      lSessionId = pHost->proxy()->openInvoice(string_dup(AppName.c_str()),
-                                  string_dup(Brand.c_str()),
-                                  string_dup(AppType.c_str()),
-                                  string_dup(KioskID.c_str()),
-                                  string_dup(Location.c_str()));
-    }
-    catch(CORBA::Exception&)
-    {
-      delete pHost;
-      pHost= 0;
-      lSessionId= 0;
-    }
-  }
-  if(!pHost)
-  {
-    try
-    {
-      pAlternateHost= new corbaClient<BillingAccess::BillingService>(getConfigHost(pAlternateBilling), getConfigPort(pAlternateBilling), pBilling);
-    }
-    catch(CORBA::Exception&)
-    {
-      pAlternateHost= 0;
-      lAlternateSessionId= 0;
-    }
-    catch(char*)
-    {
-      pAlternateHost= 0;
-      lAlternateSessionId= 0;
-    }
-
-  }
-  if(pAlternateHost && pAlternateHost->proxy())
-  {
-    try
-    {
-      lAlternateSessionId = pAlternateHost->proxy()->openInvoice(string_dup(AppName.c_str()),
-                                  string_dup(Brand.c_str()),
-                                  string_dup(AppType.c_str()),
-                                  string_dup(KioskID.c_str()),
-                                  string_dup(Location.c_str()));
-    }
-    catch(CORBA::Exception&)
-    {
-      lAlternateSessionId= 0;
-    }
-  }
-
-}
-
-billingSession::~billingSession()
-{
-  if(lLocalSessionId && pLocalHost && pLocalHost->proxy())
-  {
-    try
-    {
-      lLocalSessionId = pLocalHost->proxy()->closeInvoice(lLocalSessionId);
-    }
-    catch(CORBA::Exception&)
-    {}
-  }
-  if(lSessionId && pHost && pHost->proxy())
-  {
-    try
-    {
-      lSessionId = pHost->proxy()->closeInvoice(lSessionId);
-    }
-    catch(CORBA::Exception&)
-    {}
-  }
-  if(lAlternateSessionId && pAlternateHost && pAlternateHost->proxy())
-  {
-    try
-    {
-      lAlternateSessionId = pAlternateHost->proxy()->closeInvoice(lAlternateSessionId);
-    }
-    catch(CORBA::Exception&)
-    {}
-  }
-  delete pHost;
-  delete pLocalHost;
-  delete pAlternateHost;
-}
-
-// add ATB response to the BillingService
-long billingSession::addATBResponse(const char* pszResponse)
-{
-  long result= -1;
-  if(pszResponse)
-  {
-    if(lLocalSessionId > 0 && pLocalHost && pLocalHost->proxy())
-    {
-      try
-      {
-        result= pLocalHost->proxy()->addATBResponse(lLocalSessionId, pszResponse);
-      }
-      catch(CORBA::Exception&)
-      {}
-    }
-    if(lSessionId > 0 && pHost && pHost->proxy())
-    {
-      try
-      {
-        result= pHost->proxy()->addATBResponse(lSessionId, pszResponse);
-      }
-      catch(CORBA::Exception&)
-      {
-        delete pHost;
-        pHost= 0;
-        try
-        {
-          pAlternateHost= new corbaClient<BillingAccess::BillingService>(getConfigHost(pAlternateBilling), getConfigPort(pAlternateBilling), pBilling);
-          try
-          {
-            lAlternateSessionId = pAlternateHost->proxy()->openInvoice(string_dup(AppName.c_str()),
-                                      string_dup(Brand.c_str()),
-                                      string_dup(AppType.c_str()),
-                                      string_dup(KioskID.c_str()),
-                                      string_dup(Location.c_str()));
-          }
-          catch(CORBA::Exception&)
-          {
-            pAlternateHost= 0;
-            delete pAlternateHost;
-            lAlternateSessionId= 0;
-          }
-        }
-        catch(CORBA::Exception&)
-        {
-          pAlternateHost= 0;
-        }
-        catch(char*)
-        {
-          pAlternateHost= 0;
-        }
-      }
-    }
-    if(lAlternateSessionId > 0 && pAlternateHost && pAlternateHost->proxy())
-    {
-      try
-      {
-        result= pAlternateHost->proxy()->addATBResponse(lAlternateSessionId, pszResponse);
-      }
-      catch(CORBA::Exception&)
-      {}
-    }
-  }
-  return result;
-}
-
-// add BTP response to the BillingService
-long billingSession::addBTPResponse(const char* pszResponse)
-{
-  long result= -1;
-  if(pszResponse)
-  {
-    if(lLocalSessionId > 0 && pLocalHost && pLocalHost->proxy())
-    {
-      try
-      {
-        result= pLocalHost->proxy()->addBTPResponse(lLocalSessionId, pszResponse);
-      }
-      catch(CORBA::Exception&)
-      {}
-    }
-    if(lSessionId > 0 && pHost && pHost->proxy())
-    {
-      try
-      {
-        result= pHost->proxy()->addBTPResponse(lSessionId, pszResponse);
-      }
-      catch(CORBA::Exception&)
-      {
-        delete pHost;
-        pHost= 0;
-        try
-        {
-          pAlternateHost= new corbaClient<BillingAccess::BillingService>(getConfigHost(pAlternateBilling), getConfigPort(pAlternateBilling), pBilling);
-          try
-          {
-            lAlternateSessionId = pAlternateHost->proxy()->openInvoice(string_dup(AppName.c_str()),
-                                      string_dup(Brand.c_str()),
-                                      string_dup(AppType.c_str()),
-                                      string_dup(KioskID.c_str()),
-                                      string_dup(Location.c_str()));
-          }
-          catch(CORBA::Exception&)
-          {
-            pAlternateHost= 0;
-            delete pAlternateHost;
-            lAlternateSessionId= 0;
-          }
-        }
-        catch(CORBA::Exception&)
-        {
-          pAlternateHost= 0;
-        }
-        catch(char*)
-        {
-          pAlternateHost= 0;
-        }
-
-      }
-    }
-    if(lAlternateSessionId > 0 && pAlternateHost && pAlternateHost->proxy())
-    {
-      try
-      {
-        result= pAlternateHost->proxy()->addBTPResponse(lAlternateSessionId, pszResponse);
-      }
-      catch(CORBA::Exception&)
-      {}
-    }
-  }
-  return result;
-}
-
-// add GPP response to the BillingService
-long billingSession::addGPPResponse(const char* pszResponse)
-{
-  long result= -1;
-  if(pszResponse)
-  {
-    if(lLocalSessionId > 0 && pLocalHost && pLocalHost->proxy())
-    {
-      try
-      {
-        result= pLocalHost->proxy()->addGPPResponse(lLocalSessionId, pszResponse);
-      }
-      catch(CORBA::Exception&)
-      {}
-    }
-    if(lSessionId > 0 && pHost && pHost->proxy())
-    {
-      try
-      {
-        result= pHost->proxy()->addGPPResponse(lSessionId, pszResponse);
-      }
-      catch(CORBA::Exception&)
-      {
-        delete pHost;
-        pHost= 0;
-        try
-        {
-          pAlternateHost= new corbaClient<BillingAccess::BillingService>(getConfigHost(pAlternateBilling), getConfigPort(pAlternateBilling), pBilling);
-          try
-          {
-            lAlternateSessionId = pAlternateHost->proxy()->openInvoice(string_dup(AppName.c_str()),
-                                      string_dup(Brand.c_str()),
-                                      string_dup(AppType.c_str()),
-                                      string_dup(KioskID.c_str()),
-                                      string_dup(Location.c_str()));
-          }
-          catch(CORBA::Exception&)
-          {
-            pAlternateHost= 0;
-            delete pAlternateHost;
-            lAlternateSessionId= 0;
-          }
-        }
-        catch(CORBA::Exception&)
-        {
-          pAlternateHost= 0;
-        }
-        catch(char*)
-        {
-          pAlternateHost= 0;
-        }
-      }
-    }
-    if(lAlternateSessionId > 0 && pAlternateHost && pAlternateHost->proxy())
-    {
-      try
-      {
-        result= pAlternateHost->proxy()->addGPPResponse(lAlternateSessionId, pszResponse);
-      }
-      catch(CORBA::Exception&)
-      {}
-    }
-  }
-  return result;
-}
-
-
-/** add ATB response to the BillingService */
-long billingSession::addATBResponse(const char *type, long used)
-{
-  long result= -1;
-  if(type)
-  {
-    if(lLocalSessionId > 0 && pLocalHost && pLocalHost->proxy())
-    {
-      try
-      {
-        result= pLocalHost->proxy()->addATBNonAEAResponse(lLocalSessionId, type, used);
-      }
-      catch(CORBA::Exception&)
-      {}
-    }
-    if(lSessionId > 0 && pHost && pHost->proxy())
-    {
-      try
-      {
-        result= pHost->proxy()->addATBNonAEAResponse(lSessionId, type, used);
-      }
-      catch(CORBA::Exception&)
-      {
-        delete pHost;
-        pHost= 0;
-        try
-        {
-          pAlternateHost= new corbaClient<BillingAccess::BillingService>(getConfigHost(pAlternateBilling), getConfigPort(pAlternateBilling), pBilling);
-          try
-          {
-            lAlternateSessionId = pAlternateHost->proxy()->openInvoice(string_dup(AppName.c_str()),
-                                      string_dup(Brand.c_str()),
-                                      string_dup(AppType.c_str()),
-                                      string_dup(KioskID.c_str()),
-                                      string_dup(Location.c_str()));
-          }
-          catch(CORBA::Exception&)
-          {
-            pAlternateHost= 0;
-            delete pAlternateHost;
-            lAlternateSessionId= 0;
-          }
-        }
-        catch(CORBA::Exception&)
-        {
-          pAlternateHost= 0;
-        }
-        catch(char*)
-        {
-          pAlternateHost= 0;
-        }
-      }
-    }
-    if(lAlternateSessionId > 0 && pAlternateHost && pAlternateHost->proxy())
-    {
-      try
-      {
-        result= pAlternateHost->proxy()->addATBNonAEAResponse(lAlternateSessionId, type, used);
-      }
-      catch(CORBA::Exception&)
-      {}
-    }
-  }
-  return result;
-}
-
-/** add BTP response to the BillingService */
-long billingSession::addBTPResponse(const char *type, long used)
-{
-  long result= -1;
-  if(type)
-  {
-    if(lLocalSessionId > 0 && pLocalHost && pLocalHost->proxy())
-    {
-      try
-      {
-        result= pLocalHost->proxy()->addBTPNonAEAResponse(lLocalSessionId, type, used);
-      }
-      catch(CORBA::Exception&)
-      {}
-    }
-    if(lSessionId > 0 && pHost && pHost->proxy())
-    {
-      try
-      {
-        result= pHost->proxy()->addBTPNonAEAResponse(lSessionId, type, used);
-      }
-      catch(CORBA::Exception&)
-      {
-        delete pHost;
-        pHost= 0;
-        try
-        {
-          pAlternateHost= new corbaClient<BillingAccess::BillingService>(getConfigHost(pAlternateBilling), getConfigPort(pAlternateBilling), pBilling);
-          try
-          {
-            lAlternateSessionId = pAlternateHost->proxy()->openInvoice(string_dup(AppName.c_str()),
-                                      string_dup(Brand.c_str()),
-                                      string_dup(AppType.c_str()),
-                                      string_dup(KioskID.c_str()),
-                                      string_dup(Location.c_str()));
-          }
-          catch(CORBA::Exception&)
-          {
-            pAlternateHost= 0;
-            delete pAlternateHost;
-            lAlternateSessionId= 0;
-          }
-        }
-        catch(CORBA::Exception&)
-        {
-          pAlternateHost= 0;
-        }
-        catch(char*)
-        {
-          pAlternateHost= 0;
-        }
-      }
-    }
-    if(lAlternateSessionId > 0 && pAlternateHost && pAlternateHost->proxy())
-    {
-      try
-      {
-        result= pAlternateHost->proxy()->addBTPNonAEAResponse(lAlternateSessionId, type, used);
-      }
-      catch(CORBA::Exception&)
-      {}
-    }
-  }
-  return result;
-}
-
-/** add GPP response to the BillingService */
-long billingSession::addGPPResponse(const char *type, long used)
-{
-  long result= -1;
-  if(type)
-  {
-    if(lLocalSessionId > 0 && pLocalHost && pLocalHost->proxy())
-    {
-      try
-      {
-        result= pLocalHost->proxy()->addGPPNonAEAResponse(lLocalSessionId, type, used);
-      }
-      catch(CORBA::Exception&)
-      {}
-    }
-    if(lSessionId > 0 && pHost && pHost->proxy())
-    {
-      try
-      {
-        result= pHost->proxy()->addGPPNonAEAResponse(lSessionId, type, used);
-      }
-      catch(CORBA::Exception&)
-      {
-        delete pHost;
-        pHost= 0;
-        try
-        {
-          pAlternateHost= new corbaClient<BillingAccess::BillingService>(getConfigHost(pAlternateBilling), getConfigPort(pAlternateBilling), pBilling);
-          try
-          {
-            lAlternateSessionId = pAlternateHost->proxy()->openInvoice(string_dup(AppName.c_str()),
-                                      string_dup(Brand.c_str()),
-                                      string_dup(AppType.c_str()),
-                                      string_dup(KioskID.c_str()),
-                                      string_dup(Location.c_str()));
-          }
-          catch(CORBA::Exception&)
-          {
-            pAlternateHost= 0;
-            delete pAlternateHost;
-            lAlternateSessionId= 0;
-          }
-        }
-        catch(CORBA::Exception&)
-        {
-          pAlternateHost= 0;
-        }
-        catch(char*)
-        {
-          pAlternateHost= 0;
-        }
-      }
-    }
-    if(lAlternateSessionId > 0 && pAlternateHost && pAlternateHost->proxy())
-    {
-      try
-      {
-        result= pAlternateHost->proxy()->addGPPNonAEAResponse(lAlternateSessionId, type, used);
-      }
-      catch(CORBA::Exception&)
-      {}
-    }
-  }
-  return result;
-}
-
-/** add conveyor response to the BillingService */
-long billingSession::addCONResponse(long delivered)
-{
-  long result= -1;
-  if(lLocalSessionId > 0 && pLocalHost && pLocalHost->proxy())
-  {
-    try
-    {
-      result= pLocalHost->proxy()->addCONResponse(lLocalSessionId, delivered);
-    }
-    catch(CORBA::Exception&)
-    {}
-  }
-  if(lSessionId > 0 && pHost && pHost->proxy())
-  {
-    try
-    {
-      result= pHost->proxy()->addCONResponse(lSessionId, delivered);
-    }
-    catch(CORBA::Exception&)
-    {
-      delete pHost;
-      pHost= 0;
-      try
-      {
-        pAlternateHost= new corbaClient<BillingAccess::BillingService>(getConfigHost(pAlternateBilling), getConfigPort(pAlternateBilling), pBilling);
-        try
-        {
-          lAlternateSessionId = pAlternateHost->proxy()->openInvoice(string_dup(AppName.c_str()),
-                                    string_dup(Brand.c_str()),
-                                    string_dup(AppType.c_str()),
-                                    string_dup(KioskID.c_str()),
-                                    string_dup(Location.c_str()));
-        }
-        catch(CORBA::Exception&)
-        {
-          pAlternateHost= 0;
-          delete pAlternateHost;
-          lAlternateSessionId= 0;
-        }
-      }
-      catch(CORBA::Exception&)
-      {
-        pAlternateHost= 0;
-      }
-      catch(char*)
-      {
-        pAlternateHost= 0;
-      }
-    }
-  }
-  if(lAlternateSessionId > 0 && pAlternateHost && pAlternateHost->proxy())
-  {
-    try
-    {
-      result= pAlternateHost->proxy()->addCONResponse(lAlternateSessionId, delivered);
-    }
-    catch(CORBA::Exception&)
-    {}
-  }
-  return result;
-}
diff --git a/SelfServiceCommon/Massai/cpp/BillingService/src/File.cpp b/SelfServiceCommon/Massai/cpp/BillingService/src/File.cpp
deleted file mode 100644
index ed2a60e4..00000000
--- a/SelfServiceCommon/Massai/cpp/BillingService/src/File.cpp
+++ /dev/null
@@ -1,431 +0,0 @@
-//  Write Billing to File
-//  ts 11.01.2002 V01.00.01 get output path from massai configuration
-//  ts 16.01.2002 V01.00.02 attribute month added (format: YYYY-MM)
-//  ts 02.12.2002           file name month corrected
-//  ts 01.06.2004           hex code handling corrected
-
-#include "File.h"
-#include "trc/trace.h"
-#include "tools/log.h"
-#include "cfgclnt/nConfigText.hpp"
-#include "path.h"
-
-#include <fstream>
-#include <sstream>
-#include <time.h>
-
-using std::ostringstream;
-using std::ostream;
-using std::endl;
-using std::ofstream;
-using std::string;
-
-/*
-  File Format:
-
-  <EVENT AppName="AppName" AppType="AppType" Location="Location" KioskID="KioskID" Start="Start" End="End" Duration="Duration" Parse="Error">
-   <PRINTER PrinterType="ATB" Used="#">
-    <RESPONSE Value="" Parse="Error" />
-   </PRINTER>
-  </EVENT>
-*/
-
-// base configuration class
-class cfg: public nConfig::gcText
-{
-  public:
-    cfg(const char* pszItem, const char* pszUser):
-      nConfig::gcText(pszItem, pszUser)
-    {}
-
-  private:
-    /** This method is called, when the configuration subsystem needs to
-     *  create a new confuguration item. */
-    void create(const char*& Rights, const char*& Explanation, const char*& Default)
-    {
-      Rights = "rwl";    // "[r][w][+]"
-      Explanation = "Output path for statistical data";
-      Default = ".\\billing";
-    }
-};
-
-// try to get output path from config
-void readOutputPath(char* pBuffer, int size)
-{
-  cfg host("SERVICES.BILLING.OutputPath", "StatisticsService");
-  if(host.get())
-  {
-    strncpy(pBuffer, host.get(), size);
-    pBuffer[size-1]= 0;
-    int iLen= strlen(pBuffer);
-    if(iLen > 0)
-    {
-      if(pBuffer[iLen-1] != ':' && pBuffer[iLen-1] != '/' && pBuffer[iLen-1] != '\\')
-      {
-        pBuffer[iLen]= '/';
-        pBuffer[iLen+1]= 0;
-      }
-    }
-    checkPath(pBuffer);
-  }
-}
-
-char *getOutputPath()
-{
-  static char szTmp [258];
-  static bool readdone= false;
-  *szTmp = '\0';
-  if(!readdone)
-  {
-    readOutputPath(szTmp, 258);
-  }
-  return szTmp;
-}
-
-// write XML AttValue to stream (using apos)
-void writeContentCharData(ostream& out, string::const_iterator first, string::const_iterator last)
-{
-  char buffer[10];
-  string::const_iterator it;
-  for(it= first; it != last; it++)
-  {
-    switch(*it)
-    {
-      case 0x9:
-      case 0xd:
-      case 0xa:
-      {
-        out << *it;
-        break;
-      }
-      case '&':
-      {
-        out << "&amp;";
-        break;
-      }
-      case '<':
-      {
-        out << "&lt;";
-        break;
-      }
-      case '>':
-      {
-        out << "&gt;";  // avoid "]]>"
-        break;
-      }
-      default:
-      {
-        if(*it > 127)
-        {
-          unsigned int i = (unsigned char)*it;
-          sprintf(buffer, "&#x%X;", i);
-          out << buffer;
-        }
-        else
-        if(*it >= ' ')
-        {
-          out << *it;
-        }
-        else
-        {
-           out << '.';
-        }
-      }
-    }
-  }
-}
-
-// write XML AttValue to stream (using apos)
-void writeAttValueApos(ostream& out, string::const_iterator first, string::const_iterator last)
-{
-  char buffer[10];
-  string::const_iterator it;
-  out << "\'";
-  for(it= first; it != last; it++)
-  {
-    switch(*it)
-    {
-      case 0x9:
-      case 0xd:
-      case 0xa:
-      {
-        out << *it;
-        break;
-      }
-      case '&':
-      {
-        out << "&amp;";
-        break;
-      }
-      case '<':
-      {
-        out << "&lt;";
-        break;
-      }
-      case '\'':
-      {
-        out << "&apos;";
-        break;
-      }
-      default:
-      {
-        if(*it > 127)
-        {
-          unsigned int i = (unsigned char)*it;
-          sprintf(buffer, "&#x%X;", i);
-          out << buffer;
-        }
-        else
-        if(*it >= ' ')
-        {
-          out << *it;
-        }
-        else
-        {
-          out << '.';
-        }
-      }
-    }
-  }
-  out << "\'";
-}
-
-// write XML AttValue to stream (using quot)
-void writeAttValueQuot(ostream& out, string::const_iterator first, string::const_iterator last)
-{
-  char buffer[10];
-  string::const_iterator it;
-  out << "\"";
-  for(it= first; it != last; it++)
-  {
-    switch(*it)
-    {
-      case 0x9:
-      case 0xd:
-      case 0xa:
-      {
-        out << *it;
-        break;
-      }
-      case '&':
-      {
-        out << "&amp;";
-        break;
-      }
-      case '<':
-      {
-        out << "&lt;";
-        break;
-      }
-      case '\"':
-      {
-        out << "&quot;";
-        break;
-      }
-      default:
-      {
-        if(*it > 127)
-        {
-          unsigned int i= (unsigned char)*it;
-          sprintf(buffer, "&#x%X;", i);
-          out << buffer;
-        }
-        else
-        if(*it >= ' ')
-        {
-          out << *it;
-        }
-        else
-        {
-          out << '.';
-        }
-      }
-    }
-  }
-  out << "\"";
-}
-
-// create response
-Response::Response(const string& setRsp, bool setbParseError)
-{
-  Rsp= setRsp;
-  bParseError= setbParseError;
-}
-
-Response::Response(const std::string& type, long used)
-{
-  ostringstream out;
-  out << type;
-  out << ": ";
-  out << used;
-  Rsp = out.str();
-  bParseError= false;
-}
-
-
-// write conveyor entry to file
-void writeConveyor(ostream& out, int delivered)
-{
-  string Used;
-  char Buffer[48];
-  ResponseList::const_iterator it;
-  sprintf(Buffer, "%d", delivered);
-  Used= Buffer;
-  out << " <CONVEYOR";
-  out << " Delivered=";
-  writeAttValueQuot(out, Used.begin(), Used.end());
-  out << " />" << endl;
-}
-
-
-// write printer entry to file
-void writePrinter(ostream& out, const string& PrinterType, const ResponseList& Response, int iUsed)
-{
-  string Used;
-  char Buffer[48];
-  ResponseList::const_iterator it;
-  sprintf(Buffer, "%d", iUsed);
-  Used= Buffer;
-  out << " <PRINTER";
-  out << " PrinterType=";
-  writeAttValueQuot(out, PrinterType.begin(), PrinterType.end());
-  out << " Used=";
-  writeAttValueQuot(out, Used.begin(), Used.end());
-  out << " >" << endl;
-  for(it =Response.begin(); it != Response.end(); it++)
-  {
-    out << "  <RESPONSE";
-    out << " Value=";
-    writeAttValueQuot(out, it->Rsp.begin(), it->Rsp.end());
-    if((it->bParseError))
-    {
-      out << " Parse=\"Error\"";
-    }
-    out << " />" << endl;
-  }
-  out << " </PRINTER>" << endl;
-}
-
-// write event to file
-void write(const string& KioskId, const string& Location, const string& AppName,
-  const string& Brand, const string& AppType,
-  time_t start, time_t end, bool bClosed,
-  const ResponseList& ATBResponse, int iATBUsed,
-  const ResponseList& GPPResponse, int iGPPUsed,
-  const ResponseList& BTPResponse, int iBTPUsed,
-  int baggagesDelivered)
-{
-  string Start, End, Duration;
-  string StartDate, EndDate, StartMonth;
-  char Name[350];
-  ofstream *pOut;
-  struct tm saveTime;
-  struct tm* pST= localtime(&end);
-  if(pST)
-  {
-    saveTime= *pST;
-  }
-  sprintf(Name, "%sBill%04d%02d%02d.xml",
-    getOutputPath(),
-    (saveTime.tm_year%5000)+1900,
-    (saveTime.tm_mon%12)+1,
-    (saveTime.tm_mday%32)
-  );
-
-  prot("OutputFile= %s\n", Name);
-  pOut= new ofstream(Name, std::ios_base::out | std::ios_base::in | std::ios_base::ate);
-  if(!(*pOut).good())
-  {
-    delete pOut;
-    pOut=new ofstream(Name, std::ios_base::out | std::ios_base::ate);
-  }
-  std::streamoff pos= (*pOut).tellp();
-  if(pos <= sizeof("<BILLING></BILLING>"))
-  {
-    (*pOut).seekp(0);
-    (*pOut) << "<BILLING>" << endl;
-  }
-  else
-  {
-    (*pOut).seekp(pos - (sizeof("</BILLING>")+2));
-  }
-  if((*pOut).good())
-  {
-    char Buffer[48];
-    struct tm* pTime;
-
-    pTime= localtime(&start);
-    if(pTime)
-    {
-      strftime(Buffer, sizeof(Buffer), "%Y-%m-%d %H:%M:%S", pTime);
-      StartDate= Buffer;
-      strftime(Buffer, sizeof(Buffer), "%Y-%m", pTime);
-      StartMonth= Buffer;
-    }
-    pTime= localtime(&end);
-    if (pTime)
-    {
-      strftime(Buffer, sizeof(Buffer), "%Y-%m-%d %H:%M:%S", pTime);
-      EndDate= Buffer;
-    }
-
-    sprintf(Buffer, "%d", start);
-    Start= Buffer;
-    sprintf(Buffer, "%d", end);
-    End= Buffer;
-
-    // LH tests require dates & times to be reset every day.
-    // That's why we got negative durations, that caused errors in writing values to the database
-    // 06.05.2003 (AGe)
-    if((end - start) >= 0)
-    {
-      sprintf(Buffer, "%d", end-start);
-    }
-    else
-    {
-      sprintf(Buffer, "%d", 999999);
-    }
-
-    Duration= Buffer;
-
-    (*pOut) << "<EVENT";
-    (*pOut) << " AppName=";
-    writeAttValueQuot((*pOut), AppName.begin(), AppName.end());
-    (*pOut) << " Brand=";
-    writeAttValueQuot((*pOut), Brand.begin(), Brand.end());
-    (*pOut) << " AppType=";
-    writeAttValueQuot((*pOut), AppType.begin(), AppType.end());
-    (*pOut) << " KioskId=";
-    writeAttValueQuot((*pOut), KioskId.begin(), KioskId.end());
-    (*pOut) << " Location=";
-    writeAttValueQuot((*pOut), Location.begin(), Location.end());
-    (*pOut) << " Start=";
-    writeAttValueQuot((*pOut), Start.begin(), Start.end());
-    (*pOut) << " End=";
-    writeAttValueQuot((*pOut), End.begin(), End.end());
-    (*pOut) << " StartDate=";
-    writeAttValueQuot((*pOut), StartDate.begin(), StartDate.end());
-    (*pOut) << " EndDate=";
-    writeAttValueQuot((*pOut), EndDate.begin(), EndDate.end());
-    (*pOut) << " Month=";
-    writeAttValueQuot((*pOut), StartMonth.begin(), StartMonth.end());
-    (*pOut) << " Duration=";
-    writeAttValueQuot((*pOut), Duration.begin(), Duration.end());
-    if (!bClosed)
-      (*pOut) << " Parse=\"Error\"";
-    (*pOut) << " >" << endl;
-    writePrinter((*pOut), "ATB", ATBResponse, iATBUsed);
-    writePrinter((*pOut), "GPP", GPPResponse, iGPPUsed);
-    writePrinter((*pOut), "BTP", BTPResponse, iBTPUsed);
-    writeConveyor((*pOut), baggagesDelivered);
-    (*pOut) << "</EVENT>" << endl;
-    (*pOut) << endl;
-    (*pOut) << "</BILLING>" << endl;
-    (*pOut).close();
-  }
-  else
-  {
-    TRACE(HERE_1, "Can not  open (%.1000s).", Name);
-  }
-  delete pOut;
-}
diff --git a/SelfServiceCommon/Massai/cpp/BillingService/src/PrinterRsp.cpp b/SelfServiceCommon/Massai/cpp/BillingService/src/PrinterRsp.cpp
deleted file mode 100644
index 55827084..00000000
--- a/SelfServiceCommon/Massai/cpp/BillingService/src/PrinterRsp.cpp
+++ /dev/null
@@ -1,157 +0,0 @@
-
-//---------------------------------------------------------------------------
-//
-//  file:       PrinterRsp.cpp
-//
-//  purpose:    parse printer (ATB, GPP, BTP) respone
-//
-//  date:       16.07.2001
-//
-//  author:     Materna Information & Communications (TS)
-//
-//---------------------------------------------------------------------------
-
-#include <string.h>
-#include <locale>
-#include <stdlib.h>
-#include "trc/trace.h"
-#include "PrinterRsp.h"
-#include "boost/regex.hpp"
-
-using boost::cmatch;
-using boost::regex_match;
-using boost::regex;
-
-namespace
-{
-  regex btp_print_done      ("^.{0,5}(?:PROK|ERR[13456789EL])[1IODL]([0-9]{2})(?:[^0-9A-Z]V([0-9]{3}))?(?:[^0-9A-Z].*)?$");
-  regex btp_command_failed  ("^.{0,5}ERR[1-9EL].*$");
-  regex btp_command_done    ("^.{0,5}(CT|PT|PC|PS|LT|LC|LS|AV|PV|RI|RC|ES|EP|BT|ZS)OK.*$");
-
-  regex gpp_print_done      ("^.{0,5}(?:PROK|ERR[13456789EFLOST])[^0-9A-Z][1LOJD]([0-9]{2})[^0-9A-Z][2LOJD]([0-9]{2})[^0-9A-Z][3LOJD]([0-9]{2})(?:[^0-9A-Z]([V1-9])[SO][ROLJD])?(?:[^0-9A-Z].*)?$");
-  regex gpp_command_failed  ("^.{0,5}ERR[1-9EFLNOST].*$");
-  regex gpp_command_done    ("^.{0,5}(CT|PT|PC|PS|LT|LC|LS|AV|PV|RI|RC|ES|EP|BT|FT|FC|FS|FA|FR|TT|TC|TA|CS|TS)OK.*$");
-  regex gpp_coupon_inserted ("^.{0,5}(CPNI|BRPI|ATBI|NMCI|TKTI).*$");
-}
-
-
-/*---------------------------------------------------------------------------
-
- FUNCTION:  int parseBTP(int& iUsed, const char* pResponse)
-
- COMMENTS:  Checks BT printer data
-
- DATE:      16.07.2001
-
- AUTHOR:    Materna Information & Communications (TS)
-
- HISTORY:   taken from comcki.cpp, VOID comCKI::checkBTPPrinterData(char *pszData),
-            adapted to BillingService
-
----------------------------------------------------------------------------*/
-
-int parseBTP(int& iUsed, const char* pResponse)
-{
-  int result = 0;
-  cmatch match;
-  if(pResponse[0] == 0)
-  {
-    TRACE(HERE_7, "empty message");
-  }
-  else if(regex_match(pResponse, match, btp_print_done))
-  {
-    TRACE(HERE_7, "print done");
-    iUsed+= atoi(match[1].first);
-    if(match[2].matched)
-    {
-      iUsed+= atoi(match[2].first);
-    }
-  }
-  else if(regex_match(pResponse, match, btp_command_failed))
-  {
-    TRACE(HERE_7, "command error");
-  }
-  else if(regex_match(pResponse, match, btp_command_done))
-  {
-    TRACE(HERE_7, "command success");
-  }
-  else
-  {
-    result = -1;
-  }
-  return result;
-}
-
-
-
-/*---------------------------------------------------------------------------
-
- FUNCTION:  int parseATB(int& iUsed, const char* pResponse)
-
- COMMENTS:  Checks ATB printer data
-
- DATE:      16.07.2001
-
- AUTHOR:    Materna Information & Communications (TS)
-
- HISTORY:   taken from comcki.cpp, VOID comCKI::checkATBPrinterData(char *pszData),
-            adapted to BillingService
-
----------------------------------------------------------------------------*/
-
-int parseATB(int& iUsed, const char* pResponse)
-{
-  return parseGPP(iUsed, pResponse);
-}
-
-
-
-/*---------------------------------------------------------------------------
-
- FUNCTION:  int parseGPP(int& iUsed, const char* pResponse)
-
- COMMENTS:  Checks GP printer data
-
- DATE:      16.07.2001
-
- AUTHOR:    Materna Information & Communications (TS)
-
----------------------------------------------------------------------------*/
-
-int parseGPP(int& iUsed, const char* pResponse)
-{
-  int result = 0;
-  cmatch match;
-  if(pResponse[0] == 0)
-  {
-    TRACE(HERE_7, "empty message");
-  }
-  else if(regex_match(pResponse, match, gpp_print_done))
-  {
-    TRACE(HERE_7, "print done");
-    iUsed+= atoi(match[1].first);
-    iUsed+= atoi(match[2].first);
-    iUsed+= atoi(match[3].first);
-    if(match[4].matched)
-    {
-      iUsed+= atoi(match[4].first);
-    }
-  }
-  else if(regex_match(pResponse, match, gpp_command_failed))
-  {
-    TRACE(HERE_7, "command error");
-  }
-  else if(regex_match(pResponse, match, gpp_command_done))
-  {
-    TRACE(HERE_7, "command success");
-  }
-  else if(regex_match(pResponse, match, gpp_coupon_inserted))
-  {
-    TRACE(HERE_7, "document inserted");
-  }
-  else
-  {
-    result = -1;
-  }
-  return result;
-}
diff --git a/SelfServiceCommon/Massai/cpp/BillingService/src/TestBilling.cpp b/SelfServiceCommon/Massai/cpp/BillingService/src/TestBilling.cpp
deleted file mode 100644
index 12b6c385..00000000
--- a/SelfServiceCommon/Massai/cpp/BillingService/src/TestBilling.cpp
+++ /dev/null
@@ -1,130 +0,0 @@
-#include <stdio.h>
-#include <assert.h>
-#include "PrinterRsp.h"
-
-void checkBTP(int returnCode, int used, const char* message)
-{
-  int iUsed = 0;
-  printf("test: (%d) (%d) (%s)\n", returnCode, used, message);
-  int result = parseBTP(iUsed, message);
-  printf("done: (%d) (%d) (%s)\n", result, iUsed, message);
-  assert(iUsed == used);
-  assert(returnCode == result);
-}
-
-void checkGPP(int returnCode, int used, const char* message)
-{
-  int iUsed = 0;
-  printf("test: (%d) (%d) (%s)\n", returnCode, used, message);
-  int result = parseGPP(iUsed, message);
-  printf("done: (%d) (%d) (%s)\n", result, iUsed, message);
-  assert(iUsed == used);
-  assert(returnCode == result);
-}
-
-int main(int argc, char** argv)
-{
-  checkBTP(0, 0, "BTP CTOKCHECK");
-  checkBTP(0, 0, "CHECKPTOK02030301");
-  checkBTP(0, 0, "$$ PCOK0203");
-  checkBTP(0, 0, "_$XPSOK0203");
-  checkBTP(0, 0, "LTOK0M0Y");
-  checkBTP(0, 0, "LCOK0M");
-  checkBTP(0, 0, "%%#$LSOK0M");
-  checkBTP(0, 0, "LSAVOK99#BTP");
-  checkBTP(0, 0, "BTP PVOK1015");
-  checkBTP(0, 0, "BTP RIOK");
-  checkBTP(0, 0, "BTP RCOK");
-  checkBTP(0, 0, "BTP ESOK");
-  checkBTP(0, 0, "BTP EPOK");
-  checkBTP(0, 0, "BTP BTOK");
-  checkBTP(0, 0, "BTP ZSOK");
-  checkBTP(0, 0, "BTP ERR1");
-  checkBTP(0, 0, "BTP ERR2105");
-  checkBTP(0, 0, "CHECKERR3");
-  checkBTP(0, 0, "$$ERR4");
-  checkBTP(0, 0, "ERR5");
-  checkBTP(0, 0, "###ERR6");
-  checkBTP(0, 0, "...ERR7");
-  checkBTP(0, 0, ".ERR8");
-  checkBTP(0, 0, "..ERR9");
-  checkBTP(0, 0, "....ERRE");
-  checkBTP(0, 0, ".....ERRL");
-  checkBTP(0, 5, "PROK105");
-  checkBTP(0, 4, "XXPROKI01#V003");
-  checkBTP(0, 4, "XXXPROK101#V003#J01");
-  checkBTP(0, 1, "XXXXPROK101#J01");
-  checkBTP(0, 5, "XXXXXERR5105");
-  checkBTP(0, 4, "XXXXERR3O01#V003");
-  checkBTP(0, 4, "XERRED01#V003#J01");
-  checkBTP(0, 1, "ERRLL01#J01");
-  checkBTP(0, 0, "");
-  checkGPP(0, 0, "CTOK");
-  checkGPP(0, 0, " PTOK");
-  checkGPP(0, 0, "  PCOK");
-  checkGPP(0, 0, "---PSOK");
-  checkGPP(0, 0, "$%&LTOK");
-  checkGPP(0, 0, "$LCOK");
-  checkGPP(0, 0, "GPP LSOK");
-  checkGPP(0, 0, "GPP AVOK");
-  checkGPP(0, 0, "GPP PVOK");
-  checkGPP(0, 0, "GPP RIOK");
-  checkGPP(0, 0, "GPP RCOK");
-  checkGPP(0, 0, "GPP ESOK");
-  checkGPP(0, 0, "GPP EPOK");
-  checkGPP(0, 0, "GPP BTOK");
-  checkGPP(0, 0, "GPP FTOK");
-  checkGPP(0, 0, "GPP FCOK");
-  checkGPP(0, 0, "GPP FSOK");
-  checkGPP(0, 0, "GPP FAOK");
-  checkGPP(0, 0, "GPP FROK");
-  checkGPP(0, 0, "GPP TTOK");
-  checkGPP(0, 0, "GPP TCOK");
-  checkGPP(0, 0, "GPP TAOK");
-  checkGPP(0, 0, "GPP CSOK");
-  checkGPP(0, 0, "GPP TSOK");
-  checkGPP(0, 0, "GPP ERR1");
-  checkGPP(0, 0, "GPP ERR2");
-  checkGPP(0, 0, "GPP ERR3");
-  checkGPP(0, 0, "GPP ERR4");
-  checkGPP(0, 0, "GPP ERR5");
-  checkGPP(0, 0, "GPP ERR6");
-  checkGPP(0, 0, "GPP ERR7");
-  checkGPP(0, 0, "GPP ERR8");
-  checkGPP(0, 0, "GPP ERR9");
-  checkGPP(0, 0, "GPP ERRE");
-  checkGPP(0, 0, "GPP ERRF");
-  checkGPP(0, 0, "GPP ERRL");
-  checkGPP(0, 0, "GPP ERRN");
-  checkGPP(0, 0, "GPP ERRO");
-  checkGPP(0, 0, "GPP ERRS");
-  checkGPP(0, 0, "GPP ERRT");
-  checkGPP(0, 8, "PROK#105#202#301");
-  checkGPP(0, 8, " PROK#105#L02#301#123");
-  checkGPP(0, 8, ". PROK#105#O02#301#VSR");
-  checkGPP(0, 8, "%$%$PROK#L05#202#J01#VSR#123");
-  checkGPP(0, 8, "ERRL#O00#202#D01#5SR");
-  checkGPP(0, 8, "ERRT#J00#202#301#5SR#123");
-  checkGPP(0, 8, "ERR5#D00#202#301#5SR");
-  checkGPP(0, 8, "ERRS#100#202#301#5SR#123");
-  checkGPP(0, 0, "CPNI");
-  checkGPP(0, 0, "BRPI#01W#005#");
-  checkGPP(0, 0, "ATBI#01W#005#");
-  checkGPP(0, 0, "NMCI#01W#005#");
-  checkGPP(0, 0, "TKTI#01W#005#");
-  checkGPP(0, 0, "");
-
-  checkBTP(-1, 0, "BTP   CTOKCHECK");
-  checkGPP(-1, 0, "GPP   ERRF");
-
-  return 0;
-}
-
-
-
-
-
-
-
-
-
diff --git a/SelfServiceCommon/Massai/cpp/BillingService/src/billing.cpp b/SelfServiceCommon/Massai/cpp/BillingService/src/billing.cpp
deleted file mode 100644
index b4bfe391..00000000
--- a/SelfServiceCommon/Massai/cpp/BillingService/src/billing.cpp
+++ /dev/null
@@ -1,72 +0,0 @@
-//  Implementation of the billing interface
-#include "billing/billing.h"
-
-using namespace BillingAccess;
-
-//  resturns conncetion status
-bool billingSession::connected()
-{
-  return fConnected;
-}
-
-//  adds response from ATB
-long billingSession::addATBResponse (const char* pszResponse)
-{
-  long result = -1;
-  if(connected() && pszResponse)
-  {
-    result = proxy->addATBResponse(sessionId, pszResponse);
-  }
-  return result;
-}
-
-//  adds response from BTP
-long billingSession::addBTPResponse (const char* pszResponse)
-{
-  long result = -1;
-  if(connected() && pszResponse)
-  {
-    result = proxy->addBTPResponse(sessionId, pszResponse);
-  }
-  return result;
-}
-
-//  adds response from GPP
-long billingSession::addGPPResponse (const char* pszResponse)
-{
-  long result = -1;
-  if(connected() && pszResponse)
-  {
-    result = proxy->addGPPResponse(sessionId, pszResponse);
-  }
-  return result;
-}
-
-billingSession::billingSession(const char* pszAppName, const char* pszBrand, const char* pszAppType, const char* pszLocation, const char* pszKioskID)
-{
-  sessionId  = 0;
-  fConnected = false;
-  if(pszAppName && pszBrand && pszAppType && pszLocation && pszKioskID)
-  {
-    cclnt = new corbaClient<BillingService>("BillingService");
-    // ... and save the BillingService for the remote access
-    proxy = cclnt->proxy();
-    if(proxy)
-    {
-      sessionId = proxy->openInvoice(pszAppName, pszBrand, pszAppType, pszLocation, pszKioskID);
-      if(sessionId)
-      {
-        fConnected = true;
-      }
-    }
-  }
-}
-
-billingSession::~billingSession()
-{
-  if(connected())
-  {
-    proxy->closeInvoice(sessionId);
-  }
-  delete cclnt;
-}
diff --git a/SelfServiceCommon/Massai/cpp/BillingService/src/clientmain.cpp b/SelfServiceCommon/Massai/cpp/BillingService/src/clientmain.cpp
deleted file mode 100644
index 48c19da6..00000000
--- a/SelfServiceCommon/Massai/cpp/BillingService/src/clientmain.cpp
+++ /dev/null
@@ -1,193 +0,0 @@
-#include <signal.h>
-#include <string.h>
-#include <iostream>
-#include <conio.h>
-
-#include "BillingClient.h"
-
-// Signal handler
-static void exitHandler(int iSignal)
-{
-  char szTmp[30];
-  switch(iSignal)
-  {
-    case SIGABRT:   strcpy(szTmp,"SIGABRT");  break;
-    case SIGBREAK:  strcpy(szTmp,"SIGBREAK"); break;
-    case SIGTERM:   strcpy(szTmp,"SIGTERM");  break;
-    case SIGINT:    strcpy(szTmp,"SIGINT");   break;
-
-    case SIGFPE:    strcpy(szTmp,"SIGFPE");   break;
-    case SIGSEGV:   strcpy(szTmp,"SIGSEGV");  break;
-    case SIGILL:    strcpy(szTmp,"SIGILL");   break;
-  }
-
-  printf("signal [%s]\n",szTmp);
-
-  switch(iSignal)
-  {
-    case SIGTERM: break;
-
-    case SIGABRT:
-    case SIGBREAK:
-    case SIGINT:
-
-    case SIGFPE:
-    case SIGSEGV:
-    case SIGILL:
-       break;
-  }
-}
-
-
-void help()
-{
-  std::cout << "h: show this" << std::endl;
-  std::cout << "q: quit" << std::endl;
-  std::cout << "s: stop" << std::endl;
-  std::cout << "a: send atb response" << std::endl;
-  std::cout << "g: send gpp response" << std::endl;
-  std::cout << "b: send btp response" << std::endl;
-  std::cout << "A: send non aea atb response" << std::endl;
-  std::cout << "G: send non aea gpp response" << std::endl;
-  std::cout << "B: send non aea btp response" << std::endl;
-  std::cout << "C: send conveyor response" << std::endl;
-  std::cout << "x: send atb response with chars below 0x20" << std::endl;
-}
-
-int main(int argc, char** argv)
-{
-  signal(SIGABRT, exitHandler);
-  signal(SIGBREAK,exitHandler);
-  signal(SIGTERM, exitHandler);
-  signal(SIGINT,  exitHandler);
-
-  signal(SIGSEGV, exitHandler);
-  signal(SIGILL,  exitHandler);
-  signal(SIGFPE,  exitHandler);
-
-  bool stop= false;
-  while(!stop)
-  {
-    billingSession hclnt("TestApp","", "TST","DTM", "DTM");
-
-    help();
-    bool quit= false;
-    while(!quit)
-    {
-
-      int c = _getche();
-      std::cout << std::endl;
-      switch(c)
-      {
-        case 'h':
-        {
-          help();
-          break;
-        }
-        case 'q':
-        {
-          quit= true;
-          break;
-        }
-        case 'a':
-        {
-          char szInput[1024];
-          std::cout << "ATB response:" << std::endl;
-          std::cin >> szInput;
-          long result= hclnt.addATBResponse(szInput);
-          std::cout << "addATBResponse: " << result << std::endl;
-          break;
-        }
-        case 'g':
-        {
-          char szInput[1024];
-          std::cout << "GPP response:" << std::endl;
-          std::cin >> szInput;
-          long result= hclnt.addGPPResponse(szInput);
-          std::cout << "addGPPResponse: " << result << std::endl;
-          break;
-        }
-        case 'b':
-        {
-          char szInput[1024];
-          std::cout << "BTP response:" << std::endl;
-          std::cin >> szInput;
-          long result= hclnt.addBTPResponse(szInput);
-          std::cout << "addBTPResponse: " << result << std::endl;
-          break;
-        }
-        case 'A':
-        {
-          std::cout << "ATB documents used:" << std::endl;
-          long used;
-          std::cin >> used;
-          long result= hclnt.addATBResponse("SVG", used);
-          std::cout << "addATBResponse: " << result << std::endl;
-          break;
-        }
-        case 'G':
-        {
-          std::cout << "GPP documents used:" << std::endl;
-          long used;
-          std::cin >> used;
-          long result= hclnt.addGPPResponse("SVG", used);
-          std::cout << "addGPPResponse: " << result << std::endl;
-          break;
-        }
-        case 'B':
-        {
-          std::cout << "BTP documents used:" << std::endl;
-          long used;
-          std::cin >> used;
-          long result= hclnt.addBTPResponse("SVG", used);
-          std::cout << "addBTPResponse: " << result << std::endl;
-          break;
-        }
-        case 'C':
-        {
-          std::cout << "baggage delivered:" << std::endl;
-          long used;
-          std::cin >> used;
-          long result= hclnt.addCONResponse(used);
-          std::cout << "addBTPResponse: " << result << std::endl;
-          break;
-        }
-        case 'x':
-        {
-          char szInput[1024];
-          std::cout << "ATB response with 01 02 0a 1f 20:" << std::endl;
-          szInput[0] = 0x01;
-          szInput[1] = 0x02;
-          szInput[2] = 0x0a;
-          szInput[3] = 0x1f;
-          szInput[4] = 0x20;
-          szInput[5] = 0x00;
-          long result= hclnt.addATBResponse(szInput);
-          std::cout << "addATBResponse: " << result << std::endl;
-
-          std::cout << "ATB response with 09 21 0a 22 :" << std::endl;
-          szInput[0] = 0x09;
-          szInput[1] = 0x21;
-          szInput[2] = 0x0a;
-          szInput[3] = 0x22;
-          szInput[4] = 0x00;
-          result= hclnt.addATBResponse(szInput);
-          std::cout << "addATBResponse: " << result << std::endl;
-          break;
-        }
-        case 's':
-        {
-          stop=true;
-          break;
-        }
-        default:
-        {
-          help();
-          break;
-        }
-      }
-    }
-  }
-  std::cout << "Stop" << std::endl;
-  return 0;
-}
diff --git a/SelfServiceCommon/Massai/cpp/BillingService/src/main.cpp b/SelfServiceCommon/Massai/cpp/BillingService/src/main.cpp
deleted file mode 100644
index 74de57c1..00000000
--- a/SelfServiceCommon/Massai/cpp/BillingService/src/main.cpp
+++ /dev/null
@@ -1,86 +0,0 @@
-//---------------------------------------------------------------------------
-//
-//  file:       main.cpp
-//
-//  purpose:    main of BillingService
-//
-//  history:    ts 11.07.2001 adapted to BillingService (msHostClient.h)
-//
-//---------------------------------------------------------------------------
-
-#include "massaidll/massai.hpp"
-#include "systools/mEventSem.hpp"
-
-#include <winsock2.h>
-#include <iostream>
-
-#include "server.h"
-#include "trc/trace.h"
-#include "tools/log.h"
-#include "massaiCorba/corbasrvr.h"
-#include "systools/mEventSem.hpp"
-#include "systools/mSysProcessTerminate.h"
-#include "tools/TraceClient.h"
-
-using MASSAI::trace::TraceClient;
-using Materna::MSSD::eventSemaphore;
-
-extern char *getOutputPath();
-
-
-static TCHAR szAppName[] = TEXT ("BillingInterface") ;
-
-
-//---------------------------------------------------------------------------
-//
-//  function:   int main(int argc, char** argv)
-//
-//  purpose:    Standard windows program entry
-//
-//  date:       11.07.2001
-//
-//  author:     Materna Information & Communications (TS)
-//
-//---------------------------------------------------------------------------
-
-int main(int argc, char** argv)
-{
-  TraceClient trc;
-  eventSemaphore sem;
-  try
-  {
-    corbaServant<BillingServiceServant>* pServant= 0;
-    openTrace("Billing");
-    mSysProcessTerminate::setShutdownHook(mSysProcessTerminate::SHUTDOWN_LATE, &sem, &trc);
-    try
-    {
-      BillingServiceServant billing;
-
-      TRACE(HERE_5,"BillingService started ...");
-
-      corbaServant<BillingServiceServant> srvnt (billing, "BillingService");
-
-      std::cout << "output path = " << getOutputPath() << std::endl;
-      std::cout << "useLocalHost = " << KioskId::useLocalHost() << std::endl;
-
-      sem.wait();
-      TRACE(HERE_1,"BillingService terminating");
-    }
-    catch(char *se)
-    {
-      TRACE(HERE_1,"(%.1000s)",se);
-      std::cout << se << std::endl;
-    }
-    TRACE(HERE_1,"BillingService terminated.");
-  }
-  catch(...)
-  {
-    std::cout << "Cannot create servant" << std::endl;
-  }
-  mSysProcessTerminate::resetShutdownHook();
-  closeTrace();
-
-  return(0);
-}
-
-
diff --git a/SelfServiceCommon/Massai/cpp/BillingService/src/path.cpp b/SelfServiceCommon/Massai/cpp/BillingService/src/path.cpp
deleted file mode 100644
index 47b1f20e..00000000
--- a/SelfServiceCommon/Massai/cpp/BillingService/src/path.cpp
+++ /dev/null
@@ -1,74 +0,0 @@
-//---------------------------------------------------------------------------
-//
-//  file:       path.cpp
-//
-//  purpose:    create the directories for a file
-//
-//  date:       05.07.04
-//
-//  author:     Materna Information & Communications (TS)
-//
-//---------------------------------------------------------------------------
-
-#include "path.h"
-#include <direct.h>
-#include <sys/stat.h>
-
-
-
-/*---------------------------------------------------------------------------
-
- FUNCTION:  int checkPath(char* pszFilename)
-
- COMMENTS:  guarantee that the path for the FileName exists
-            create the directories up to the last backslash
-
- DATE:      05.07.04
-
- AUTHOR:    Materna Information & Communications (TS)
-
- RESULT:    0: path exists
-            1: can not create path mkdir failed
-
----------------------------------------------------------------------------*/
-
-int checkPath(char *pszFilename)
-{
-  int result= 0;
-  char *pFileName, *pStart;
-  char delimiter;
-  struct stat fileinfo;
-  if (pszFilename)
-  {
-    pStart = pFileName = pszFilename;
-    while (*pFileName)
-    {
-      if (*pFileName == '\\' || *pFileName == '/')
-      {
-        delimiter= *pFileName;
-        *pFileName = 0;
-        if (stat(pStart, &fileinfo) != 0)
-        {
-          if (pFileName > pStart && *(pFileName-1) != ':')    // do not create devices(in MS stat return != 0 for devices)
-          {
-            if (mkdir(pStart) != 0)
-            {
-              *pFileName = delimiter;
-              result= 1;
-              break;        // directory does not exists and could not be created, do not continue
-            }
-          }
-        }
-        else if (!(fileinfo.st_mode && S_IFDIR))
-        {
-          *pFileName = delimiter;
-          break;          // is not a directory, could not continue
-        }
-        *pFileName = delimiter;
-      }
-      pFileName++;
-    }
-  }
-  return result;
-}
-/* end of file path.cpp */
diff --git a/SelfServiceCommon/Massai/cpp/BillingService/src/server.cpp b/SelfServiceCommon/Massai/cpp/BillingService/src/server.cpp
deleted file mode 100644
index 0bb4ed3d..00000000
--- a/SelfServiceCommon/Massai/cpp/BillingService/src/server.cpp
+++ /dev/null
@@ -1,254 +0,0 @@
-//  CORBA servant
-//
-//  history:    ts 11.07.2001 adapted to BillingService
-//              ts 09.01.2002 V01.00.00 output time in format YYYY-MM-DD hh:mm:ss
-//              ts 11.01.2002 V01.00.01 get output path from massai configuration
-//              ts 16.01.2002 V01.00.02 attribute month added (format: YYYY-MM)
-//              ts 02.12.2002 V01.00.03 file name month corrected
-//              tg 29.08.2003 V01.00.04 file name changed format YYYYMMDD
-//              ts 07.01.2004 V01.00.05 local host can be used as kioskid
-//              ts 01.06.2004 V01.00.06 hex code handling corrected
-//              ts 05.07.2004 V01.00.07 create output directory if not exist
-//---------------------------------------------------------------------------
-
-#include "server.h"
-#include "tools/log.h"
-#include "trc/trace.h"
-#include "Tools/VERSION.H"
-#include "cfgclnt/nConfigSelection.hpp"
-
-VERSION_ID_DT( 01, 00, 07 );
-
-using namespace BillingAccess;
-
-//  opens a new host session
-//---------------------------------------------------------------------------
-// base configuration class
-const nConfig::selection KioskId::useLocalHostNameList[]=
-{
-  nConfig::selection(0, "No", "Use the assigned kiosk id"),
-  nConfig::selection(1, "Yes", "Ignore the assigned kiosk id, use the local host name")
-};
-bool KioskId::read= false;
-bool KioskId::useHostname= false;
-char KioskId::hostname[MAXHOSTNAMESIZE+1];
-
-void KioskId::cfgUseHostname::create
-(
-  char const*& Rights,
-  char const*& Expl,
-  long& DefNdx,
-  nConfig::selection const*& Begin,
-  nConfig::selection const*& End
-)
-{
-  Rights = "rwl";    // "[r][w][+]"
-  Expl = "Use local hostname for kioskid";
-  DefNdx = 0;
-  Begin= useLocalHostNameList;
-  End= useLocalHostNameList + 2;
-}
-
-KioskId::cfgUseHostname::cfgUseHostname(const char *pszItem, const char *pszUser):
-  nConfig::gcSelection(pszItem, pszUser)
-{}
-
-void KioskId::readhostname()
-{
-  try
-  {
-    gethostname(hostname, MAXHOSTNAMESIZE);
-    hostname[MAXHOSTNAMESIZE]=0;
-  }
-  catch( ... )
-  {
-    TRACE(HERE_1, "gethostname failed");
-    hostname[0]=0;
-    useHostname= false;
-  }
-}
-
-bool KioskId::useLocalHost()
-{
-  if(!read)
-  {
-    try
-    {
-      cfgUseHostname cfg("SERVICES.BILLING.useLocalHostname", "StatisticsService");
-      useHostname = (cfg.getIndex() == 1);
-      read= true;
-    }
-    catch(...)
-    {}
-    readhostname();
-  }
-  return useHostname;
-}
-
-const char* KioskId::getKioskId(const char* kioskId)
-{
-  if(useLocalHost())
-  {
-    return hostname;
-  }
-  else
-  {
-    return kioskId;
-  }
-}
-
-
-//  class constructor
-BillingServiceServant::BillingServiceServant()
-{
-  TRACE(HERE_4, "servant[%x] started...", this);
-}
-
-//  clean up
-BillingServiceServant::~BillingServiceServant()
-{
-  TRACE(HERE_4, "servant[%x] terminated.", this);
-}
-
-Long BillingServiceServant::openInvoice(const char* appName, const char* brand,
-  const char* appType, const char* kioskID, const char* location)
-{
-  long id = 0;
-  TRACE(HERE_6, "openInvoice((%.200s), (%.200s), (%.200s), (%.200s), (%.200s))",
-    appName, brand, appType, kioskID, location);
-  try
-  {
-    id = setSession(appName, brand, appType, KioskId::getKioskId(kioskID), location);
-    TRACE(HERE_6, "openInvoice()= %d", id);
-    prot("openSession(%s, %s, %s, %s, %s), id = %d\n",
-      appName, brand, appType, kioskID, location, id);
-  }
-  catch(CORBA::SystemException &)
-  {
-    TRACE(HERE_1, "CORBA::SystemException in openSession((%.200s), (%.200s), (%.200s), (%.200s), (%.200s)), %d",
-      appName, brand, appType, kioskID, location, id);
-  }
-  catch(...)
-  {
-    TRACE(HERE_1, "unknown exception in openSession((%.200s), (%.200s), (%.200s), (%.200s), (%.200s))",
-      appName, brand, appType, kioskID, location);
-  }
-  return id;
-}
-
-//  closes a specific host session
-Long BillingServiceServant::closeInvoice(Long sessionId)
-{
-  session* ps;
-  TRACE(HERE_6, "closeInvoice(%d)", sessionId);
-  if((ps = getSession(sessionId)) != NULL)
-  {
-    prot("closeInvoice, id = %d\n", sessionId);
-    ps->close();
-    rmSession(sessionId);
-  }
-  return 0;
-}
-
-// add a response for an ATB printer
-Long BillingServiceServant::addATBResponse (Long sessionId, const char* response)
-{
-  Long result = -1;
-  TRACE(HERE_7, "addATBResponse(%d, (%.200s))", sessionId, response);
-  prot("addATBResponse(%d, %s)\n", sessionId, response);
-  session* ps = getSession(sessionId);
-  if(ps)
-  {
-    ps->addATBResponse(response);
-    result = 0;
-  }
-  return result;
-}
-
-// add a response for an BT printer
-Long BillingServiceServant::addBTPResponse (Long sessionId, const char* response)
-{
-  Long result = -1;
-  TRACE(HERE_7, "addBTPResponse(%d, (%.200s))", sessionId, response);
-  prot("addBTPResponse(%d, %s)\n", sessionId, response);
-  session* ps =getSession(sessionId);
-  if(ps)
-  {
-    ps->addBTPResponse(response);
-    result = 0;
-  }
-  return result;
-}
-
-// add a response for an GP printer
-Long BillingServiceServant::addGPPResponse (Long sessionId, const char* response)
-{
-  Long result = -1;
-  TRACE(HERE_7, "addGPPResponse(%d, (%.200s))", sessionId, response);
-  prot("addGPPResponse(%d, %s)\n", sessionId, response);
-  session* ps = getSession(sessionId);
-  if(ps)
-  {
-    ps->addGPPResponse(response);
-    result = 0;
-  }
-  return result;
-}
-
-
-Long BillingServiceServant::addATBNonAEAResponse(Long sessionId, const char* type, Long used)
-{
-  Long result = -1;
-  TRACE(HERE_7, "addATBNonAEAResponse(%d, (%.200s), (%d))", sessionId, type, used);
-  prot("addATBNonAEAResponse(%d, (%.200s), (%d))\n", sessionId, type, used);
-  session* ps = getSession(sessionId);
-  if(ps)
-  {
-    ps->addATBResponse(type, used);
-    result = 0;
-  }
-  return result;
-}
-
-Long BillingServiceServant::addBTPNonAEAResponse(Long sessionId, const char* type, Long used)
-{
-  Long result = -1;
-  TRACE(HERE_7, "addBTPNonAEAResponse(%d, (%.200s), (%d))", sessionId, type, used);
-  prot("addBTPNonAEAResponse(%d, (%.200s), (%d))\n", sessionId, type, used);
-  session* ps = getSession(sessionId);
-  if(ps)
-  {
-    ps->addBTPResponse(type, used);
-    result = 0;
-  }
-  return result;
-}
-
-Long BillingServiceServant::addGPPNonAEAResponse(Long sessionId, const char* type, Long used)
-{
-  Long result = -1;
-  TRACE(HERE_7, "addGPPNonAEAResponse(%d, (%.200s), (%d))", sessionId, type, used);
-  prot("addGPPNonAEAResponse(%d, (%.200s), (%d))\n", sessionId, type, used);
-  session* ps = getSession(sessionId);
-  if(ps)
-  {
-    ps->addGPPResponse(type, used);
-    result = 0;
-  }
-  return result;
-}
-
-Long BillingServiceServant::addCONResponse(Long sessionId, Long delivered)
-{
-  Long result = -1;
-  TRACE(HERE_7, "addCONResponse(%d, (%d))", sessionId, delivered);
-  prot("addCONResponse(%d, %d)\n", sessionId, delivered);
-  session* ps = getSession(sessionId);
-  if(ps)
-  {
-    ps->addCONResponse(delivered);
-    result = 0;
-  }
-  return result;
-}
-
diff --git a/SelfServiceCommon/Massai/cpp/BillingService/src/sessionlist.cpp b/SelfServiceCommon/Massai/cpp/BillingService/src/sessionlist.cpp
deleted file mode 100644
index a9da5c5a..00000000
--- a/SelfServiceCommon/Massai/cpp/BillingService/src/sessionlist.cpp
+++ /dev/null
@@ -1,316 +0,0 @@
-// session control implementation
-
-#include "sessionList.h"
-
-#include <winsock2.h>
-#include <windows.h>
-#include <time.h>
-#include "trc/trace.h"
-
-#include "PrinterRsp.h"
-
-namespace
-{
-  const char* nonNull(const char* text)
-  {
-    return text?text:"";
-  }
-}
-
-using namespace BillingAccess;
-
-// global vars for this file
-static long       sessionCounter = 0;
-static session   *pSessions      = NULL;
-
-long session::sessionId()
-{
-  return(lId);
-}
-
-void session::sessionId(long id)
-{
-  lId = id;
-}
-
-session* session::nextSession()
-{
-  return(pNext);
-}
-
-void session::nextSession(session* p)
-{
-  pNext = p;
-}
-
-// set session closed flag
-void session::close()
-{
-  bClosed= true;
-  end= time(0);
-}
-
-// add response of ATB printer
-void session::addATBResponse(const char *pResponse)
-{
-  if(pResponse)
-  {
-    int iUsed= 0;
-    bool bATBError = true;
-    if(parseATB(iUsed, pResponse) == 0)
-    {
-      bATBError= false;
-      iATBUsed+= iUsed;
-    }
-    ATBResponse.push_back(Response(pResponse, bATBError));
-  }
-}
-
-// add response of GP printer
-void session::addGPPResponse(const char *pResponse)
-{
-  if(pResponse)
-  {
-    int iUsed= 0;
-    bool bGPPError = true;
-    if(parseGPP(iUsed, pResponse) == 0)
-    {
-      bGPPError= false;
-      iGPPUsed+= iUsed;
-    }
-    GPPResponse.push_back(Response(pResponse, bGPPError));
-  }
-}
-
-// add response of BT printer
-void session::addBTPResponse(const char *pResponse)
-{
-  if(pResponse)
-  {
-    int iUsed= 0;
-    bool bBTPError = true;
-    if(parseBTP(iUsed, pResponse) == 0)
-    {
-      bBTPError= false;
-      iBTPUsed+= iUsed;
-    }
-    BTPResponse.push_back(Response(pResponse, bBTPError));
-  }
-}
-
-void session::addATBResponse(const char* type, long used)
-{
-  iATBUsed+= used;
-  ATBResponse.push_back(Response(type, used));
-}
-
-void session::addGPPResponse(const char* type, long used)
-{
-  iGPPUsed+= used;
-  GPPResponse.push_back(Response(type, used));
-}
-
-void session::addBTPResponse(const char* type, long used)
-{
-  iBTPUsed+= used;
-  BTPResponse.push_back(Response(type, used));
-}
-
-void session::addCONResponse(long delivered)
-{
-  baggagesDelivered+= delivered;
-}
-
-
-
-int session::eq(const char* appName, const char* brand, const char* appType,
-  const char* kioskID, const char* location)
-{
-  int result= 0;
-  if(appName && brand && appType && kioskID && location)
-  {
-    if ((AppName == appName)
-      && (Brand == brand)
-      && (AppType == appType)
-      && (KioskId == kioskID)
-      && (Location == location))
-    {
-      result= 1;
-    }
-  }
-  return result;
-
-}
-
-session::session(const char* appName, const char* brand,
-  const char* appType, const char* kioskID, const char* location)
-{
-  pNext = NULL;
-  start = time(0);
-  end = start;
-
-  AppName= nonNull(appName);
-  Brand = nonNull(brand);
-  AppType= nonNull(appType);
-  KioskId= nonNull(kioskID);
-  Location= nonNull(location);
-
-  iATBUsed= 0;
-  iGPPUsed= 0;
-  iBTPUsed= 0;
-  baggagesDelivered= 0;
-
-  bClosed= false;
-}
-
-session::~session()
-{
-  if(!bClosed)
-  {
-    end= time(0);
-  }
-  // clean up everything
-  write(KioskId, Location, AppName, Brand, AppType, start, end, bClosed,
-    ATBResponse, iATBUsed, GPPResponse, iGPPUsed, BTPResponse, iBTPUsed,
-    baggagesDelivered);
-}
-
-sessionList::sessionList()
-{}
-
-sessionList::~sessionList()
-{
-  if(pSessions)
-  {
-    session* pTmp = pSessions;
-    while(pTmp)
-    {
-      session* pDel = pTmp;
-      pTmp = pTmp->nextSession();
-      delete pDel;
-    }
-    // set this pointer to NULL
-    pSessions = NULL;
-  }
-}
-
-// get session from sessionId
-session* sessionList::getSession(long sessionId)
-{
-  session *pSession = 0;
-  if(pSessions)
-  {
-    // query list
-    for(session* pTmp = pSessions; pTmp && !pSession; pTmp = pTmp->nextSession())
-    {
-      if(pTmp->sessionId() == sessionId)
-      {
-        // that's a match !!
-        pSession = pTmp;
-      }
-    }
-  }
-  return pSession;
-}
-
-// remove session from sessionId
-void sessionList::rmSession(long sessionId)
-{
-  if(pSessions)
-  {
-    session* pSession = 0;
-    session* pPrev    = 0;
-    // query list
-    for(session* pTmp = pSessions; pTmp && !pSession; pTmp = pTmp->nextSession())
-    {
-      if(pTmp->sessionId() == sessionId)
-      {
-        // that's a match !!
-        pSession = pTmp;
-      }
-      else
-      {
-        pPrev = pTmp;
-      }
-    }
-    if(pSession)
-    {
-      if(!pPrev)
-      {
-        pSessions= pSession->nextSession();
-      }
-      else
-      {
-        pPrev->nextSession(pSession->nextSession());
-      }
-      pSession->nextSession(0);
-      delete pSession;
-    }
-  }
-}
-
-// find a session in the list according to appName, brand, appType, kioskID and location
-long sessionList::findSession(const char* appName, const char* brand, const char* appType,
-  const char* kioskID, const char* location)
-{
-  long     id = 0;
-  if(pSessions)
-  {
-    // walk through the list, seach an corresponding session
-    for(session* pTmp = pSessions; pTmp && id == 0; pTmp = pTmp->nextSession())
-    {
-      if(pTmp->eq(appName, brand, appType, kioskID, location))
-      {
-        // that's a match !!
-        id = pTmp->sessionId();
-      }
-    }
-  }
-  return id;
-}
-
-// set a new session to the list
-long sessionList::setSession(const char* appName, const char* brand,
-  const char* appType, const char* kioskID, const char* location)
-{
-  long id = findSession(appName, brand, appType, kioskID, location);
-  if(id)
-  {
-    // need to reopen the session ?? (implemenatation)
-    TRACE(HERE_2, "session[%d] already allocated.", id);
-  }
-  else
-  {
-    session* pNew = new session(appName, brand, appType, kioskID, location);
-    if(!pNew)
-    {
-      id = -1;
-    }
-    else
-    {
-      // set new elements
-      pNew->sessionId(++sessionCounter);
-      // save return value
-      id = pNew->sessionId();
-      pNew->nextSession(NULL);
-    }
-    if(!pSessions)
-    {
-      // set new element as the first
-      pSessions = pNew;
-      TRACE(HERE_5, "session[%d] added to list.", id);
-    }
-    else
-    {
-      // walk to end of list and append new item
-      session* pTmp = pSessions;
-      while(pTmp->nextSession())
-      {
-        pTmp = pTmp->nextSession();
-      }
-      pTmp->nextSession(pNew);
-      TRACE(HERE_5, "session[%d] added to list.", id);
-    }
-  }
-  return id;
-}
diff --git a/SelfServiceCommon/Massai/cpp/BillingService/static/makefile.mak b/SelfServiceCommon/Massai/cpp/BillingService/static/makefile.mak
deleted file mode 100644
index 63497d6c..00000000
--- a/SelfServiceCommon/Massai/cpp/BillingService/static/makefile.mak
+++ /dev/null
@@ -1,35 +0,0 @@
-######################################################################
-#
-# /vob/SelfServiceCommon/Massai/cpp/BillingService/makefile.mak
-#
-######################################################################
-
-!include $(BUILDROOT)\Build\cpp\makefile.common.mak
-
-MY_CFLAGS = \
-    -I$(P_INC) \
-    $(MY_CFLAGS_3) \
-    -I$(_GEN) \
-    -DTAO_AS_STATIC_LIBS -DACE_AS_STATIC_LIBS \
-    $(INC_INTERFACES) \
-    $(INC_ACETAO) \
-	$(INC_MFC)
-
-MY_RCFLAGS = \
-    -I$(P_INC)
-
-######################################################################
-
-MY_LIB1 = $(LIB_DST_BILLINGS)
-
-MY_LIB1_OBJS = \
-    $(_OBJ)\BillingService.obj  \
-    $(_OBJ)\BillingService_skel.obj \
-    $(_OBJ)\billing.obj
-
-MY_LIB1_GEN_DIRS = \
-    $(GEN_MASSAI_COMMON)
-
-######################################################################
-
-!include $(BUILDROOT)\Build\cpp\makefile.rules.mak
-- 
2.41.0.windows.1

