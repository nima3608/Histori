From 2f4ec273c3484179a9fafb66ef6d0c4b64663162 Mon Sep 17 00:00:00 2001
From: tgeisler <tgeisler@90b65887-3827-0410-9a23-83215b262276>
Date: Mon, 20 Oct 2014 10:10:01 +0000
Subject: [PATCH 0513/1000] =?UTF-8?q?MANTIS=2034269=20Library=20Text:cEnvS?=
 =?UTF-8?q?ubsts=20-=20provide=20functions=20for=20platform=20installation?=
 =?UTF-8?q?=20paths=20Beautified=20code=20on=20J=C3=BCrgens=20request?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

git-svn-id: svn://localhost/SelfServiceCommon/trunk@740 90b65887-3827-0410-9a23-83215b262276
---
 .../Interfaces/inc/text/cEnvSubst.hpp              |  6 +++---
 .../Massai/cpp/Text/src/cEnvSubst.cpp              | 14 +++++++-------
 2 files changed, 10 insertions(+), 10 deletions(-)

diff --git a/SelfServiceCommon/Interfaces/inc/text/cEnvSubst.hpp b/SelfServiceCommon/Interfaces/inc/text/cEnvSubst.hpp
index a264b7c6..c769a402 100644
--- a/SelfServiceCommon/Interfaces/inc/text/cEnvSubst.hpp
+++ b/SelfServiceCommon/Interfaces/inc/text/cEnvSubst.hpp
@@ -28,8 +28,8 @@
 #pragma once
 #endif // _MSC_VER > 1000
 
-namespace {
-  struct Compare_
+namespace cEnvSubst_helper {
+  struct compare_
   {
     bool operator() (const std::string&, const std::string&) const;
   };
@@ -44,7 +44,7 @@ public:
     HKCU
   };
 private:
-  std::map<std::string,std::string,Compare_> env;
+  std::map<std::string,std::string,cEnvSubst_helper::compare_> env;
 
   bool regReadSZ(ROOT_KEY keyHandle, const std::string& subKey, const std::string& valueName, bool expand, std::string& result);
   bool getPlfPath(int csidl, std::string& path);  
diff --git a/SelfServiceCommon/Massai/cpp/Text/src/cEnvSubst.cpp b/SelfServiceCommon/Massai/cpp/Text/src/cEnvSubst.cpp
index 578454eb..4fd9672b 100644
--- a/SelfServiceCommon/Massai/cpp/Text/src/cEnvSubst.cpp
+++ b/SelfServiceCommon/Massai/cpp/Text/src/cEnvSubst.cpp
@@ -21,8 +21,8 @@
 #include <Shlobj.h>
 #include <Shlwapi.h>
 
-namespace {
-  bool Compare_::operator () (const std::string& s1, const std::string& s2) const
+namespace cEnvSubst_helper {
+  bool compare_::operator () (const std::string& s1, const std::string& s2) const
   {
     if(s1.length()>s2.length())
       return true;
@@ -192,7 +192,7 @@ void CEnvSubst::SetBaseEnvVars()
 #endif
 		);
     std::string dummy;
-    for(std::map<std::string, std::string, Compare_>::iterator it=env.begin(); it !=env.end(); ++it)
+    for(std::map<std::string, std::string, cEnvSubst_helper::compare_>::iterator it=env.begin(); it !=env.end(); ++it)
     {
 
       //printf("\nSubstEnvVars %s %s",str.c_str(),(std::string("\\$")+ (*it).first).c_str());
@@ -208,7 +208,7 @@ void CEnvSubst::SetBaseEnvVars()
   }
 
   TRACE(HERE_8,"Substitution constants:");
-  for(std::map<std::string, std::string, Compare_>::iterator it=env.begin(); it !=env.end(); ++it)
+  for(std::map<std::string, std::string, cEnvSubst_helper::compare_>::iterator it=env.begin(); it !=env.end(); ++it)
   {
     TRACE(HERE_8,"\t%s->%s",(std::string("$")+(*it).first).c_str(),(*it).second.c_str());
   }
@@ -216,7 +216,7 @@ void CEnvSubst::SetBaseEnvVars()
 
 void CEnvSubst::SetEnvVars(const std::map<std::string,std::string> setEnv)
 {
-  std::map<std::string, std::string, Compare_>::const_iterator it;
+  std::map<std::string, std::string, cEnvSubst_helper::compare_>::const_iterator it;
 
   try
   {
@@ -267,7 +267,7 @@ std::string CEnvSubst::SubstEnvVars(const char* str) const
 std::string CEnvSubst::SubstEnvVars(const std::string& str) const
 {
   TRACE(HERE_8,"Substitution constants:");
-  for(std::map<std::string, std::string, Compare_>::const_iterator it=env.begin(); it !=env.end(); ++it)
+  for(std::map<std::string, std::string, cEnvSubst_helper::compare_>::const_iterator it=env.begin(); it !=env.end(); ++it)
   {
     TRACE(HERE_8,"\t%s->%s",(std::string("$")+(*it).first).c_str(),(*it).second.c_str());
   }
@@ -275,7 +275,7 @@ std::string CEnvSubst::SubstEnvVars(const std::string& str) const
   std::string dummy(str);
   try
   {
-    for(std::map<std::string, std::string, Compare_>::const_iterator it=env.begin(); it !=env.end(); ++it)
+    for(std::map<std::string, std::string, cEnvSubst_helper::compare_>::const_iterator it=env.begin(); it !=env.end(); ++it)
     {
       boost::regex ReplaceStr( (std::string("$")+ (*it).first).c_str(),
              boost::regex::icase | boost::regex::literal);
-- 
2.41.0.windows.1

