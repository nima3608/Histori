From 689da6a13d973b64f38d4e589ee24cf9d6069ca8 Mon Sep 17 00:00:00 2001
From: kboeluek <kboeluek@90b65887-3827-0410-9a23-83215b262276>
Date: Thu, 15 May 2014 18:24:05 +0000
Subject: [PATCH 0466/1000] MANTIS 0020990 change; Platform_Extension_CUSS_1_2:
 Periodic/Automatic restart of the application

systools @version 1.0.0.17

- changed the data types of the two getter methods from string to unsigned long

git-svn-id: svn://localhost/SelfServiceCommon/trunk@675 90b65887-3827-0410-9a23-83215b262276
---
 .../Interfaces/inc/systools/mSysProcess.hpp   |  4 ++--
 .../Massai/cpp/Systools/src/local_def.cpp     | 10 ++++++--
 .../cpp/Systools/src/mSysProcessW32.cpp       | 23 ++++++++-----------
 3 files changed, 20 insertions(+), 17 deletions(-)

diff --git a/SelfServiceCommon/Interfaces/inc/systools/mSysProcess.hpp b/SelfServiceCommon/Interfaces/inc/systools/mSysProcess.hpp
index 05284b61..1055ed30 100644
--- a/SelfServiceCommon/Interfaces/inc/systools/mSysProcess.hpp
+++ b/SelfServiceCommon/Interfaces/inc/systools/mSysProcess.hpp
@@ -228,9 +228,9 @@ namespace mSysProcess
       // get parent process id
       virtual std::string getParentProcessId() const = 0;
       
-      virtual std::string getProcessIoUsage() const = 0;
+      virtual unsigned long getProcessIoUsage() const = 0;
       
-      virtual std::string getProcessTimeUsage() const = 0;
+      virtual unsigned long getProcessTimeUsage() const = 0;
 
    }; // class child
 
diff --git a/SelfServiceCommon/Massai/cpp/Systools/src/local_def.cpp b/SelfServiceCommon/Massai/cpp/Systools/src/local_def.cpp
index 82495496..ccf2e555 100644
--- a/SelfServiceCommon/Massai/cpp/Systools/src/local_def.cpp
+++ b/SelfServiceCommon/Massai/cpp/Systools/src/local_def.cpp
@@ -1,6 +1,6 @@
 #include "tools/versionlib.h"
 
-VERSION_ID_DT(systools, 1, 0, 0, 16);
+VERSION_ID_DT(systools, 1, 0, 0, 17);
 
 /*!
 \file
@@ -8,12 +8,18 @@ VERSION_ID_DT(systools, 1, 0, 0, 16);
 
 \page massai_systools.lib Release Notes - massai_systools.lib
 
-@version 1.0.0.16
+@version 1.0.0.17
 
 \section changehistory Change history
 
 massai_systools.lib
 
+\version 1.0.0.17
+\li 15.05.2014
+\li change - BoKa Mantis 0020990: Automated restarts
+\li - mSysProcess.hpp / mSysProcessW32.cpp
+\li   changed the data types of the two getter methods from string to unsigned long
+
 \version 1.0.0.16
 \li 14.05.2014
 \li extension - BoKa Mantis 0020990: Automated restarts
diff --git a/SelfServiceCommon/Massai/cpp/Systools/src/mSysProcessW32.cpp b/SelfServiceCommon/Massai/cpp/Systools/src/mSysProcessW32.cpp
index 96d348f4..e247d0e1 100644
--- a/SelfServiceCommon/Massai/cpp/Systools/src/mSysProcessW32.cpp
+++ b/SelfServiceCommon/Massai/cpp/Systools/src/mSysProcessW32.cpp
@@ -369,8 +369,8 @@ namespace
       void printCounters(std::ostream& out) const;
       bool sendEvent(DWORD event);
       
-      std::string getProcessIoUsage() const;
-      std::string getProcessTimeUsage() const;
+      unsigned long getProcessIoUsage() const;
+      unsigned long getProcessTimeUsage() const;
 
     private:
       void openProcess();
@@ -1033,48 +1033,45 @@ namespace
   }
   
   
-  std::string myChild::getProcessIoUsage() const
+  unsigned long myChild::getProcessIoUsage() const
   {
     IO_COUNTERS ioCounters;
-    std::stringstream strStream;
     
+    unsigned long sum = 0;
     if(GetProcessIoCounters(M_HandleProcess, &ioCounters))
     {
       ULONGLONG read = ioCounters.ReadTransferCount;
       ULONGLONG write = ioCounters.WriteTransferCount;
       ULONGLONG other = ioCounters.OtherTransferCount;
-      strStream << std::dec;
-      strStream << (read + write + other);
+      sum = static_cast<unsigned long> (read + write + other);
     }
     else
     {
       logLastError(M_Logging, "GetProcessIoCounters");
     }
-    return strStream.str();
+    return sum;
   }
       
-  std::string myChild::getProcessTimeUsage() const
+  unsigned long myChild::getProcessTimeUsage() const
   {
     FILETIME creation;
     FILETIME exit;
     FILETIME kernel;
     FILETIME user;
     
-    std::stringstream out;
+    unsigned long sum = 0;
     
     if(GetProcessTimes(M_HandleProcess, &creation, &exit, &kernel, &user))
     {
-      out << std::dec;
       mSysTime::Duration usr = mSysTime::getDuration(user);
       mSysTime::Duration krnl = mSysTime::getDuration(kernel);
-      unsigned long sum = mSysTime::getDurationInMs(usr) + mSysTime::getDurationInMs(krnl);
-      out << sum;
+      sum = mSysTime::getDurationInMs(usr) + mSysTime::getDurationInMs(krnl);
     }
     else
     {
       logLastError(M_Logging, "GetProcessTimes");
     }
-    return out.str();
+    return sum;
   }
 
 } // namespace
-- 
2.41.0.windows.1

