From e9617bde91fb3bc172034f0333b204cd3f036035 Mon Sep 17 00:00:00 2001
From: tgeisler <tgeisler@90b65887-3827-0410-9a23-83215b262276>
Date: Fri, 10 Jan 2014 15:18:52 +0000
Subject: [PATCH 0436/1000] =?UTF-8?q?MANTIS=200014172:=20CfgValues=20Erwei?=
 =?UTF-8?q?terung=20-=20CfgErase=20integrieren=20-=20Zus=C3=A4tzlich=20zu?=
 =?UTF-8?q?=20AddToList=20auch=20ein=20EraseFromList?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

git-svn-id: svn://localhost/SelfServiceCommon/trunk@636 90b65887-3827-0410-9a23-83215b262276
---
 .../Massai/cpp/CfgTools/inc/CfgValues_def.h   |   8 +-
 .../Massai/cpp/CfgTools/src/CfgValues.cpp     | 131 +++++++++++++++++-
 2 files changed, 132 insertions(+), 7 deletions(-)

diff --git a/SelfServiceCommon/Massai/cpp/CfgTools/inc/CfgValues_def.h b/SelfServiceCommon/Massai/cpp/CfgTools/inc/CfgValues_def.h
index 91ccb8e9..1e3b99b8 100644
--- a/SelfServiceCommon/Massai/cpp/CfgTools/inc/CfgValues_def.h
+++ b/SelfServiceCommon/Massai/cpp/CfgTools/inc/CfgValues_def.h
@@ -62,9 +62,13 @@
 //                      - Fix returncode of 0, when addtolist input is
 //                        is ill-formatted.
 //                      - Fixed exception lists in "cfgmgr.idl"
-#define FILE_VER_BIN 1,1,2,0
-#define FILE_VER_DTS "1.1.2.0\0"
+// #define FILE_VER_BIN 1,1,2,0
+// #define FILE_VER_DTS "1.1.2.0\0"
 //
+// 10.01.2014  GiT       - New functions: erase, removefromlist
+//
+#define FILE_VER_BIN 1,1,3,0
+#define FILE_VER_DTS "1.1.3.0\0"
 //-------------------------------------------------------------------------
 
 
diff --git a/SelfServiceCommon/Massai/cpp/CfgTools/src/CfgValues.cpp b/SelfServiceCommon/Massai/cpp/CfgTools/src/CfgValues.cpp
index 2d110a5e..41f3a2ae 100644
--- a/SelfServiceCommon/Massai/cpp/CfgTools/src/CfgValues.cpp
+++ b/SelfServiceCommon/Massai/cpp/CfgTools/src/CfgValues.cpp
@@ -22,8 +22,11 @@
 
 #include <iostream>
 #include <fstream>
+#include <sstream>
+#include <algorithm>
+#include <list>
 
-
+#define ACC_NAME "CfgValues.exe"
 
 #define CCHR_VAL_BEG    '\"'
 #define CCHR_VAL_END    '\"'
@@ -727,7 +730,7 @@ int main( int argc, char ** argv )
          }
          Config::access Acc;
          Acc.Item = CORBA::string_dup( ArgPath );
-         Acc.Authorization = CORBA::string_dup( argv[0] );
+         Acc.Authorization = CORBA::string_dup( ACC_NAME );
          switch( NodeProxy->getItemType( Acc ) )
          {
 
@@ -746,7 +749,7 @@ int main( int argc, char ** argv )
                }
                //
                unsigned Records = 0;
-               cfgReadDirectory( OS, Records, DirProxy, argv[0], ArgPath );
+               cfgReadDirectory( OS, Records, DirProxy, ACC_NAME, ArgPath );
                std::cout << DSPLLIN;
                soutItems( Records );
                std::cout << " processed sucessfully." << std::endl;
@@ -879,7 +882,7 @@ int main( int argc, char ** argv )
 
          Config::access SAcc;
          Config::description CDescr;
-         SAcc.Authorization = CORBA::string_dup( argv[0] );
+         SAcc.Authorization = CORBA::string_dup( ACC_NAME );
 
          std::cout
             << DSPLLIN "Writing configuration value(s) from file "
@@ -1371,12 +1374,126 @@ int main( int argc, char ** argv )
          }
       }
       //
+      // Then try, if the ERASE-option is given
+      //
+      char const * const DelItem = Arg.option( "ERASE" );
+      if( DelItem )
+      {
+        corbaClient<Config::Directory> DirClient
+        (
+          Host,
+          CFGMGR_PORT,
+          CFGMGR_SRVNAME_DIRECTORY
+        );
+        Config::Directory * const DirProxy = DirClient.proxy();
+        if( !DirProxy )
+        {
+          std::cout
+             << DSPLERR "Could not connect the Directory servant."
+             << std::endl;
+          return 1;
+        }
+        Config::access SAcc;
+        SAcc.Authorization = CORBA::string_dup( ACC_NAME );
+        SAcc.Item = CORBA::string_dup( DelItem );
+        try
+        {
+          DirProxy->erase( SAcc );
+        }
+        catch( Config::Node::notFound & )
+        {
+          std::cout << DSPLERR "Erase item [" << DelItem << "] not found - ignored." << std::endl;
+        }
+        std::cout
+           << DSPLLIN "Erased [" << DelItem << "]"
+           << std::endl;
+        return 0;
+      }
+      //
+      // Then try, if the REMOVEFROMLIST-option is given
+      //
+      char const * const RemItem = Arg.option( "REMOVEFROMLIST" );
+      char const * const RemValue = Arg.option( "VALUE" );
+      if( RemItem && RemValue)
+      {
+        Config::access SAcc;
+        Config::description CDescr;
+        SAcc.Authorization = CORBA::string_dup( ACC_NAME );
+        SAcc.Item = CORBA::string_dup( RemItem );
+            
+        corbaClient<Config::Textlist>
+          TextlistClnt( Host, CFGMGR_PORT, CFGMGR_SRVNAME_TEXTLIST );
+        Config::Textlist * const TextlistProxy = TextlistClnt.proxy();
+        if( !TextlistProxy )
+        {
+          std::cout
+             << DSPLERR "Could not connect the "
+             << CFGMGR_SRVNAME_TEXTLIST << " servant."
+             << std::endl;
+          return 1;
+        }
+        try
+        {
+          if( TextlistProxy->get( SAcc ) )
+          {
+            Config::Textlist::strings const & Val =
+               *TextlistProxy->get( SAcc );
+            unsigned int Length = Val.length();
+            std::stringstream strbuf;
+            Config::Textlist::strings cstrbuflist;
+            cstrbuflist.length(Length);
+            std::cout
+               << "Found " << Length << " Textlistitems"
+               << std::endl;
+            
+            int IdxNew = 0;
+            for( unsigned Idx = 0; Idx < Length; ++Idx )
+            {
+               readTextListCopy( strbuf, Val[Idx].in() );
+
+               if(strbuf.str().compare(RemValue) != 0)
+               {
+                 cstrbuflist[IdxNew++]=(CORBA::string_dup(Val[Idx].in()));
+               }
+               strbuf.str(""); strbuf.clear();
+            }
+            if(IdxNew != Length && (IdxNew > 0))
+            {
+              cstrbuflist.length(IdxNew);
+              try
+              {
+                TextlistProxy->set( SAcc, cstrbuflist );
+                std::cout
+                   << "Removed [" << RemValue << "] from Listitem [" << RemItem << "] "
+                   << std::endl;
+              }
+              catch( ... )
+              {
+                std::cout
+                   << DSPLERR "Unable to write changed list to "
+                   << RemItem << " servant."
+                   << std::endl;
+                return 1;
+              }
+            } else
+            {
+              std::cout << DSPLLIN "Listitem [" << RemValue << "] not found in List - ignored." << std::endl;
+            }            
+          }
+        }
+        catch( Config::Node::notFound & )
+        {
+          std::cout << DSPLERR "REMOVEFROMLIST item [" << RemItem << "] not found - ignored." << std::endl;
+        }
+        return 0;         
+      }
+      //
       // No explicit command - invalid syntax!
       //
       std::cout
          << "CfgValues Vers." << _atsaver + 22 << "\n"
          << HINDENT1
-            "Copyright (c) 2004-2009 MATERNA GmbH"
+            "Copyright (c) 2004-2014 MATERNA GmbH"
             " Information & Communications\n"
          << HINDENT1 "usage:"
             " CfgValues"
@@ -1387,6 +1504,10 @@ int main( int argc, char ** argv )
             HINDENT2 "   |\n"
             HINDENT2 "   -write:<from-file> [-setinitial|-autoinitial]"
                      " [-addtolist|-addtolistunique]\n"
+            HINDENT2 "   |\n"
+            HINDENT2 "   -erase:<Config-item|Config-section>\n"
+            HINDENT2 "   |\n"
+            HINDENT2 "   -REMOVEFROMLIST:<Config-listitem> -value:<listentry_to_remove>\n"
             HINDENT2 "}"
          << std::endl;
       if( Arg.option( "HIDDEN" ) )
-- 
2.41.0.windows.1

