From fbe7adf68df6b53837c5557e11b9857acfd00193 Mon Sep 17 00:00:00 2001
From: motten <motten@90b65887-3827-0410-9a23-83215b262276>
Date: Wed, 20 Jul 2016 11:46:56 +0000
Subject: [PATCH 0768/1076] MANTIS 0032431 -implemented setMeta() for
 nConfigBasicTextList

git-svn-id: svn://localhost/SelfServiceCommon/trunk@1048 90b65887-3827-0410-9a23-83215b262276
---
 .../inc/cfgclnt/nConfigBasicTextList.hpp      | 23 ++++++
 .../inc/cfgclnt/nConfigTextList.hpp           | 20 +++++
 .../cpp/CfgClnt/src/nConfigBasicTextList.cpp  | 73 ++++++++++++++++++-
 .../cpp/CfgClnt/src/nConfigTextList.cpp       | 40 ++++++++++
 4 files changed, 155 insertions(+), 1 deletion(-)

diff --git a/SelfServiceCommon/Interfaces/inc/cfgclnt/nConfigBasicTextList.hpp b/SelfServiceCommon/Interfaces/inc/cfgclnt/nConfigBasicTextList.hpp
index 27fa42cc..508bd020 100644
--- a/SelfServiceCommon/Interfaces/inc/cfgclnt/nConfigBasicTextList.hpp
+++ b/SelfServiceCommon/Interfaces/inc/cfgclnt/nConfigBasicTextList.hpp
@@ -166,6 +166,29 @@ namespace nConfig
             std::list<std::string> const &      Val
          )
          throw( exception );
+         
+       /**
+       *
+       * Update text configuration item's meta data.
+       *
+       * @param Item:           The name of the configuration item.
+       *
+       * @param Rights:         The rights assigned to this item for
+       *                        further access.
+       *
+       * @param Explanation:    An explanation for this item.
+       *
+       * @param MaxLength:      The maximum length of the value string.
+       *
+       */
+      void setMeta
+         (
+            char const *   Item,
+            char const *   Rights,
+            char const *   Explanation,
+            long           MaxLength
+         )
+         throw( exception ); 
 
    private:
 
diff --git a/SelfServiceCommon/Interfaces/inc/cfgclnt/nConfigTextList.hpp b/SelfServiceCommon/Interfaces/inc/cfgclnt/nConfigTextList.hpp
index 00a57f28..1d791b0e 100644
--- a/SelfServiceCommon/Interfaces/inc/cfgclnt/nConfigTextList.hpp
+++ b/SelfServiceCommon/Interfaces/inc/cfgclnt/nConfigTextList.hpp
@@ -162,6 +162,26 @@ namespace nConfig
        */
       void setInitial( std::list<std::string> const & Val )
          throw( exception );
+         
+      /**
+      *
+      * Update text configuration meta data.
+      *
+      * @param Rights:         The rights assigned to this item for
+      *                        further access.
+      *
+      * @param Explanation:    An explanation for this item.
+      *
+      * @param MaxLength:      The maximum length of the value string.
+      *
+      */
+      void setMeta
+       (
+          char const *   Rights,
+          char const *   Explanation,
+          long           MaxLength
+       )
+          throw( exception );
 
    private:
 
diff --git a/SelfServiceCommon/Massai/cpp/CfgClnt/src/nConfigBasicTextList.cpp b/SelfServiceCommon/Massai/cpp/CfgClnt/src/nConfigBasicTextList.cpp
index aaaedbba..2c5690f8 100644
--- a/SelfServiceCommon/Massai/cpp/CfgClnt/src/nConfigBasicTextList.cpp
+++ b/SelfServiceCommon/Massai/cpp/CfgClnt/src/nConfigBasicTextList.cpp
@@ -32,6 +32,7 @@
 #define CBTLGT  "nConfig::basicTextList::get"
 #define CBTLSI  "nConfig::basicTextList::setInitial"
 #define CBTLST  "nConfig::basicTextList::set"
+#define CBTSM   "nConfig::basicText::setMeta"
 
 #define THROW_( I, S ) \
       MULTILINE_MACRO_BEGIN() \
@@ -418,6 +419,58 @@ namespace nConfig
             THROW_( Item, CBTLSI " - Unknown exception" );
          }
       }
+      
+      /**
+       *
+       * Implementation class method.
+       *
+      **/
+      void setMeta
+      (
+         char const *   Item,
+         char const *   Rights,
+         char const *   Explanation,
+         long           MaxLength
+      )
+         throw( exception )
+      {
+        if (M_pOS) *M_pOS << CBTSM " ..." << std::endl;
+        try
+        {
+          Config::access Access;
+          Access.Item = CORBA::string_dup(Item);
+          Access.Authorization = CORBA::string_dup(M_Auth.c_str());
+          Config::description Description;
+          Description.Rights = CORBA::string_dup(Rights);
+          Description.Explanation = CORBA::string_dup(Explanation);
+          validProxy()->setMeta(Access, Description, MaxLength);
+          if (M_pOS) *M_pOS << CBTSM "." << std::endl;
+        }
+        catch (Config::Node::noConfiguration &)
+        {
+          THROW_S(Item, CBTSM " - noConfiguration exception");
+        }
+        catch (Config::Node::notAuthorized &)
+        {
+          THROW_(Item, CBTSM " - notAuthorized exception");
+        }
+        catch (Config::Node::notFound &)
+        {
+          THROW_(Item, CBTSM " - notFound exception");
+        }
+        catch (Config::Node::wrongParam &)
+        {
+          THROW_(Item, CBTSM " - wrongParam exception");
+        }
+        catch (CORBA::Exception &)
+        {
+          THROW_S(Item, CBTSM " - CORBA::Exception");
+        }
+        catch (...)
+        {
+          THROW_(Item, CBTSM " - Unknown exception");
+        }
+      }
 
    private:
 
@@ -546,7 +599,25 @@ namespace nConfig
    }
 
 
-
+   /*
+    *
+    * Public method - see nConfigBasicTextList.hpp
+    *
+    */
+   void basicTextList::setMeta
+   (
+      char const *   Item,
+      char const *   Rights,
+      char const *   Explanation,
+      long           MaxLength
+   )
+      throw( exception )
+   {
+      M_Impl->setMeta( Item, Rights, Explanation, MaxLength );
+   }
+   
+   
+   
 }
 
 
diff --git a/SelfServiceCommon/Massai/cpp/CfgClnt/src/nConfigTextList.cpp b/SelfServiceCommon/Massai/cpp/CfgClnt/src/nConfigTextList.cpp
index bd5811be..6948b803 100644
--- a/SelfServiceCommon/Massai/cpp/CfgClnt/src/nConfigTextList.cpp
+++ b/SelfServiceCommon/Massai/cpp/CfgClnt/src/nConfigTextList.cpp
@@ -270,6 +270,28 @@ namespace nConfig
       {
          M_Basic.setInitial( M_Item.c_str(), Value );
       }
+      
+      /**
+      *
+      * Update text configuration meta data.
+      *
+      * @param Rights:         The rights assigned to this item for
+      *                        further access.
+      *
+      * @param Explanation:    An explanation for this item.
+      *
+      * @param MaxLength:      The maximum length of the value string.
+      */
+      void setMeta
+       (
+          char const *   Rights,
+          char const *   Explanation,
+          long           MaxLength
+       )
+          throw( exception )
+      {
+        M_Basic.setMeta(M_Item.c_str(), Rights, Explanation, MaxLength );
+      }
 
    private:
 
@@ -403,6 +425,24 @@ namespace nConfig
       M_Impl->setInitial( Value );
    }
 
+   
+   
+   /*
+    *
+    * Public method - see nConfigBasicText.hpp
+    *
+    */
+   void gcTextList::setMeta
+   (
+      char const *   Rights,
+      char const *   Explanation,
+      long           MaxLength
+   )
+      throw( exception )
+   {
+      M_Impl->setMeta( Rights, Explanation, MaxLength );
+   }
+   
 
 
    /*
-- 
2.41.0.windows.1

