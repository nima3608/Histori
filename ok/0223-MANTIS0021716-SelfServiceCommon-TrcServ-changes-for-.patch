From 7de69dc275312688f97d716dd842e750f49c8481 Mon Sep 17 00:00:00 2001
From: tgeisler <tgeisler@90b65887-3827-0410-9a23-83215b262276>
Date: Thu, 1 Dec 2011 14:17:17 +0000
Subject: [PATCH 0223/1077] MANTIS0021716: SelfServiceCommon TrcServ changes
 for VC10 compatibilty

git-svn-id: svn://localhost/SelfServiceCommon/trunk@273 90b65887-3827-0410-9a23-83215b262276
---
 .../Services/cpp/TrcServ/inc/TraceStrExp.h    |   2 +-
 .../Services/cpp/TrcServ/inc/TrcExp.h         |   4 +-
 .../Services/cpp/TrcServ/inc/TrcHdlExp.h      |   4 +-
 .../Services/cpp/TrcServ/inc/TrcServ.h        |   4 +-
 .../Services/cpp/TrcServ/inc/stList.hpp       |   2 +-
 .../Services/cpp/TrcServ/res/TraceDLL.rc      |   4 +-
 .../Services/cpp/TrcServ/res/TraceHDLDLL.rc   |   4 +-
 .../Services/cpp/TrcServ/src/CltData.cpp      |  28 +--
 .../Services/cpp/TrcServ/src/TraceFile.cpp    |  19 +-
 .../Services/cpp/TrcServ/src/TrcClt.cpp       |   3 -
 .../Services/cpp/TrcServ/src/TrcPrtcl.cpp     | 195 +++++++++---------
 .../Services/cpp/TrcServ/src/decrypt.cpp      |   4 +-
 12 files changed, 136 insertions(+), 137 deletions(-)

diff --git a/SelfServiceCommon/Services/cpp/TrcServ/inc/TraceStrExp.h b/SelfServiceCommon/Services/cpp/TrcServ/inc/TraceStrExp.h
index 416eea8c..abf449fa 100644
--- a/SelfServiceCommon/Services/cpp/TrcServ/inc/TraceStrExp.h
+++ b/SelfServiceCommon/Services/cpp/TrcServ/inc/TraceStrExp.h
@@ -18,7 +18,7 @@
 #endif
 
 
-#include <iostream.h>
+#include <iostream>
 #include <strstrea.h>
 
 #define DllExport __declspec( dllexport )
diff --git a/SelfServiceCommon/Services/cpp/TrcServ/inc/TrcExp.h b/SelfServiceCommon/Services/cpp/TrcServ/inc/TrcExp.h
index 7d708eed..377263c0 100644
--- a/SelfServiceCommon/Services/cpp/TrcServ/inc/TrcExp.h
+++ b/SelfServiceCommon/Services/cpp/TrcServ/inc/TrcExp.h
@@ -46,7 +46,7 @@ extern "C"
   TraceLevel
 
 */
-#define      No                   0
+#define      No_TRC               0
 #define      MajorError           1
 #define      MinorError           2
 #define      MajorWarning         3
@@ -55,7 +55,7 @@ extern "C"
 #define      BasicProcess         6
 #define      SecondaryRuntime     7
 #define      SecondaryFrequent    8
-#define      All                  9
+#define      All_TRC              9
 
 #define TOPIC_HERE              __FILE__,__LINE__,__FUNCTION__
 #define MajorError_HERE         1,__FILE__,__LINE__,__FUNCTION__
diff --git a/SelfServiceCommon/Services/cpp/TrcServ/inc/TrcHdlExp.h b/SelfServiceCommon/Services/cpp/TrcServ/inc/TrcHdlExp.h
index 17cd48bc..519ae3c4 100644
--- a/SelfServiceCommon/Services/cpp/TrcServ/inc/TrcHdlExp.h
+++ b/SelfServiceCommon/Services/cpp/TrcServ/inc/TrcHdlExp.h
@@ -50,7 +50,7 @@ typedef int trcHandle;
   TraceLevel
 
 */
-#define      No                   0
+#define      No_TRC               0
 #define      MajorError           1
 #define      MinorError           2
 #define      MajorWarning         3
@@ -59,7 +59,7 @@ typedef int trcHandle;
 #define      BasicProcess         6
 #define      SecondaryRuntime     7
 #define      SecondaryFrequent    8
-#define      All                  9
+#define      All_TRC              9
 
 #define TOPIC_HERE              __FILE__,__LINE__,__FUNCTION__
 #define MajorError_HERE         1,__FILE__,__LINE__,__FUNCTION__
diff --git a/SelfServiceCommon/Services/cpp/TrcServ/inc/TrcServ.h b/SelfServiceCommon/Services/cpp/TrcServ/inc/TrcServ.h
index 6614c6b7..8a7d6d89 100644
--- a/SelfServiceCommon/Services/cpp/TrcServ/inc/TrcServ.h
+++ b/SelfServiceCommon/Services/cpp/TrcServ/inc/TrcServ.h
@@ -38,7 +38,7 @@
 ***************************************************************************/
 
 
-#define      No                   0
+#define      No_TRC               0
 #define      MajorError           1
 #define      MinorError           2
 #define      MajorWarning         3
@@ -47,7 +47,7 @@
 #define      BasicProcess         6
 #define      SecondaryRuntime     7
 #define      SecondaryFrequent    8
-#define      All                  9
+#define      All_TRC              9
 
 #define HERE  __FILE__,__LINE__,__FUNCTION__
 
diff --git a/SelfServiceCommon/Services/cpp/TrcServ/inc/stList.hpp b/SelfServiceCommon/Services/cpp/TrcServ/inc/stList.hpp
index 7fb13291..b940ad48 100644
--- a/SelfServiceCommon/Services/cpp/TrcServ/inc/stList.hpp
+++ b/SelfServiceCommon/Services/cpp/TrcServ/inc/stList.hpp
@@ -21,7 +21,7 @@
 
 #ifdef STLIST_STREAM
 
-#include <iostream.h>
+#include <iostream>
 
 static int stList_Level = 0;
 
diff --git a/SelfServiceCommon/Services/cpp/TrcServ/res/TraceDLL.rc b/SelfServiceCommon/Services/cpp/TrcServ/res/TraceDLL.rc
index 9bf5efc0..fa1da577 100644
--- a/SelfServiceCommon/Services/cpp/TrcServ/res/TraceDLL.rc
+++ b/SelfServiceCommon/Services/cpp/TrcServ/res/TraceDLL.rc
@@ -10,7 +10,7 @@
 //
 // Generated from the TEXTINCLUDE 2 resource.
 //
-#include "afxres.h"
+#include "windows.h"
 
 /////////////////////////////////////////////////////////////////////////////
 #undef APSTUDIO_READONLY_SYMBOLS
@@ -80,7 +80,7 @@ END
 
 2 TEXTINCLUDE DISCARDABLE
 BEGIN
-    "#include ""afxres.h""\r\n"
+    "#include ""windows.h""\r\n"
     "\0"
 END
 
diff --git a/SelfServiceCommon/Services/cpp/TrcServ/res/TraceHDLDLL.rc b/SelfServiceCommon/Services/cpp/TrcServ/res/TraceHDLDLL.rc
index 8bf22b72..c5f78af1 100644
--- a/SelfServiceCommon/Services/cpp/TrcServ/res/TraceHDLDLL.rc
+++ b/SelfServiceCommon/Services/cpp/TrcServ/res/TraceHDLDLL.rc
@@ -10,7 +10,7 @@
 //
 // Generated from the TEXTINCLUDE 2 resource.
 //
-#include "afxres.h"
+#include "windows.h"
 
 /////////////////////////////////////////////////////////////////////////////
 #undef APSTUDIO_READONLY_SYMBOLS
@@ -80,7 +80,7 @@ END
 
 2 TEXTINCLUDE DISCARDABLE
 BEGIN
-    "#include ""afxres.h""\r\n"
+    "#include ""windows.h""\r\n"
     "\0"
 END
 
diff --git a/SelfServiceCommon/Services/cpp/TrcServ/src/CltData.cpp b/SelfServiceCommon/Services/cpp/TrcServ/src/CltData.cpp
index b3e21072..f212b3e5 100644
--- a/SelfServiceCommon/Services/cpp/TrcServ/src/CltData.cpp
+++ b/SelfServiceCommon/Services/cpp/TrcServ/src/CltData.cpp
@@ -29,7 +29,7 @@ GiT 17.05.2011 removed flush after each line (performance problems with virus sc
 #include <string>
 #include <string.h>
 #include <stdio.h>
-#include <iostream.h>
+#include <iostream>
 #include <windows.h>
 #ifndef __IBMCPP__
 #include <exception>
@@ -446,8 +446,8 @@ void DiskTraceFile::Cooked
       //handle.flush();
       if (debugOut())
       {
-        cout << msOut.getData();
-        cout.flush();
+        std::cout << msOut.getData();
+        std::cout.flush();
       }
       OutputDebugString(msOut.getData());
     }
@@ -457,8 +457,8 @@ void DiskTraceFile::Cooked
       handle.flush();
       if (debugOut())
       {
-        cout << pText;
-        cout.flush();
+        std::cout << pText;
+        std::cout.flush();
       }
       OutputDebugString(pText);
     }
@@ -717,8 +717,8 @@ void DiskTraceFile::Text
       //handle.flush();
       if (debugOut())
       {
-        cout << msOut.getData();
-        cout.flush();
+        std::cout << msOut.getData();
+        std::cout.flush();
       }
       OutputDebugString(msOut.getData());
     }
@@ -728,8 +728,8 @@ void DiskTraceFile::Text
       //handle.flush();
       if (debugOut())
       {
-        cout << pText;
-        cout.flush();
+        std::cout << pText;
+        std::cout.flush();
       }
       OutputDebugString(pText);
     }
@@ -981,8 +981,8 @@ void DiskTraceFile::Dump
       //handle.flush();
       if (debugOut())
       {
-        cout << msOut.getData();
-        cout.flush();
+        std::cout << msOut.getData();
+        std::cout.flush();
       }
       OutputDebugString(msOut.getData());
     }
@@ -992,8 +992,8 @@ void DiskTraceFile::Dump
       //handle.flush();
       if (debugOut())
       {
-        cout << pText;
-        cout.flush();
+        std::cout << pText;
+        std::cout.flush();
       }
       OutputDebugString(pText);
     }
@@ -1377,7 +1377,7 @@ long ApplicationData::getTopicState(const aObject& Name)
       catch(std::exception& ex)
       {
         pTopic= 0;
-        cout << ex.what() << endl;
+        std::cout << ex.what() << std::endl;
       }
       #endif
       cfgTopics.set(Name, (long) pTopic);
diff --git a/SelfServiceCommon/Services/cpp/TrcServ/src/TraceFile.cpp b/SelfServiceCommon/Services/cpp/TrcServ/src/TraceFile.cpp
index ce94c52e..675ff95c 100644
--- a/SelfServiceCommon/Services/cpp/TrcServ/src/TraceFile.cpp
+++ b/SelfServiceCommon/Services/cpp/TrcServ/src/TraceFile.cpp
@@ -26,9 +26,12 @@
 #include <sys/stat.h>
 #include <stdio.h>
 #include <string.h>
-#include <fstream.h>
+
 #include <windows.h>
+#include <fstream>
+#define NO_WIN32_LEAN_AND_MEAN
 #include <Shlobj.h>
+using namespace std;
 
 #include "traceFile.h"
 
@@ -204,12 +207,12 @@ int traceFile::reopen()
   if (handle && handle->pszFileName)
   {
     GetLocalTime(&(handle->start));
-    #ifndef __IBMCPP__
-    handle->out.open(handle->pszFileName, ios::app, filebuf::sh_read);
+    #if 0 
+	handle->out.open(handle->pszFileName, ios::app, filebuf::sh_read);
     #else
-    handle->out.open(handle->pszFileName, ios::app);
+	handle->out.open(handle->pszFileName, ios::app);
     #endif
-    result = handle->out.good();
+	result = handle->out.good();
   }
   else
     result = 0;
@@ -240,7 +243,7 @@ int traceFile::openFile()
     if (handle && handle->pszFileName)
     {
       GetLocalTime(&(handle->start));
-      #ifndef __IBMCPP__
+      #if 0 
       handle->out.open(handle->pszFileName, ios::app, filebuf::sh_read);
       #else
       handle->out.open(handle->pszFileName, ios::app);
@@ -710,7 +713,7 @@ int traceFile::openNextGeneration(int newDay)
   if (handle)
   {
     GetLocalTime(&(handle->start));
-    #ifndef __IBMCPP__
+    #if 0 
     handle->out.open(handle->pszFileName, ios::app, filebuf::sh_read);
     #else
     handle->out.open(handle->pszFileName, ios::app);
@@ -739,7 +742,7 @@ int traceFile::fitToFile(long lSize) const
   {
     if (handle->out.good())
     {
-      if (handle->out.tellp() + lSize <= lMaxFileSize || handle->out.tellp() == 0)
+      if(( lSize + handle->out.tellp())  <= lMaxFileSize || ((long)handle->out.tellp() == 0))
         result = 1;
     }
   }
diff --git a/SelfServiceCommon/Services/cpp/TrcServ/src/TrcClt.cpp b/SelfServiceCommon/Services/cpp/TrcServ/src/TrcClt.cpp
index edb3016f..3d96369f 100644
--- a/SelfServiceCommon/Services/cpp/TrcServ/src/TrcClt.cpp
+++ b/SelfServiceCommon/Services/cpp/TrcServ/src/TrcClt.cpp
@@ -37,9 +37,6 @@
 #include <iostream.h>
 #define std
 #endif
-#include <iostream.h>
-
-
 
 #include "cxComm/cxAPI.h"
 #include "SapiOS.H"
diff --git a/SelfServiceCommon/Services/cpp/TrcServ/src/TrcPrtcl.cpp b/SelfServiceCommon/Services/cpp/TrcServ/src/TrcPrtcl.cpp
index 65496b60..d0800f9c 100644
--- a/SelfServiceCommon/Services/cpp/TrcServ/src/TrcPrtcl.cpp
+++ b/SelfServiceCommon/Services/cpp/TrcServ/src/TrcPrtcl.cpp
@@ -215,12 +215,12 @@ long cxBuffer::sendNextEntry()
   if(!isEmpty())
   {
     #ifdef DEBUGOUT
-    std::cout << "-> cxWrite (Own=" << pEntries[iFirst].lOwnHandle <<", Partner=" << pEntries[iFirst].lPartnerHandle << ", Size=" << pEntries[iFirst].lSize << ")" << std::endl;
+    std::cout << "-> cxWrite (Own=" << pEntries[iFirst].lOwnHandle <<", Partner=" << pEntries[iFirst].lPartnerHandle << ", Size=" << pEntries[iFirst].lSize << ")" << endl;
     dump((char*)pEntries[iFirst].pData, pEntries[iFirst].lSize);
     #endif
     result= cxWrite(pEntries[iFirst].lOwnHandle, pEntries[iFirst].lPartnerHandle, pEntries[iFirst].pData, &(pEntries[iFirst].lSize));
     #ifdef DEBUGOUT
-    std::cout << "<- cxWrite (Size=" << pEntries[iFirst].lSize << ")=" << result << std::endl;
+    std::cout << "<- cxWrite (Size=" << pEntries[iFirst].lSize << ")=" << result << endl;
     #endif
 
     if(result == CXRC_OK)
@@ -269,12 +269,12 @@ long cxBuffer::Write(long lOwnHandle, long lPartnerHandle, const char* pData, lo
   if (result == CXRC_OK)
   {
     #ifdef DEBUGOUT
-    std::cout << "-> cxWrite (Own=" << lOwnHandle <<", Partner=" << lPartnerHandle << ", Size=" << *plSize << ")" << std::endl;
+    std::cout << "-> cxWrite (Own=" << lOwnHandle <<", Partner=" << lPartnerHandle << ", Size=" << *plSize << ")" << endl;
     dump(pData, *plSize);
     #endif
       result= cxWrite(lOwnHandle, lPartnerHandle, pData, plSize);
     #ifdef DEBUGOUT
-    std::cout << "<- cxWrite (Size=" << *plSize << ")=" << result << std::endl;
+    std::cout << "<- cxWrite (Size=" << *plSize << ")=" << result << endl;
     #endif
   }
   if (result != CXRC_OK)
@@ -292,8 +292,7 @@ void dump(const char* pData, int iLen)
       std::cout << "0";
     std::cout << (int)((unsigned char*)pData)[i] << " ";
   }
-  std::cout << std::dec;
-  std::cout << std::endl;
+  std::cout << std::dec << std::endl;
 }
 
 /*---------------------------------------------------------------------------
@@ -603,7 +602,7 @@ long writeCmdStop01(long OwnHandle, long PartnerHandle, cxBuffer* cxBuf)
   lWritten = lSize;
 
   #ifdef DEBUGOUT
-  std::cout << "writeCmdStop01" << std::endl;
+  std::cout << "writeCmdStop01" << endl;
   #endif
 
 
@@ -620,12 +619,12 @@ long writeCmdStop01(long OwnHandle, long PartnerHandle, cxBuffer* cxBuf)
   else
   {
     #ifdef DEBUGOUT
-    std::cout << "-> cxWrite (Own=" << OwnHandle <<", Partner=" << PartnerHandle << ", Size=" << lWritten << ")" << std::endl;
+    std::cout << "-> cxWrite (Own=" << OwnHandle <<", Partner=" << PartnerHandle << ", Size=" << lWritten << ")" << endl;
     dump((char*)&lType, lWritten);
     #endif
       result= cxWrite(OwnHandle, PartnerHandle, (char*)&lType, &lWritten);
     #ifdef DEBUGOUT
-    std::cout << "<- cxWrite (Size=" << lWritten << ")=" << result << std::endl;
+    std::cout << "<- cxWrite (Size=" << lWritten << ")=" << result << endl;
     #endif
   }
   if (lWritten != lSize  && result == CXRC_OK)
@@ -660,7 +659,7 @@ long writeCmdShutdown01(long OwnHandle, long PartnerHandle, cxBuffer* cxBuf)
   lWritten = lSize;
 
   #ifdef DEBUGOUT
-  std::cout << "writeCmdShutdown01" << std::endl;
+  cout << "writeCmdShutdown01" << endl;
   #endif
 
 
@@ -669,12 +668,12 @@ long writeCmdShutdown01(long OwnHandle, long PartnerHandle, cxBuffer* cxBuf)
   else
   {
     #ifdef DEBUGOUT
-    std::cout << "-> cxWrite (Own=" << OwnHandle <<", Partner=" << PartnerHandle << ", Size=" << lWritten << ")" << std::endl;
+    cout << "-> cxWrite (Own=" << OwnHandle <<", Partner=" << PartnerHandle << ", Size=" << lWritten << ")" << endl;
     dump((char*)&lType, lWritten);
     #endif
     result= cxWrite(OwnHandle, PartnerHandle, (char*)&lType, &lWritten);
     #ifdef DEBUGOUT
-    std::cout << "<- cxWrite (Size=" << lWritten << ")=" << result << std::endl;
+    cout << "<- cxWrite (Size=" << lWritten << ")=" << result << endl;
     #endif
     if (lWritten != lSize  && result == CXRC_OK)
       result= CXRC_ERROR;
@@ -702,7 +701,7 @@ long writeCmdNewFile01(long OwnHandle, long PartnerHandle, long lTraceLevel, cxB
   long lSize, lWritten;
 
   #ifdef DEBUGOUT
-    std::cout << "writeCmdNewFile01: " << lTraceLevel << std::endl;
+    cout << "writeCmdNewFile01: " << lTraceLevel << endl;
   #endif
 
   char *pBuffer, *pPos;
@@ -725,12 +724,12 @@ long writeCmdNewFile01(long OwnHandle, long PartnerHandle, long lTraceLevel, cxB
     else
     {
       #ifdef DEBUGOUT
-      std::cout << "-> cxWrite (Own=" << OwnHandle <<", Partner=" << PartnerHandle << ", Size=" << lWritten << ")" << std::endl;
+      cout << "-> cxWrite (Own=" << OwnHandle <<", Partner=" << PartnerHandle << ", Size=" << lWritten << ")" << endl;
       dump(pBuffer, lWritten);
       #endif
       result= cxWrite(OwnHandle, PartnerHandle, pBuffer, &lWritten);
       #ifdef DEBUGOUT
-      std::cout << "<- cxWrite (Size=" << lWritten << ")=" << result << std::endl;
+      cout << "<- cxWrite (Size=" << lWritten << ")=" << result << endl;
       #endif
     }
 
@@ -773,7 +772,7 @@ static long readCmdNewFile01(aMap &Data, char *pCopyBuffer, const char *pBuffer,
     memcpy(&lTraceLevel, pPos, sizeof(long));
     Data.set(DN_LTRACELEVEL, lTraceLevel);
     #ifdef DEBUGOUT
-      std::cout << "readCmdNewFile01: " << lTraceLevel << std::endl;
+      cout << "readCmdNewFile01: " << lTraceLevel << endl;
     #endif
     result= CXRC_OK;
   }
@@ -805,7 +804,7 @@ long writeText01(long OwnHandle, long PartnerHandle, long lTraceLevel, const cha
 
 
   #ifdef DEBUGOUT
-    std::cout << "writeText01: " << lTraceLevel << "," << non_null(pszFile) << "," << sLine << "," << non_null(pszFunction) << "," << non_null(pszText) << std::endl;
+    cout << "writeText01: " << lTraceLevel << "," << non_null(pszFile) << "," << sLine << "," << non_null(pszFunction) << "," << non_null(pszText) << endl;
   #endif
 
 
@@ -874,12 +873,12 @@ long writeText01(long OwnHandle, long PartnerHandle, long lTraceLevel, const cha
     else
     {
       #ifdef DEBUGOUT
-      std::cout << "-> cxWrite (Own=" << OwnHandle <<", Partner=" << PartnerHandle << ", Size=" << lWritten << ")" << std::endl;
+      cout << "-> cxWrite (Own=" << OwnHandle <<", Partner=" << PartnerHandle << ", Size=" << lWritten << ")" << endl;
       dump(pBuffer, lWritten);
       #endif
       result= cxWrite(OwnHandle, PartnerHandle, pBuffer, &lWritten);
       #ifdef DEBUGOUT
-      std::cout << "<- cxWrite (Size=" << lWritten << ")=" << result << std::endl;
+      cout << "<- cxWrite (Size=" << lWritten << ")=" << result << endl;
       #endif
     }
     if (lWritten != lSize  && result == CXRC_OK)
@@ -954,7 +953,7 @@ static long readText01(aMap &Data, char *pCopyBuffer, const char *pBuffer, long
         {
           Data.set(DN_STEXT, pCopyBuffer);
           #ifdef DEBUGOUT
-            std::cout << "readText01: " << FixedData.lTraceLevel << "," << non_null(Data.get(DN_SFILE).strObject()) << "," << FixedData.sLine << "," << Data.get(DN_SFUNCTION).strObject() << "," << non_null(Data.get(DN_STEXT).strObject()) << std::endl;
+            cout << "readText01: " << FixedData.lTraceLevel << "," << non_null(Data.get(DN_SFILE).strObject()) << "," << FixedData.sLine << "," << Data.get(DN_SFUNCTION).strObject() << "," << non_null(Data.get(DN_STEXT).strObject()) << endl;
           #endif
           result= CXRC_OK;
         }
@@ -987,7 +986,7 @@ long writeDump01(long OwnHandle, long PartnerHandle, long lTraceLevel, const cha
   long lType = TT_DUMP01;
 
   #ifdef DEBUGOUT
-    std::cout << "writeDump01: " << lTraceLevel << "," << non_null(pszFile) << "," << sLine << "," << non_null(pszFunction) << "," << lDumpSize << std::endl;
+    cout << "writeDump01: " << lTraceLevel << "," << non_null(pszFile) << "," << sLine << "," << non_null(pszFunction) << "," << lDumpSize << endl;
   #endif
 
   osGetDateTime (&(FixedData.timestamp));
@@ -1050,12 +1049,12 @@ long writeDump01(long OwnHandle, long PartnerHandle, long lTraceLevel, const cha
     else
     {
       #ifdef DEBUGOUT
-      std::cout << "-> cxWrite (Own=" << OwnHandle <<", Partner=" << PartnerHandle << ", Size=" << lWritten << ")" << std::endl;
+      cout << "-> cxWrite (Own=" << OwnHandle <<", Partner=" << PartnerHandle << ", Size=" << lWritten << ")" << endl;
       dump(pBuffer, lWritten);
       #endif
       result= cxWrite(OwnHandle, PartnerHandle, pBuffer, &lWritten);
       #ifdef DEBUGOUT
-      std::cout << "<- cxWrite (Size=" << lWritten << ")=" << result << std::endl;
+      cout << "<- cxWrite (Size=" << lWritten << ")=" << result << endl;
       #endif
     }
     if (lWritten != lSize  && result == CXRC_OK)
@@ -1120,7 +1119,7 @@ static long readDump01(aMap &Data, char *pCopyBuffer, const char *pBuffer, long
         {
           Data.set(DN_BDUMP, aObject(pPos, lCopy));
           #ifdef DEBUGOUT
-            std::cout << "readDump01: " << FixedData.lTraceLevel << "," << non_null(Data.get(DN_SFILE).strObject()) << "," << FixedData.sLine << "," << non_null(Data.get(DN_SFUNCTION).strObject()) << "," << Data.get(DN_BDUMP).count() << std::endl;
+            cout << "readDump01: " << FixedData.lTraceLevel << "," << non_null(Data.get(DN_SFILE).strObject()) << "," << FixedData.sLine << "," << non_null(Data.get(DN_SFUNCTION).strObject()) << "," << Data.get(DN_BDUMP).count() << endl;
           #endif
           result= CXRC_OK;
         }
@@ -1128,7 +1127,7 @@ static long readDump01(aMap &Data, char *pCopyBuffer, const char *pBuffer, long
         {
           Data.set(DN_BDUMP, "<null>");
           #ifdef DEBUGOUT
-            std::cout << "readDump01: " << FixedData.lTraceLevel << "," << non_null(Data.get(DN_SFILE).strObject()) << "," << FixedData.sLine << "," << non_null(Data.get(DN_SFUNCTION).strObject()) << "," << Data.get(DN_BDUMP).count() << std::endl;
+            cout << "readDump01: " << FixedData.lTraceLevel << "," << non_null(Data.get(DN_SFILE).strObject()) << "," << FixedData.sLine << "," << non_null(Data.get(DN_SFUNCTION).strObject()) << "," << Data.get(DN_BDUMP).count() << endl;
           #endif
           result= CXRC_OK;
         }
@@ -1160,7 +1159,7 @@ long writeCmdInit01(long OwnHandle, long PartnerHandle, long lInstance, const ch
   long lType = TT_CMDINIT01;
 
   #ifdef DEBUGOUT
-    std::cout << "writeCmdInit01: " << lInstance << "," << non_null(pszApplication) << std::endl;
+    cout << "writeCmdInit01: " << lInstance << "," << non_null(pszApplication) << endl;
   #endif
 
 
@@ -1191,12 +1190,12 @@ long writeCmdInit01(long OwnHandle, long PartnerHandle, long lInstance, const ch
     else
     {
       #ifdef DEBUGOUT
-      std::cout << "-> cxWrite (Own=" << OwnHandle <<", Partner=" << PartnerHandle << ", Size=" << lWritten << ")" << std::endl;
+      cout << "-> cxWrite (Own=" << OwnHandle <<", Partner=" << PartnerHandle << ", Size=" << lWritten << ")" << endl;
       dump(pBuffer, lWritten);
       #endif
       result= cxWrite(OwnHandle, PartnerHandle, pBuffer, &lWritten);
       #ifdef DEBUGOUT
-      std::cout << "<- cxWrite (Size=" << lWritten << ")=" << result << std::endl;
+      cout << "<- cxWrite (Size=" << lWritten << ")=" << result << endl;
       #endif
     }
     if (lWritten != lSize  && result == CXRC_OK)
@@ -1242,7 +1241,7 @@ static long readCmdInit01(aMap &Data, char *pCopyBuffer, const char *pBuffer, lo
     {
       Data.set(DN_SAPPLICATION, pCopyBuffer);
       #ifdef DEBUGOUT
-        std::cout << "readCmdInit01: " << lInstance << "," << non_null(Data.get(DN_SAPPLICATION).strObject()) << std::endl;
+        cout << "readCmdInit01: " << lInstance << "," << non_null(Data.get(DN_SAPPLICATION).strObject()) << endl;
       #endif
       result= CXRC_OK;
     }
@@ -1272,7 +1271,7 @@ long writeCmdInit02(long OwnHandle, long PartnerHandle, long lInstance, const ch
   long lType = TT_CMDINIT02;
 
   #ifdef DEBUGOUT
-    std::cout << "writeCmdInit02: " << lInstance << "," << non_null(pszApplication) << ", " << non_null(pszModule) << std::endl;
+    cout << "writeCmdInit02: " << lInstance << "," << non_null(pszApplication) << ", " << non_null(pszModule) << endl;
   #endif
 
 
@@ -1315,12 +1314,12 @@ long writeCmdInit02(long OwnHandle, long PartnerHandle, long lInstance, const ch
     else
     {
       #ifdef DEBUGOUT
-      std::cout << "-> cxWrite (Own=" << OwnHandle <<", Partner=" << PartnerHandle << ", Size=" << lWritten << ")" << std::endl;
+      cout << "-> cxWrite (Own=" << OwnHandle <<", Partner=" << PartnerHandle << ", Size=" << lWritten << ")" << endl;
       dump(pBuffer, lWritten);
       #endif
       result= cxWrite(OwnHandle, PartnerHandle, pBuffer, &lWritten);
       #ifdef DEBUGOUT
-      std::cout << "<- cxWrite (Size=" << lWritten << ")=" << result << std::endl;
+      cout << "<- cxWrite (Size=" << lWritten << ")=" << result << endl;
       #endif
     }
     if (lWritten != lSize  && result == CXRC_OK)
@@ -1357,7 +1356,7 @@ long writeCmdInit03(long OwnHandle, long PartnerHandle, long lInstance, const ch
   long lType = TT_CMDINIT03;
 
   #ifdef DEBUGOUT
-    std::cout << "writeCmdInit03: " << lInstance << "," << non_null(pszApplication) << ", " << non_null(pszModule) << std::endl;
+    cout << "writeCmdInit03: " << lInstance << "," << non_null(pszApplication) << ", " << non_null(pszModule) << endl;
   #endif
 
 
@@ -1400,12 +1399,12 @@ long writeCmdInit03(long OwnHandle, long PartnerHandle, long lInstance, const ch
     else
     {
       #ifdef DEBUGOUT
-      std::cout << "-> cxWrite (Own=" << OwnHandle <<", Partner=" << PartnerHandle << ", Size=" << lWritten << ")" << std::endl;
+      cout << "-> cxWrite (Own=" << OwnHandle <<", Partner=" << PartnerHandle << ", Size=" << lWritten << ")" << endl;
       dump(pBuffer, lWritten);
       #endif
       result= cxWrite(OwnHandle, PartnerHandle, pBuffer, &lWritten);
       #ifdef DEBUGOUT
-      std::cout << "<- cxWrite (Size=" << lWritten << ")=" << result << std::endl;
+      cout << "<- cxWrite (Size=" << lWritten << ")=" << result << endl;
       #endif
     }
     if (lWritten != lSize  && result == CXRC_OK)
@@ -1455,7 +1454,7 @@ static long readCmdInit02(aMap &Data, char *pCopyBuffer, const char *pBuffer, lo
       {
         Data.set(DN_SMODULE, pCopyBuffer);
         #ifdef DEBUGOUT
-          std::cout << "readCmdInit02: " << lInstance << ", " << non_null(Data.get(DN_SAPPLICATION).strObject()) << ", " << non_null(Data.get(DN_SMODULE).strObject()) << std::endl;
+          cout << "readCmdInit02: " << lInstance << ", " << non_null(Data.get(DN_SAPPLICATION).strObject()) << ", " << non_null(Data.get(DN_SMODULE).strObject()) << endl;
         #endif
         result= CXRC_OK;
        }
@@ -1502,7 +1501,7 @@ static long readCmdInit03(aMap &Data, char *pCopyBuffer, const char *pBuffer, lo
       {
         Data.set(DN_SMODULE, pCopyBuffer);
         #ifdef DEBUGOUT
-          std::cout << "readCmdInit03: " << lInstance << ", " << non_null(Data.get(DN_SAPPLICATION).strObject()) << ", " << non_null(Data.get(DN_SMODULE).strObject()) << std::endl;
+          cout << "readCmdInit03: " << lInstance << ", " << non_null(Data.get(DN_SAPPLICATION).strObject()) << ", " << non_null(Data.get(DN_SMODULE).strObject()) << endl;
         #endif
         result= CXRC_OK;
        }
@@ -1533,7 +1532,7 @@ long writeCmdParameter01(long OwnHandle, long PartnerHandle, long lTraceLevel, l
   long lType = TT_CMDPARAMETER01;
 
   #ifdef DEBUGOUT
-    std::cout << "writeCmdParameter01: " << lTraceLevel << "," << lTraceMask << "," << lLevelAsMask << std::endl;
+    cout << "writeCmdParameter01: " << lTraceLevel << "," << lTraceMask << "," << lLevelAsMask << endl;
   #endif
 
   lSize = sizeof(long) + sizeof(CmdParameter01);
@@ -1557,12 +1556,12 @@ long writeCmdParameter01(long OwnHandle, long PartnerHandle, long lTraceLevel, l
     else
     {
       #ifdef DEBUGOUT
-      std::cout << "-> cxWrite (Own=" << OwnHandle <<", Partner=" << PartnerHandle << ", Size=" << lWritten << ")" << std::endl;
+      cout << "-> cxWrite (Own=" << OwnHandle <<", Partner=" << PartnerHandle << ", Size=" << lWritten << ")" << endl;
       dump(pBuffer, lWritten);
       #endif
       result= cxWrite(OwnHandle, PartnerHandle, pBuffer, &lWritten);
       #ifdef DEBUGOUT
-      std::cout << "<- cxWrite (Size=" << lWritten << ")=" << result << std::endl;
+      cout << "<- cxWrite (Size=" << lWritten << ")=" << result << endl;
       #endif
     }
     if (lWritten != lSize  && result == CXRC_OK)
@@ -1602,7 +1601,7 @@ static long readCmdParameter01(aMap &Data, char *pCopyBuffer, const char *pBuffe
     Data.set(DN_LLEVELASMASK, FixedData.lLevelAsMask);
     Data.set(DN_LTRACEMASK, FixedData.lTraceMask);
     #ifdef DEBUGOUT
-      std::cout << "readCmdParameter01: " << FixedData.lTraceLevel << ", "  << FixedData.lLevelAsMask << ", "  << FixedData.lTraceMask << std::endl;
+      cout << "readCmdParameter01: " << FixedData.lTraceLevel << ", "  << FixedData.lLevelAsMask << ", "  << FixedData.lTraceMask << endl;
     #endif
     result= CXRC_OK;
   }
@@ -1634,7 +1633,7 @@ long writeCmdNewFile02(long OwnHandle, long PartnerHandle, const char* pszTopic,
   long lType = TT_CMDNEWFILE02;
 
   #ifdef DEBUGOUT
-    std::cout << "writeCmdNewFile02: " << non_null(pszTopic) << std::endl;
+    cout << "writeCmdNewFile02: " << non_null(pszTopic) << endl;
   #endif
 
   if (pszTopic)
@@ -1665,12 +1664,12 @@ long writeCmdNewFile02(long OwnHandle, long PartnerHandle, const char* pszTopic,
     else
     {
       #ifdef DEBUGOUT
-      std::cout << "-> cxWrite (Own=" << OwnHandle <<", Partner=" << PartnerHandle << ", Size=" << lWritten << ")" << std::endl;
+      cout << "-> cxWrite (Own=" << OwnHandle <<", Partner=" << PartnerHandle << ", Size=" << lWritten << ")" << endl;
       dump(pBuffer, lWritten);
       #endif
       result= cxWrite(OwnHandle, PartnerHandle, pBuffer, &lWritten);
       #ifdef DEBUGOUT
-      std::cout << "<- cxWrite (Size=" << lWritten << ")=" << result << std::endl;
+      cout << "<- cxWrite (Size=" << lWritten << ")=" << result << endl;
       #endif
     }
     if (lWritten != lSize  && result == CXRC_OK)
@@ -1710,7 +1709,7 @@ static long readCmdNewFile02(aMap &Data, char *pCopyBuffer, const char *pBuffer,
   {
     Data.set(DN_STOPIC, pCopyBuffer);
     #ifdef DEBUGOUT
-      std::cout << "readCmdNewFile02: " << pCopyBuffer << std::endl;
+      cout << "readCmdNewFile02: " << pCopyBuffer << endl;
     #endif
 
     result= CXRC_OK;
@@ -1742,7 +1741,7 @@ long writeText02(long OwnHandle, long PartnerHandle, const char* pszTopic, const
   long lType = TT_TEXT02;
 
   #ifdef DEBUGOUT
-    std::cout << "writeText02: " << non_null(pszTopic) << "," << non_null(pszFile) << "," << sLine << "," << non_null(pszFunction) << "," << non_null(pszText) << std::endl;
+    cout << "writeText02: " << non_null(pszTopic) << "," << non_null(pszFile) << "," << sLine << "," << non_null(pszFunction) << "," << non_null(pszText) << endl;
   #endif
 
 
@@ -1825,12 +1824,12 @@ long writeText02(long OwnHandle, long PartnerHandle, const char* pszTopic, const
     else
     {
       #ifdef DEBUGOUT
-      std::cout << "-> cxWrite (Own=" << OwnHandle <<", Partner=" << PartnerHandle << ", Size=" << lWritten << ")" << std::endl;
+      cout << "-> cxWrite (Own=" << OwnHandle <<", Partner=" << PartnerHandle << ", Size=" << lWritten << ")" << endl;
       dump(pBuffer, lWritten);
       #endif
       result= cxWrite(OwnHandle, PartnerHandle, pBuffer, &lWritten);
       #ifdef DEBUGOUT
-      std::cout << "<- cxWrite (Size=" << lWritten << ")=" << result << std::endl;
+      cout << "<- cxWrite (Size=" << lWritten << ")=" << result << endl;
       #endif
     }
     if (lWritten != lSize  && result == CXRC_OK)
@@ -1908,7 +1907,7 @@ static long readText02(aMap &Data, char *pCopyBuffer, const char *pBuffer, long
           {
             Data.set(DN_STOPIC, pCopyBuffer);
             #ifdef DEBUGOUT
-              std::cout << "readText02: " << non_null(Data.get(DN_STOPIC).strObject()) << "," << non_null(Data.get(DN_SFILE).strObject()) << "," << FixedData.sLine << "," << non_null(Data.get(DN_SFUNCTION).strObject()) << "," << non_null(Data.get(DN_STEXT).strObject()) << std::endl;
+              cout << "readText02: " << non_null(Data.get(DN_STOPIC).strObject()) << "," << non_null(Data.get(DN_SFILE).strObject()) << "," << FixedData.sLine << "," << non_null(Data.get(DN_SFUNCTION).strObject()) << "," << non_null(Data.get(DN_STEXT).strObject()) << endl;
             #endif
 
             result= CXRC_OK;
@@ -1943,7 +1942,7 @@ long writeDump02(long OwnHandle, long PartnerHandle, const char* pszTopic, const
   long lType = TT_DUMP02;
 
   #ifdef DEBUGOUT
-    std::cout << "writeDump02: " << non_null(pszTopic) << "," << non_null(pszFile) << "," << sLine << "," << non_null(pszFunction) << "," << lDumpSize << std::endl;
+    cout << "writeDump02: " << non_null(pszTopic) << "," << non_null(pszFile) << "," << sLine << "," << non_null(pszFunction) << "," << lDumpSize << endl;
   #endif
 
 
@@ -2018,12 +2017,12 @@ long writeDump02(long OwnHandle, long PartnerHandle, const char* pszTopic, const
     else
     {
       #ifdef DEBUGOUT
-      std::cout << "-> cxWrite (Own=" << OwnHandle <<", Partner=" << PartnerHandle << ", Size=" << lWritten << ")" << std::endl;
+      cout << "-> cxWrite (Own=" << OwnHandle <<", Partner=" << PartnerHandle << ", Size=" << lWritten << ")" << endl;
       dump(pBuffer, lWritten);
       #endif
       result= cxWrite(OwnHandle, PartnerHandle, pBuffer, &lWritten);
       #ifdef DEBUGOUT
-      std::cout << "<- cxWrite (Size=" << lWritten << ")=" << result << std::endl;
+      cout << "<- cxWrite (Size=" << lWritten << ")=" << result << endl;
       #endif
     }
     if (lWritten != lSize  && result == CXRC_OK)
@@ -2092,7 +2091,7 @@ static long readDump02(aMap &Data, char *pCopyBuffer, const char *pBuffer, long
           {
             Data.set(DN_BDUMP, aObject(pPos, lCopy));
             #ifdef DEBUGOUT
-              std::cout << "readDump02: " << non_null(Data.get(DN_STOPIC).strObject()) << "," << non_null(Data.get(DN_SFILE).strObject()) << "," << FixedData.sLine << "," << non_null(Data.get(DN_SFUNCTION).strObject()) << "," << Data.get(DN_BDUMP).count() << std::endl;
+              cout << "readDump02: " << non_null(Data.get(DN_STOPIC).strObject()) << "," << non_null(Data.get(DN_SFILE).strObject()) << "," << FixedData.sLine << "," << non_null(Data.get(DN_SFUNCTION).strObject()) << "," << Data.get(DN_BDUMP).count() << endl;
             #endif
             result= CXRC_OK;
           }
@@ -2100,7 +2099,7 @@ static long readDump02(aMap &Data, char *pCopyBuffer, const char *pBuffer, long
           {
             Data.set(DN_BDUMP, "<null>");
             #ifdef DEBUGOUT
-              std::cout << "readDump02: " << non_null(Data.get(DN_STOPIC).strObject()) << "," << non_null(Data.get(DN_SFILE).strObject()) << "," << FixedData.sLine << "," << non_null(Data.get(DN_SFUNCTION).strObject()) << "," << Data.get(DN_BDUMP).count() << std::endl;
+              cout << "readDump02: " << non_null(Data.get(DN_STOPIC).strObject()) << "," << non_null(Data.get(DN_SFILE).strObject()) << "," << FixedData.sLine << "," << non_null(Data.get(DN_SFUNCTION).strObject()) << "," << Data.get(DN_BDUMP).count() << endl;
             #endif
             result= CXRC_OK;
           }
@@ -2135,7 +2134,7 @@ long writeCmdTopicState01(long OwnHandle, long PartnerHandle, const char* pszTop
   long lType = TT_CMDTOPICSTATE01;
 
   #ifdef DEBUGOUT
-    std::cout << "writeCmdTopicState01: " << non_null(pszTopic) << "," << lState << std::endl;
+    cout << "writeCmdTopicState01: " << non_null(pszTopic) << "," << lState << endl;
   #endif
 
 
@@ -2169,12 +2168,12 @@ long writeCmdTopicState01(long OwnHandle, long PartnerHandle, const char* pszTop
     else
     {
       #ifdef DEBUGOUT
-      std::cout << "-> cxWrite (Own=" << OwnHandle <<", Partner=" << PartnerHandle << ", Size=" << lWritten << ")" << std::endl;
+      cout << "-> cxWrite (Own=" << OwnHandle <<", Partner=" << PartnerHandle << ", Size=" << lWritten << ")" << endl;
       dump(pBuffer, lWritten);
       #endif
       result= cxWrite(OwnHandle, PartnerHandle, pBuffer, &lWritten);
       #ifdef DEBUGOUT
-      std::cout << "<- cxWrite (Size=" << lWritten << ")=" << result << std::endl;
+      cout << "<- cxWrite (Size=" << lWritten << ")=" << result << endl;
       #endif
     }
     if (lWritten != lSize  && result == CXRC_OK)
@@ -2221,7 +2220,7 @@ static long readCmdTopicState01(aMap &Data, char *pCopyBuffer, const char *pBuff
     {
       Data.set(DN_STOPIC, pCopyBuffer);
       #ifdef DEBUGOUT
-        std::cout << "readCmdTopicState01: " << non_null(Data.get(DN_STOPIC).strObject()) << ", " << lTopicState << std::endl;
+        cout << "readCmdTopicState01: " << non_null(Data.get(DN_STOPIC).strObject()) << ", " << lTopicState << endl;
       #endif
 
       result= CXRC_OK;
@@ -2259,7 +2258,7 @@ long writeCmdInitListen01(long OwnHandle, long PartnerHandle, cxBuffer* cxBuf)
   lWritten = lSize;
 
   #ifdef DEBUGOUT
-  std::cout << "writeCmdInitListen01" << std::endl;
+  cout << "writeCmdInitListen01" << endl;
   #endif
 
 
@@ -2268,12 +2267,12 @@ long writeCmdInitListen01(long OwnHandle, long PartnerHandle, cxBuffer* cxBuf)
   else
   {
     #ifdef DEBUGOUT
-    std::cout << "-> cxWrite (Own=" << OwnHandle <<", Partner=" << PartnerHandle << ", Size=" << lWritten << ")" << std::endl;
+    cout << "-> cxWrite (Own=" << OwnHandle <<", Partner=" << PartnerHandle << ", Size=" << lWritten << ")" << endl;
     dump((char*)&lType, lWritten);
     #endif
     result= cxWrite(OwnHandle, PartnerHandle, (char*)&lType, &lWritten);
     #ifdef DEBUGOUT
-    std::cout << "<- cxWrite (Size=" << lWritten << ")=" << result << std::endl;
+    cout << "<- cxWrite (Size=" << lWritten << ")=" << result << endl;
     #endif
   }
   if (lWritten != lSize  && result == CXRC_OK)
@@ -2304,8 +2303,8 @@ long writeCmdData01(long OwnHandle, long PartnerHandle, aMap Data, cxBuffer* cxB
   long lType = TT_CMDDATA01;
 
   #ifdef DEBUGOUT
-    std::cout << "writeCmdData01: " << std::endl;
-    dumpMap(&std::cout, Data);
+    cout << "writeCmdData01: " << endl;
+    dumpMap(&cout, Data);
   #endif
 
   lSize= sizeof(long) + assoFlatSize(Data);
@@ -2326,12 +2325,12 @@ long writeCmdData01(long OwnHandle, long PartnerHandle, aMap Data, cxBuffer* cxB
     else
     {
       #ifdef DEBUGOUT
-      std::cout << "-> cxWrite (Own=" << OwnHandle <<", Partner=" << PartnerHandle << ", Size=" << lWritten << ")" << std::endl;
+      cout << "-> cxWrite (Own=" << OwnHandle <<", Partner=" << PartnerHandle << ", Size=" << lWritten << ")" << endl;
       dump(pBuffer, lWritten);
       #endif
       result= cxWrite(OwnHandle, PartnerHandle, pBuffer, &lWritten);
       #ifdef DEBUGOUT
-      std::cout << "<- cxWrite (Size=" << lWritten << ")=" << result << std::endl;
+      cout << "<- cxWrite (Size=" << lWritten << ")=" << result << endl;
       #endif
     }
     if (lWritten != lSize  && result == CXRC_OK)
@@ -2374,8 +2373,8 @@ static long readCmdData01(aMap &Data, char *pCopyBuffer, const char *pBuffer, lo
     {
       Data= pData->mapObject();
       #ifdef DEBUGOUT
-        std::cout << "readCmdData01: " << std::endl;
-        dumpMap(&std::cout, Data);
+        cout << "readCmdData01: " << endl;
+        dumpMap(&cout, Data);
       #endif
       result= CXRC_OK;
     }
@@ -2415,13 +2414,13 @@ long ReadTrace(long OwnHandle, long *PartnerHandle, long *lType, aMap& Data, lon
   {
     lSize = MAXLINESIZE;
     #ifdef DEBUGOUT
-    std::cout << "-> cxRead (Own=" << OwnHandle << ", Size=" << lSize << ")" << std::endl;
+    cout << "-> cxRead (Own=" << OwnHandle << ", Size=" << lSize << ")" << endl;
     #endif
     rc = cxRead(OwnHandle, PartnerHandle, Buffer, &lSize);
     rcError= rc;
     #ifdef DEBUGOUT
     dump(Buffer, lSize);
-    std::cout << "<- cxRead (Partner=" << *PartnerHandle << ", Size=" << lSize << ") =" << rc << std::endl;
+    cout << "<- cxRead (Partner=" << *PartnerHandle << ", Size=" << lSize << ") =" << rc << endl;
     #endif
     if (rc != CXRC_MORE_DATA && rc != CXRC_OK && rc != CXRC_BUFFER_TOO_SMALL)
       break;
@@ -2499,7 +2498,7 @@ long ReadTrace(long OwnHandle, long *PartnerHandle, long *lType, aMap& Data, lon
     {
       case TT_CMDSTOP01:
         #ifdef DEBUGOUT
-        std::cout << "readCmdStop01" << std::endl;
+        cout << "readCmdStop01" << endl;
         #endif
         break;
       case TT_TEXT01:
@@ -2534,12 +2533,12 @@ long ReadTrace(long OwnHandle, long *PartnerHandle, long *lType, aMap& Data, lon
         break;
       case TT_CMDSHUTDOWN01:
         #ifdef DEBUGOUT
-        std::cout << "readCmdShutdown01" << std::endl;
+        cout << "readCmdShutdown01" << endl;
         #endif
         break;
       case TT_CMDINITLISTEN01:
         #ifdef DEBUGOUT
-        std::cout << "readCmdInitListen01" << std::endl;
+        cout << "readCmdInitListen01" << endl;
         #endif
         break;
       case TT_CMDINIT03:
@@ -2611,7 +2610,7 @@ long writeCrypt01(long OwnHandle, long PartnerHandle, long lTraceLevel, const ch
   long lType = TT_CRYPT01;
 
   #ifdef DEBUGOUT
-    std::cout << "writeCrypt01: " << lTraceLevel << "," << non_null(pszFile) << "," << sLine << "," << non_null(pszFunction) << "," << lDumpSize << std::endl;
+    cout << "writeCrypt01: " << lTraceLevel << "," << non_null(pszFile) << "," << sLine << "," << non_null(pszFunction) << "," << lDumpSize << endl;
   #endif
 
   osGetDateTime (&(FixedData.timestamp));
@@ -2674,12 +2673,12 @@ long writeCrypt01(long OwnHandle, long PartnerHandle, long lTraceLevel, const ch
     else
     {
       #ifdef DEBUGOUT
-      std::cout << "-> cxWrite (Own=" << OwnHandle <<", Partner=" << PartnerHandle << ", Size=" << lWritten << ")" << std::endl;
+      cout << "-> cxWrite (Own=" << OwnHandle <<", Partner=" << PartnerHandle << ", Size=" << lWritten << ")" << endl;
       dump(pBuffer, lWritten);
       #endif
       result= cxWrite(OwnHandle, PartnerHandle, pBuffer, &lWritten);
       #ifdef DEBUGOUT
-      std::cout << "<- cxWrite (Size=" << lWritten << ")=" << result << std::endl;
+      cout << "<- cxWrite (Size=" << lWritten << ")=" << result << endl;
       #endif
     }
     if (lWritten != lSize  && result == CXRC_OK)
@@ -2744,7 +2743,7 @@ static long readCrypt01(aMap &Data, char *pCopyBuffer, const char *pBuffer, long
         {
           Data.set(DN_BDUMP, aObject(pPos, lCopy));
           #ifdef DEBUGOUT
-            std::cout << "readCrypt01: " << FixedData.lTraceLevel << "," << non_null(Data.get(DN_SFILE).strObject()) << "," << FixedData.sLine << "," << non_null(Data.get(DN_SFUNCTION).strObject()) << "," << Data.get(DN_BDUMP).count() << std::endl;
+            cout << "readCrypt01: " << FixedData.lTraceLevel << "," << non_null(Data.get(DN_SFILE).strObject()) << "," << FixedData.sLine << "," << non_null(Data.get(DN_SFUNCTION).strObject()) << "," << Data.get(DN_BDUMP).count() << endl;
           #endif
           result= CXRC_OK;
         }
@@ -2752,7 +2751,7 @@ static long readCrypt01(aMap &Data, char *pCopyBuffer, const char *pBuffer, long
         {
           Data.set(DN_BDUMP, "<null>");
           #ifdef DEBUGOUT
-            std::cout << "readCrypt01: " << FixedData.lTraceLevel << "," << non_null(Data.get(DN_SFILE).strObject()) << "," << FixedData.sLine << "," << non_null(Data.get(DN_SFUNCTION).strObject()) << "," << Data.get(DN_BDUMP).count() << std::endl;
+            cout << "readCrypt01: " << FixedData.lTraceLevel << "," << non_null(Data.get(DN_SFILE).strObject()) << "," << FixedData.sLine << "," << non_null(Data.get(DN_SFUNCTION).strObject()) << "," << Data.get(DN_BDUMP).count() << endl;
           #endif
           result= CXRC_OK;
         }
@@ -2786,7 +2785,7 @@ long writeCrypt02(long OwnHandle, long PartnerHandle, const char* pszTopic, cons
   long lType = TT_CRYPT02;
 
   #ifdef DEBUGOUT
-    std::cout << "writeCrypt02: " << non_null(pszTopic) << "," << non_null(pszFile) << "," << sLine << "," << non_null(pszFunction) << "," << lDumpSize << std::endl;
+    cout << "writeCrypt02: " << non_null(pszTopic) << "," << non_null(pszFile) << "," << sLine << "," << non_null(pszFunction) << "," << lDumpSize << endl;
   #endif
 
 
@@ -2861,12 +2860,12 @@ long writeCrypt02(long OwnHandle, long PartnerHandle, const char* pszTopic, cons
     else
     {
       #ifdef DEBUGOUT
-      std::cout << "-> cxWrite (Own=" << OwnHandle <<", Partner=" << PartnerHandle << ", Size=" << lWritten << ")" << std::endl;
+      cout << "-> cxWrite (Own=" << OwnHandle <<", Partner=" << PartnerHandle << ", Size=" << lWritten << ")" << endl;
       dump(pBuffer, lWritten);
       #endif
       result= cxWrite(OwnHandle, PartnerHandle, pBuffer, &lWritten);
       #ifdef DEBUGOUT
-      std::cout << "<- cxWrite (Size=" << lWritten << ")=" << result << std::endl;
+      cout << "<- cxWrite (Size=" << lWritten << ")=" << result << endl;
       #endif
     }
     if (lWritten != lSize  && result == CXRC_OK)
@@ -2934,7 +2933,7 @@ static long readCrypt02(aMap &Data, char *pCopyBuffer, const char *pBuffer, long
           {
             Data.set(DN_BDUMP, aObject(pPos, lCopy));
             #ifdef DEBUGOUT
-              std::cout << "readCrypt02: " << non_null(Data.get(DN_STOPIC).strObject()) << "," << non_null(Data.get(DN_SFILE).strObject()) << "," << FixedData.sLine << "," << non_null(Data.get(DN_SFUNCTION).strObject()) << "," << Data.get(DN_BDUMP).count() << std::endl;
+              cout << "readCrypt02: " << non_null(Data.get(DN_STOPIC).strObject()) << "," << non_null(Data.get(DN_SFILE).strObject()) << "," << FixedData.sLine << "," << non_null(Data.get(DN_SFUNCTION).strObject()) << "," << Data.get(DN_BDUMP).count() << endl;
             #endif
             result= CXRC_OK;
           }
@@ -2942,7 +2941,7 @@ static long readCrypt02(aMap &Data, char *pCopyBuffer, const char *pBuffer, long
           {
             Data.set(DN_BDUMP, "<null>");
             #ifdef DEBUGOUT
-              std::cout << "readCrypt02: " << non_null(Data.get(DN_STOPIC).strObject()) << "," << non_null(Data.get(DN_SFILE).strObject()) << "," << FixedData.sLine << "," << non_null(Data.get(DN_SFUNCTION).strObject()) << "," << Data.get(DN_BDUMP).count() << std::endl;
+              cout << "readCrypt02: " << non_null(Data.get(DN_STOPIC).strObject()) << "," << non_null(Data.get(DN_SFILE).strObject()) << "," << FixedData.sLine << "," << non_null(Data.get(DN_SFUNCTION).strObject()) << "," << Data.get(DN_BDUMP).count() << endl;
             #endif
             result= CXRC_OK;
           }
@@ -2978,7 +2977,7 @@ long writeCmdMove01(long OwnHandle, long PartnerHandle, const char *pszPath, cxB
   long lType = TT_CMDMOVE01;
 
   #ifdef DEBUGOUT
-    std::cout << "writeCmdMove01: " << non_null(pszPath) << std::endl;
+    cout << "writeCmdMove01: " << non_null(pszPath) << endl;
   #endif
 
   if (pszPath)
@@ -3006,12 +3005,12 @@ long writeCmdMove01(long OwnHandle, long PartnerHandle, const char *pszPath, cxB
     else
     {
       #ifdef DEBUGOUT
-      std::cout << "-> cxWrite (Own=" << OwnHandle <<", Partner=" << PartnerHandle << ", Size=" << lWritten << ")" << std::endl;
+      cout << "-> cxWrite (Own=" << OwnHandle <<", Partner=" << PartnerHandle << ", Size=" << lWritten << ")" << endl;
       dump(pBuffer, lWritten);
       #endif
       result= cxWrite(OwnHandle, PartnerHandle, pBuffer, &lWritten);
       #ifdef DEBUGOUT
-      std::cout << "<- cxWrite (Size=" << lWritten << ")=" << result << std::endl;
+      cout << "<- cxWrite (Size=" << lWritten << ")=" << result << endl;
       #endif
     }
     if (lWritten != lSize  && result == CXRC_OK)
@@ -3050,7 +3049,7 @@ static long readCmdMove01(aMap &Data, char *pCopyBuffer, const char *pBuffer, lo
     {
       Data.set(DN_SPATH, pCopyBuffer);
       #ifdef DEBUGOUT
-        std::cout << "readCmdMove01: " << non_null(Data.get(DN_SPATH).strObject()) << std::endl;
+        cout << "readCmdMove01: " << non_null(Data.get(DN_SPATH).strObject()) << endl;
       #endif
 
       result= CXRC_OK;
@@ -3085,7 +3084,7 @@ long writeTrack01(long OwnHandle, long PartnerHandle, long lTraceLevel, const ch
 
 
   #ifdef DEBUGOUT
-    std::cout << "writeTrack01: " << lTraceLevel << "," << non_null(pszFile) << "," << sLine << "," << non_null(pszFunction) << "," << trackId << std::endl;
+    cout << "writeTrack01: " << lTraceLevel << "," << non_null(pszFile) << "," << sLine << "," << non_null(pszFunction) << "," << trackId << endl;
   #endif
 
 
@@ -3157,12 +3156,12 @@ long writeTrack01(long OwnHandle, long PartnerHandle, long lTraceLevel, const ch
     else
     {
       #ifdef DEBUGOUT
-      std::cout << "-> cxWrite (Own=" << OwnHandle <<", Partner=" << PartnerHandle << ", Size=" << lWritten << ")" << std::endl;
+      cout << "-> cxWrite (Own=" << OwnHandle <<", Partner=" << PartnerHandle << ", Size=" << lWritten << ")" << endl;
       dump(pBuffer, lWritten);
       #endif
       result= cxWrite(OwnHandle, PartnerHandle, pBuffer, &lWritten);
       #ifdef DEBUGOUT
-      std::cout << "<- cxWrite (Size=" << lWritten << ")=" << result << std::endl;
+      cout << "<- cxWrite (Size=" << lWritten << ")=" << result << endl;
       #endif
     }
     if (lWritten != lSize  && result == CXRC_OK)
@@ -3239,7 +3238,7 @@ static long readTrack01(aMap &Data, char *pCopyBuffer, const char *pBuffer, long
           {
             Data.set(DN_STEXT, pCopyBuffer);
             #ifdef DEBUGOUT
-              std::cout << "readTrack01: " << FixedData.lTraceLevel << "," << non_null(Data.get(DN_SFILE).strObject()) << "," << FixedData.sLine << "," << Data.get(DN_SFUNCTION).strObject() << "," << Data.get(DN_LTRACKID).numObject() << std::endl;
+              cout << "readTrack01: " << FixedData.lTraceLevel << "," << non_null(Data.get(DN_SFILE).strObject()) << "," << FixedData.sLine << "," << Data.get(DN_SFUNCTION).strObject() << "," << Data.get(DN_LTRACKID).numObject() << endl;
             #endif
             result= CXRC_OK;
           }
@@ -3273,7 +3272,7 @@ long writeTrack02(long OwnHandle, long PartnerHandle, const char *pszTopic, cons
   long lType = TT_TRACK02;
 
   #ifdef DEBUGOUT
-    std::cout << "writeTrack02: " << non_null(pszTopic) << "," << non_null(pszFile) << "," << sLine << "," << non_null(pszFunction) << "," << trackId << std::endl;
+    cout << "writeTrack02: " << non_null(pszTopic) << "," << non_null(pszFile) << "," << sLine << "," << non_null(pszFunction) << "," << trackId << endl;
   #endif
 
 
@@ -3359,12 +3358,12 @@ long writeTrack02(long OwnHandle, long PartnerHandle, const char *pszTopic, cons
     else
     {
       #ifdef DEBUGOUT
-      std::cout << "-> cxWrite (Own=" << OwnHandle <<", Partner=" << PartnerHandle << ", Size=" << lWritten << ")" << std::endl;
+      cout << "-> cxWrite (Own=" << OwnHandle <<", Partner=" << PartnerHandle << ", Size=" << lWritten << ")" << endl;
       dump(pBuffer, lWritten);
       #endif
       result= cxWrite(OwnHandle, PartnerHandle, pBuffer, &lWritten);
       #ifdef DEBUGOUT
-      std::cout << "<- cxWrite (Size=" << lWritten << ")=" << result << std::endl;
+      cout << "<- cxWrite (Size=" << lWritten << ")=" << result << endl;
       #endif
     }
     if (lWritten != lSize  && result == CXRC_OK)
@@ -3401,7 +3400,7 @@ long writeCooked01(long OwnHandle, long PartnerHandle, const char *pszText, cxBu
   long lType = TT_COOKED01;
 
   #ifdef DEBUGOUT
-    std::cout << "writeCooked01: " << non_null(pszText) << std::endl;
+    cout << "writeCooked01: " << non_null(pszText) << endl;
   #endif
 
   if (pszText)
@@ -3429,12 +3428,12 @@ long writeCooked01(long OwnHandle, long PartnerHandle, const char *pszText, cxBu
     else
     {
       #ifdef DEBUGOUT
-      std::cout << "-> cxWrite (Own=" << OwnHandle <<", Partner=" << PartnerHandle << ", Size=" << lWritten << ")" << std::endl;
+      cout << "-> cxWrite (Own=" << OwnHandle <<", Partner=" << PartnerHandle << ", Size=" << lWritten << ")" << endl;
       dump(pBuffer, lWritten);
       #endif
       result= cxWrite(OwnHandle, PartnerHandle, pBuffer, &lWritten);
       #ifdef DEBUGOUT
-      std::cout << "<- cxWrite (Size=" << lWritten << ")=" << result << std::endl;
+      cout << "<- cxWrite (Size=" << lWritten << ")=" << result << endl;
       #endif
     }
     if (lWritten != lSize  && result == CXRC_OK)
@@ -3515,7 +3514,7 @@ static long readTrack02(aMap &Data, char *pCopyBuffer, const char *pBuffer, long
             {
               Data.set(DN_STOPIC, pCopyBuffer);
               #ifdef DEBUGOUT
-                std::cout << "readTrack02: " << non_null(Data.get(DN_STOPIC).strObject()) << "," << non_null(Data.get(DN_SFILE).strObject()) << "," << FixedData.sLine << "," << non_null(Data.get(DN_SFUNCTION).strObject()) << "," << Data.get(DN_LTRACKID).numObject() << std::endl;
+                cout << "readTrack02: " << non_null(Data.get(DN_STOPIC).strObject()) << "," << non_null(Data.get(DN_SFILE).strObject()) << "," << FixedData.sLine << "," << non_null(Data.get(DN_SFUNCTION).strObject()) << "," << Data.get(DN_LTRACKID).numObject() << endl;
               #endif
 
               result= CXRC_OK;
@@ -3556,7 +3555,7 @@ static long readCooked01(aMap &Data, char *pCopyBuffer, const char *pBuffer, lon
     {
       Data.set(DN_SCOOKED, pCopyBuffer);
       #ifdef DEBUGOUT
-        std::cout << "readCooked01: " << non_null(Data.get(DN_SCOOKED).strObject()) << std::endl;
+        cout << "readCooked01: " << non_null(Data.get(DN_SCOOKED).strObject()) << endl;
       #endif
 
       result= CXRC_OK;
diff --git a/SelfServiceCommon/Services/cpp/TrcServ/src/decrypt.cpp b/SelfServiceCommon/Services/cpp/TrcServ/src/decrypt.cpp
index 531fbcc8..d6d780e8 100644
--- a/SelfServiceCommon/Services/cpp/TrcServ/src/decrypt.cpp
+++ b/SelfServiceCommon/Services/cpp/TrcServ/src/decrypt.cpp
@@ -176,7 +176,7 @@ void readLine(std::istream& in, std::string& result, bool& isHexDump, bool& isEn
   isEnd= (state != rs_stop);
 }
 
-void hexdump(std::ostream out, const std::string text)
+void hexdump( std::ostream& out, const std::string& text)
 {
   int i;
   int j;
@@ -186,7 +186,7 @@ void hexdump(std::ostream out, const std::string text)
   for(i = 0; i < lDumpSize; i += 16)
   {
     sprintf(szBuffer,"[%04x,%04d] ",i, i);
-    out << szBuffer;
+    out << std::string(szBuffer);
 
     for(j = 0; j < 16 && (i+j) < lDumpSize; j++)
     {
-- 
2.41.0.windows.1

