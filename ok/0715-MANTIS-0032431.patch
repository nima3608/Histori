From 9f1d53a8ca3f54724cbb336bac3134a110cecfe5 Mon Sep 17 00:00:00 2001
From: motten <motten@90b65887-3827-0410-9a23-83215b262276>
Date: Fri, 22 Jan 2016 12:28:34 +0000
Subject: [PATCH 0715/1077] MANTIS 0032431 -deleted openThreadToken(), cause it
 hasn't any functionality

git-svn-id: svn://localhost/SelfServiceCommon/trunk@956 90b65887-3827-0410-9a23-83215b262276
---
 .../cpp/Systools/src/mSysProcessW32.cpp       | 39 +++++--------------
 1 file changed, 9 insertions(+), 30 deletions(-)

diff --git a/SelfServiceCommon/Massai/cpp/Systools/src/mSysProcessW32.cpp b/SelfServiceCommon/Massai/cpp/Systools/src/mSysProcessW32.cpp
index 70a33380..398aa5fd 100644
--- a/SelfServiceCommon/Massai/cpp/Systools/src/mSysProcessW32.cpp
+++ b/SelfServiceCommon/Massai/cpp/Systools/src/mSysProcessW32.cpp
@@ -394,7 +394,6 @@ namespace
       DWORD getAccess();
       void openProcess();
       void closeHandle(HANDLE& handle, const char* where);
-      HANDLE openThreadToken();
       void initCPU();
 
 
@@ -644,26 +643,6 @@ namespace
     handle = INVALID_HANDLE_VALUE;
   }
 
-  HANDLE myChild::openThreadToken()
-  {
-    HANDLE hToken;
-    if(!OpenThreadToken(GetCurrentThread(), TOKEN_ADJUST_DEFAULT | TOKEN_ADJUST_PRIVILEGES | TOKEN_QUERY, FALSE, &hToken))
-    {
-        if(GetLastError() == ERROR_NO_TOKEN)
-        {
-            if(!ImpersonateSelf(SecurityImpersonation))
-            {
-                logLastError(M_Logging, "ImpersonateSelf");
-            }
-            if(!OpenThreadToken(GetCurrentThread(), TOKEN_ADJUST_DEFAULT | TOKEN_ADJUST_PRIVILEGES | TOKEN_QUERY, FALSE, &hToken))
-            {
-                logLastError(M_Logging, "OpenThreadToken");
-            }
-         }
-    }
-    return hToken;
-  }
-
   void myChild::openProcess()
   {
     if(!SetPrivilege(SE_DEBUG_NAME, TRUE))
@@ -676,8 +655,6 @@ namespace
         logLastError(M_Logging, "SetPrivilege (SE_IMPERSONATE_NAME)");
     }
 
-    HANDLE hToken = openThreadToken();
-
     M_CanTerminate = checkAccess(PROCESS_TERMINATE);
     M_CanQuery = checkAccess(PROCESS_QUERY_INFORMATION);
     M_CanSynchronize = checkAccess(SYNCHRONIZE);
@@ -686,8 +663,6 @@ namespace
 
     M_Internal.handle = M_HandleProcess;
     M_Internal.id = M_ProcessId;
-
-    closeHandle(hToken, "openProcess: CloseHandle threadToken");
   }
 
 
@@ -1964,7 +1939,7 @@ namespace
     {
       if( M_Logging )
       {
-        std::string errorString = "ProcID=[" + getProcessId() + "] getCreationTime() - query not allowed";
+        std::string errorString = "ProcID=[" + getProcessId() + "] getProcessMemoryUsage() - query not allowed";
         M_Logging->lineOut( errorString.c_str() );
       }
     }
@@ -1985,14 +1960,16 @@ namespace
       }
       else
       {
-        logLastError(M_Logging, "GetProcessMemoryInfo");
+        std::string errorString = "ProcID=[" + getProcessId() + "] GetProcessMemoryInfo";
+        logLastError(M_Logging, errorString.c_str());
       }
     }
     else
     {
       if( M_Logging )
       {
-        M_Logging->lineOut( "getProcessPagefileUsage - query not allowed" );
+        std::string errorString = "ProcID=[" + getProcessId() + "] getProcessPagefileUsage() - query not allowed";
+        M_Logging->lineOut( errorString.c_str() );
       }
     }
 
@@ -2022,14 +1999,16 @@ namespace
       }
       else
       {
-        logLastError(M_Logging, "GetModuleFileNameEx");
+        std::string errorString = "ProcID=[" + getProcessId() + "] QueryFullProcessImageName";
+        logLastError(M_Logging, errorString.c_str());
       }
     }
     else
     {
       if( M_Logging )
       {
-        M_Logging->lineOut( "getProcessDirectory - query not allowed" );
+        std::string errorString = "ProcID=[" + getProcessId() + "] getProcessDirectory() - query not allowed";
+        M_Logging->lineOut( errorString.c_str() );
       }
     }
 
-- 
2.41.0.windows.1

