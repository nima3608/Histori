From b406b6bb9cff902a972031cc543101ff01533d2b Mon Sep 17 00:00:00 2001
From: rbuschow <rbuschow@90b65887-3827-0410-9a23-83215b262276>
Date: Thu, 25 Aug 2016 13:15:49 +0000
Subject: [PATCH 0788/1077] MANTIS 41953 AEA Conveyor DeviceHandler

rename additional methods in aeaDevice.idl for aea conveyor:
RC enable()
RC disable()

git-svn-id: svn://localhost/SelfServiceCommon/trunk@1077 90b65887-3827-0410-9a23-83215b262276
---
 .../Massai/idl/Massai/aeaDevice.idl           | 26 +++++++++----------
 1 file changed, 13 insertions(+), 13 deletions(-)

diff --git a/SelfServiceCommon/Massai/idl/Massai/aeaDevice.idl b/SelfServiceCommon/Massai/idl/Massai/aeaDevice.idl
index 2e875b35..798a8368 100644
--- a/SelfServiceCommon/Massai/idl/Massai/aeaDevice.idl
+++ b/SelfServiceCommon/Massai/idl/Massai/aeaDevice.idl
@@ -25,7 +25,7 @@ module aeaDevice
 {
     typedef sequence<octet> aeaData;
 
-    /** Returncodes returned by the device handler. */   
+    /** Returncodes returned by the device handler. */
     enum RC
     {
         RC_OK,             /**< Command is accepted, no response indication will be sent */
@@ -36,28 +36,28 @@ module aeaDevice
         RC_CORBA           /**< Command cannot be processes due to CORBA problems, device is completely unavailable */
     };
 
-    /** Defines the command structure that is passed to this device. */    
+    /** Defines the command structure that is passed to this device. */
     struct command
     {
         long requestID; /**< a unique request identifier */
         aeaData  data;  /**< the command data, e.g. an AEA data stream */
     };
 
-    /** Defines the indication structure that is received from this device. */    
+    /** Defines the indication structure that is received from this device. */
     struct indication
     {
         long requestID; /**< a unique request identifier, 0 for unsolicited indication; id from according command */
         aeaData  data;  /**< the response data, e.g. an AEA data stream */
     };
 
-    /** Defines the status values that is received from this device. */    
+    /** Defines the status values that is received from this device. */
     enum status
     {
         STAT_AVAILABLE,
         STAT_UNAVAILABLE
     };
 
-    /** Listener interface to receive indications from the device components. */    
+    /** Listener interface to receive indications from the device components. */
     interface indicationListener
     {
         /** Passes an indication to the listening instance
@@ -71,28 +71,28 @@ module aeaDevice
     
     interface servant
     {
-        /** Prepare a device session */
-        RC prepare();
+        /** Enable a device usage */
+        RC enable();
+        
+        /** disable a device usage */
+        RC disable();
         
         /** Request a status indication */
         RC requestStatus();
     
-        /** Reset a device session */
-        RC reset();
-        
         /** Sets a listener to this device handler.
          *  @param il - The indication listener
-         *  @return a return code as specified in this module */        
+         *  @return a return code as specified in this module */
         RC setListener  (in indicationListener il);
         
         /** Removes a listener from this device handler.
          *  @param il - The indication listener
-         *  @return a return code as specified in this module */        
+         *  @return a return code as specified in this module */
         RC rmvListener  (in indicationListener il);
 
         /** Executes a command on this device handler.
          *  @param cmd - The command being executed
-         *  @return a return code as specified in this module */        
+         *  @return a return code as specified in this module */
         RC sendCommand (in command cmd);
     };
 };
-- 
2.41.0.windows.1

