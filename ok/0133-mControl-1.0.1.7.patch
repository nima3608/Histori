From adbd4efb027b78d60f05ecf88fe150edcff0f133 Mon Sep 17 00:00:00 2001
From: jkreierh <jkreierh@90b65887-3827-0410-9a23-83215b262276>
Date: Fri, 18 Nov 2011 09:19:53 +0000
Subject: [PATCH 0133/1000] mControl 1.0.1.7

git-svn-id: svn://localhost/SelfServiceCommon/trunk@251 90b65887-3827-0410-9a23-83215b262276
---
 .../Massai/cpp/Systools/src/TestChild.cpp     | 38 +++++++++++++++++++
 .../cpp/Systools/src/TestSysProcess.cpp       | 30 +++++++++++++--
 2 files changed, 65 insertions(+), 3 deletions(-)
 create mode 100644 SelfServiceCommon/Massai/cpp/Systools/src/TestChild.cpp

diff --git a/SelfServiceCommon/Massai/cpp/Systools/src/TestChild.cpp b/SelfServiceCommon/Massai/cpp/Systools/src/TestChild.cpp
new file mode 100644
index 00000000..bae8d7dd
--- /dev/null
+++ b/SelfServiceCommon/Massai/cpp/Systools/src/TestChild.cpp
@@ -0,0 +1,38 @@
+/**
+ **************************************************************************
+ *
+ * @file TestChild.cpp
+ *
+ * Simple application to test mSysProcess functionality.
+ *
+ **************************************************************************
+**/
+
+#include <iostream>
+#include <string>
+using namespace std;
+
+
+int main()
+{
+   cout << "Eingabe? (\"ende\" beendet)" << endl;
+   cout << "Entry? (use \"bye\" to terminate this)" << endl;
+   string Input;
+   int Loopcount = 0;
+   while( Input != "bye" )
+   {
+      cin >> Input;
+      cout << "Entry=[" << Input << "]" << endl;
+      cerr << "Loop " << Loopcount++ << endl;
+   }
+   return 0;
+}
+
+
+/**
+ **************************************************************************
+ *
+ * End of file
+ *
+ **************************************************************************
+**/
diff --git a/SelfServiceCommon/Massai/cpp/Systools/src/TestSysProcess.cpp b/SelfServiceCommon/Massai/cpp/Systools/src/TestSysProcess.cpp
index 523893b1..429657bd 100644
--- a/SelfServiceCommon/Massai/cpp/Systools/src/TestSysProcess.cpp
+++ b/SelfServiceCommon/Massai/cpp/Systools/src/TestSysProcess.cpp
@@ -12,7 +12,9 @@
  **************************************************************************
 **/
 
-#define USE_MYPROCESS_CLASS     1
+#define USE_MYPROCESS_CLASS                     1
+#define USE_MYPROCESS_CLASS_FOR_SECONDS         10
+
 
 #include "systools/mSysProcess.hpp"
 
@@ -208,10 +210,16 @@ public:
 
    ~myProcess()
    {
+      cout << "myProcess::~myProcess ..." << endl;
+      delete M_Child;
+      cout << "myProcess::~myProcess 0" << endl;
       unsigned long Exit = M_Child->waitForTermination().getExitCode();
+      cout << "myProcess::~myProcess 1" << endl;
       delete M_StdinThread;
+      cout << "myProcess::~myProcess 2" << endl;
       delete M_Child;
-      cout << "Exit=" << Exit << endl;
+      cout << "myProcess child exit=" << Exit << endl;
+      cout << "myProcess::~myProcess." << endl;
    }
 
    mSysProcess::status getStatus() const
@@ -256,6 +264,21 @@ int main( int argc, char **argv )
 
 #if USE_MYPROCESS_CLASS
 
+#if USE_MYPROCESS_CLASS_FOR_SECONDS
+   // --- Cooked mSysProcess use
+   myProcess * const MyProcess = new myProcess
+      (
+         Parent,
+         argv[1],
+         Arg.option( "HIDE" ) != 0,
+         Arg.option( "REDIRECT-STDIN" ) != 0
+      );
+   mSysThread::sleep( 1000 * USE_MYPROCESS_CLASS_FOR_SECONDS );
+   cout << "delete ..." << endl;
+   delete MyProcess;
+   cout << "delete." << endl;
+   // ---
+#else
    // --- Cooked mSysProcess use
    myProcess MyProcess
       (
@@ -265,6 +288,7 @@ int main( int argc, char **argv )
          Arg.option( "REDIRECT-STDIN" ) != 0
       );
    // ---
+#endif
 
 #else // #if USE_MYPROCESS_CLASS
 
@@ -285,7 +309,7 @@ int main( int argc, char **argv )
       StdinThread.start( *Child );
    unsigned long Exit = Child->waitForTermination().getExitCode();
    mSysThread::sleep( 100 );
-   cout << "Exit=" << Exit << endl;
+   cout << "main child exit=" << Exit << endl;
    // ---
 
 #endif // #if USE_MYPROCESS_CLASS
-- 
2.41.0.windows.1

