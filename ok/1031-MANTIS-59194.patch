From cdb5bed553791573e324e46de517d782beffa9df Mon Sep 17 00:00:00 2001
From: kkluge <kkluge@90b65887-3827-0410-9a23-83215b262276>
Date: Wed, 28 Oct 2020 15:20:03 +0000
Subject: [PATCH 1031/1076] MANTIS 59194 added BSMServer yaml for swagger

git-svn-id: svn://localhost/SelfServiceCommon/trunk@1603 90b65887-3827-0410-9a23-83215b262276
---
 ...IPS_BSMServer_BaggageMessage_IF_1_0_6.yaml | 131 ++++++++++++++++++
 1 file changed, 131 insertions(+)
 create mode 100644 SelfServiceCommon/Massai/swagger/BSMServer/IPS_BSMServer_BaggageMessage_IF_1_0_6.yaml

diff --git a/SelfServiceCommon/Massai/swagger/BSMServer/IPS_BSMServer_BaggageMessage_IF_1_0_6.yaml b/SelfServiceCommon/Massai/swagger/BSMServer/IPS_BSMServer_BaggageMessage_IF_1_0_6.yaml
new file mode 100644
index 00000000..98e1fcfa
--- /dev/null
+++ b/SelfServiceCommon/Massai/swagger/BSMServer/IPS_BSMServer_BaggageMessage_IF_1_0_6.yaml
@@ -0,0 +1,131 @@
+swagger: '2.0'
+info:
+  description: IPS BSM Server BSM/BPM REST Interface
+  version: 1.0.6
+  title: IPS BSM Server BSM/BPM Interface
+host: localhost:8090
+basePath: /BSMServer
+tags:
+  - name: BaggageMessage
+    description: Send a baggage message to the IPS BSM Server
+  - name: Status
+    description: Check the status of the IPS BSM Server
+schemes:
+  - http
+paths:
+  /BaggageMessage/send:
+    post:
+      tags:
+        - BaggageMessage
+      summary: Send a BSM or BPM to the IPS BSM Server
+      description: Send BSM or BPM
+      consumes:
+        - application/json
+      produces:
+        - application/json
+      parameters:
+        - in: body
+          name: body
+          description: Baggage Message object
+          required: true
+          schema:
+            $ref: '#/definitions/BaggageMessageInformation'
+      responses:
+        '200':
+          description: BaggageData was successfully processed
+        '400':
+          description: Error bad request
+        '404':
+          description: BSM/BPM LPN not found
+        '406':
+          description: BSM/BPM validation error
+        '500':
+          description: Server error
+  /statusREST:
+    get:
+      tags:
+        - Status
+      summary: Check the status of the IPS BSM Server
+      description: Get Status
+      consumes:
+        - application/json
+      produces:
+        - application/json
+      responses:
+        '200':
+          description: Status
+          schema:
+            $ref: '#/definitions/StatusInformation'
+        '400':
+          description: Error bad request
+          schema:
+            $ref: '#/definitions/StatusInformation'
+        '500':
+          description: Server error
+          schema:
+            $ref: '#/definitions/StatusInformation'
+definitions:
+  BaggageMessageInformation:
+    type: object
+    required:
+      - SenderID
+      - TimeStamp
+      - BaggageMessageData
+    properties:
+      SenderID:
+        type: string
+        description: >-
+          Source of the sender. This can be the IPS Cuss Platform, Biwis or a IPS
+          application that sends BPMs
+          * Generic_BSM - a BSM from a generic service, forward the BSM to the Airport BSM Server
+          * Generic_BPM - a BPM from a generic service, check if a BSM with a corresponding LPN is existing, if found forward the BPM to the related Airport Server
+          * IPSCussPLF - a BSM, check if the Airline (or Kiosk - not yet implemented) of the BSM is configured in the BSM server, if yes store or refresh the BSM in the local database and forward the BSM to the Airport BSM Server
+          * Biwis - check if a small BPM (LPN,Timestamp,Checkinstate) is recieved, if yes check if a BSM with a corresponding LPN is existing, if found generate a new BPM from the received BPM and the found BSM and forward the new BPM to the related Airport Server 
+          * TorontoDSGLikeApp - check if a full BSM is recieved, if yes check if a BSM with a corresponding LPN is existing, if yes forward the new BSM to the related Airport Server and generate a new BPM from the new BSM and forward this BPM to the related Airport Server  
+        enum:
+          - Generic_BSM
+          - Generic_BPM
+          - IPSCussPLF
+          - Biwis
+          - TorontoDSGLikeApp
+        example: IPSCussPLF
+      KioskID:
+        type: string
+        description: Kiosk ID
+        example: SBD_001
+      AppID:
+        description: Application ID
+        type: string
+        example: IPS_SBD
+      TimeStamp:
+        type: string
+        description: Time when the message was sent
+        format: date-time
+      BaggageMessageData:
+        type: string
+        description: The BSM or BPM data
+        example: >-
+          BSM CHG .V/1LYYZ .F/WS0709/10APR/YVR/Y .N/9838779294001
+          .S/Y/5B/C/021//N//A .W/P/2 .P/OSBORNE/DEAN .L/JGYULQ .T/B57D1D
+          .R/.02YYZ/GTE/DKC ENDBSM
+  StatusInformation:
+    type: object
+    properties:
+      Database:
+        type: string
+        enum:
+          - OK
+          - ERROR
+        description: >-
+          Database status
+          * `OK` - Database is connected and running 
+          * `ERROR` - Database is not connected, in error state or not properly initialized 
+      Connector:
+        type: string
+        enum:
+          - OK
+          - ERROR
+        description: >-
+          Connector status
+          * `OK` - BSM server is up and running, the server is connected 
+          * `ERROR` - BSM server is not connected or in error state 
-- 
2.41.0.windows.1

