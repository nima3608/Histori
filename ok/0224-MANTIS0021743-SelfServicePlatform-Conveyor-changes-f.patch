From c10bc0f04f2e8dc63cfe1ff2cd19a67c80bb007b Mon Sep 17 00:00:00 2001
From: tgeisler <tgeisler@90b65887-3827-0410-9a23-83215b262276>
Date: Mon, 5 Dec 2011 12:18:35 +0000
Subject: [PATCH 0224/1077] MANTIS0021743: SelfServicePlatform Conveyor changes
 for VC10 compatibilty

git-svn-id: svn://localhost/SelfServiceCommon/trunk@274 90b65887-3827-0410-9a23-83215b262276
---
 .../generic/fsm/mStateMachineDoc.hpp          | 62 ++++++++++---------
 1 file changed, 33 insertions(+), 29 deletions(-)

diff --git a/SelfServiceCommon/Interfaces/generic/fsm/mStateMachineDoc.hpp b/SelfServiceCommon/Interfaces/generic/fsm/mStateMachineDoc.hpp
index e43ee655..90a793e5 100644
--- a/SelfServiceCommon/Interfaces/generic/fsm/mStateMachineDoc.hpp
+++ b/SelfServiceCommon/Interfaces/generic/fsm/mStateMachineDoc.hpp
@@ -166,7 +166,7 @@ namespace StateMachine
       void addNode( const char * node )
       {
          M_Nodes.push_back(node);
-      };
+	  }
 
       /**
        *
@@ -206,10 +206,10 @@ namespace StateMachine
    {
 
       //! First string.
-      std::string const M_S1;
+      const std::string M_S1;
 
       //! Second string.
-      std::string const M_S2;
+      const std::string M_S2;
 
       //! Event.
       EVT const         M_Evt;
@@ -227,7 +227,7 @@ namespace StateMachine
        * @param Evt:            Event.
        *
       **/
-      graphDocSet( char const * S1, char const * S2, EVT const & Evt ) :
+      graphDocSet( const char* const  S1, const char* const S2, const EVT& Evt ) :
          M_S1( S1 ),
          M_S2( S2 ),
          M_Evt( Evt )
@@ -243,7 +243,7 @@ namespace StateMachine
        * @return equality.
        *
       **/
-      bool isEqual( graphDocSet<EVT> const & Other ) const
+      bool isEqual( const graphDocSet<EVT> & Other ) const
       {
          if( M_S1 != Other.M_S1 )
             return false;
@@ -263,7 +263,6 @@ namespace StateMachine
 
 
    /**
-    *
     * Compare 2 graphDocSet objects.
     *
     * @param A:         The first object.
@@ -273,11 +272,7 @@ namespace StateMachine
     * @return equality.
     *
    **/
-   template <class EVT> bool operator==
-      (
-         graphDocSet<EVT> const & A,
-         graphDocSet<EVT> const & B
-      )
+   template <class EVT> bool operator==( const graphDocSet<EVT>& A, const graphDocSet<EVT>& B )      
    {
       return A.isEqual( B );
    }
@@ -315,13 +310,13 @@ namespace StateMachine
       std::string       M_Label;
 
       //! Already printed?
-      bool              M_Printed;
+      mutable bool      M_Printed;
 
       //! Is the place a reference?
-      bool              M_Reference;
+      mutable bool M_Reference;
 
       //! Place relation.
-      graphDocRelation  M_Relation;
+      mutable graphDocRelation  M_Relation;
 
    public:
 
@@ -332,7 +327,7 @@ namespace StateMachine
        * @param Label:          Place label.
        *
       **/
-      placeFlags( char const * Label ) :
+      placeFlags( const char* const Label ) :
          M_Label( Label ),
          M_Printed( false ),
          M_Reference( false ),
@@ -347,7 +342,7 @@ namespace StateMachine
        * @param Src:            Source object.
        *
       **/
-      placeFlags( placeFlags const & Src ) :
+      placeFlags( const placeFlags& Src ) :
          M_Label( Src.M_Label ),
          M_Printed( Src.M_Printed ),
          M_Reference( Src.M_Reference ),
@@ -362,7 +357,7 @@ namespace StateMachine
        * @return The label.
        *
       **/
-      std::string const & label() const
+      const std::string& label() const
       {
          return M_Label;
       }
@@ -396,7 +391,7 @@ namespace StateMachine
        * Set "printed" attribute.
        *
       **/
-      void toPrinted()
+      void toPrinted() const
       {
          M_Printed = true;
       }
@@ -406,7 +401,7 @@ namespace StateMachine
        * Set "is a reference" attribute.
        *
       **/
-      void toReference()
+      void toReference() const
       {
          M_Reference = true;
       }
@@ -416,7 +411,7 @@ namespace StateMachine
        * Set relation.
        *
       **/
-      void relate( graphDocRelation Relation )
+      void relate( graphDocRelation Relation ) const
       {
          /* Emumeration bit-set */
          unsigned Temp = static_cast<unsigned>( M_Relation );
@@ -448,7 +443,7 @@ namespace StateMachine
     * Compare a placeFlags objects to a string.
     *
    **/
-   bool operator==( placeFlags const & A, char const * X )
+   bool operator==( const placeFlags  & A, const char* const X )
    {
       return ( A.label() == X );
    }
@@ -458,7 +453,7 @@ namespace StateMachine
     * Compare two placeFlags objects.
     *
    **/
-   bool operator==( placeFlags const & A, placeFlags const & B )
+   bool operator==( const placeFlags & A, const placeFlags & B )
    {
       return ( A.label() == B.label() );
    }
@@ -468,7 +463,7 @@ namespace StateMachine
     * Compare two placeFlags objects.
     *
    **/
-   bool operator<( placeFlags const & A, placeFlags const & B )
+   bool operator<( const placeFlags  & A, const placeFlags & B )
    {
       return ( A.label() < B.label() );
    }
@@ -504,10 +499,10 @@ namespace StateMachine
       bool                              M_OnlySet;
 
       //! The place attributes already printed.
-      typedef std::set<placeFlags>      placesFlags;
+      typedef std::set<mutable placeFlags>      placesFlags;
 
       //! The place attributes already printed.
-      placesFlags                       M_PlacesFlags;
+      mutable placesFlags                       M_PlacesFlags;
 
       //! The places already printed.
       std::set<docState const *>        M_PlacesSeen;
@@ -745,14 +740,23 @@ namespace StateMachine
                {
                   if( M_Only.match( StaName ) )
                   {
-                     labelFlags( StaClusterName )->relate( REL_SELECTED );
+					const placeFlags& PlSta = *labelFlags( StaClusterName );
+                     /*labelFlags( StaClusterName )*/const_cast<placeFlags*>(&PlSta)->relate( REL_SELECTED );
+                     //placesFlags::iterator itp = labelFlags( TgtName );
+					const placeFlags& PlTgt = *labelFlags( TgtName );
                      if( M_Only.match( TgtName ) )
-                        labelFlags( TgtName )->relate( REL_SELECTED );
+                        //itp->relate( REL_SELECTED );
+						const_cast<placeFlags*>( &PlTgt )->relate( REL_SELECTED );
                      else
-                        labelFlags( TgtName )->relate( REL_TARGET );
+                        //itp->relate( REL_TARGET );
+						const_cast<placeFlags*>( &PlTgt )->relate( REL_TARGET );
                   }
                   else
-                     labelFlags( StaClusterName )->relate( REL_SOURCE );
+				  {
+					const placeFlags& PlSta = *labelFlags( StaClusterName );
+						 /*labelFlags( StaClusterName )*/
+					const_cast<placeFlags*>(&PlSta)->relate( REL_SOURCE );
+				  }					 
                }
                else
                {
-- 
2.41.0.windows.1

